{"version":3,"file":"bundle.js","sources":["node_modules/grunt-browserify/node_modules/browserify/node_modules/browser-pack/_prelude.js","src/asty-astq.js"],"names":["ASTY","require","ASTQ","ASTQAdapter","taste","getParentNode","node","parent","getChildNodes","childs","getNodeType","type","getNodeAttrNames","attrs","getNodeAttrValue","attr","get","ASTYASTQ","this","_get","Object","getPrototypeOf","prototype","call","astq","adapter","extend","query","selector","params","trace","module","exports"],"mappings":"AAAA;8nBCyBIA,KAAOC,QAAQ,QACfC,KAAOD,QAAQ,QAGfE,YAAW,mBAASA,kCAAAA,EAAW,MAC/BC,aAAiB,WAAe,OAAO,8CACvCC,qBAAiB,SAACC,GAAc,MAAOA,GAAKC,qDAC5CC,qBAAiB,SAACF,GAAc,MAAOA,GAAKG,qDAC5CC,mBAAiB,SAACJ,GAAc,MAAOA,GAAKK,mDAC5CC,wBAAiB,SAACN,GAAc,MAAOA,GAAKO,oDAC5CC,wBAAiB,SAACR,EAAMS,GAAQ,MAAOT,GAAKU,IAAID,iDAN5BZ,KAUpBc,SAAQ,SAA0BjB,GACtB,QADKiB,KAGb,KAAMC,eAAgBD,IAClB,MAAO,IAAIA,EAGfE,MAAAC,OAAAC,eAPaJ,EAAQK,WAAA,cAAAJ,MAAAK,KAAAL,KAUrB,IAAIM,GAAO,GAAItB,KASf,OARAsB,GAAKC,QAAQ,GAAItB,cAGjBe,KAAKQ,QACDC,MAAM,SAACC,EAAUC,EAAQC,GACrB,MAAON,GAAKG,MAAMT,KAAMU,EAAUC,EAAQC,MAG3CZ,sBAnBMD,EAAiBjB,GAAjBiB,GAAiBjB,KAwBtC+B,QAAOC,QAAUf","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/*\n**  ASTy-ASTq -- Abstract Syntax Tree With Integrated Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/*  require both ASTy and ASTq  */\nvar ASTY = require(\"asty\")\nvar ASTQ = require(\"astq\")\n\n/*  define an ASTq adapter for ASTy  */\nlet ASTQAdapter = class ASTQAdapter {\n    taste            (/* node */) { return true           }\n    getParentNode    (node)       { return node.parent()  }\n    getChildNodes    (node)       { return node.childs()  }\n    getNodeType      (node)       { return node.type()    }\n    getNodeAttrNames (node)       { return node.attrs()   }\n    getNodeAttrValue (node, attr) { return node.get(attr) }\n}\n\n/*  define an ASTy super class hooking up ASTq to ASTy  */\nlet ASTYASTQ = class ASTYASTQ extends ASTY {\n    constructor () {\n        /*  allow us to be called without \"new\"  */\n        if (!(this instanceof ASTYASTQ))\n            return new ASTYASTQ()\n\n        /*  give ASTy super class a chance to initialize  */\n        super()\n\n        /*  create an ASTq instance, able to operate on ASTy  */\n        let astq = new ASTQ()\n        astq.adapter(new ASTQAdapter())\n\n        /*  extend this ASTy instance with an ASTq query method  */\n        this.extend({\n            query (selector, params, trace) {\n                return astq.query(this, selector, params, trace)\n            }\n        })\n        return this\n    }\n}\n\n/*  export us as an ASTy super class  */\nmodule.exports = ASTYASTQ\n\n"]}