{"version":3,"file":"bundle.js","sources":["node_modules/grunt-browserify/node_modules/browserify/node_modules/browser-pack/_prelude.js","src/asty-astq.js","node_modules/astq/lib/astq.node.js","node_modules/asty/lib/asty.node.js"],"names":["ASTY","require","ASTQ","ASTQAdapter","taste","getParentNode","node","parent","getChildNodes","childs","getNodeType","type","getNodeAttrNames","attrs","getNodeAttrValue","attr","get","ASTYASTQ","this","_get","Object","getPrototypeOf","prototype","call","astq","adapter","extend","query","selector","params","trace","module","exports","e","define","amd","f","window","global","self","t","n","r","s","o","u","a","i","Error","code","l","length",1,"ASTQAdapterASTY","ASTy",2,"ASTQAdapterMozAST","loc","_this","field","hasOwnProperty","push","Array","forEach","names","undefined",3,"ASTQAdapterXMLDOM","Node","nodeType","nodeName","parentNode","childNodes","slice","attributes","map","getAttribute",4,"_prototypeProperties","child","staticProps","instanceProps","defineProperties","_adapters","register","value","unshift","writable","configurable","unregister","adapters","select",5,"ASTQCache","_index","_oldHead","newer","_newHead","older","_cur","_max","Infinity","_dispose","limit","max","maxOld","arguments","_purge","dispose","cb","keys","each","val","key","values","ctx","bucket","has","peek","expires","Date","now","del","touch","_promote","set","_attach","valOld","_detach","clear",6,"stdfuncs","A","T","depth","pos","pchilds","nth","num","parseInt","first","last","count","String","substr","str","len","lc","toLowerCase","uc","toUpperCase",7,"ASTQFuncs","_funcs","name","func","run","args","apply",8,"_interopRequire","obj","__esModule","_inherits","subClass","superClass","TypeError","create","constructor","enumerable","__proto__","util","ASTQQueryTrace","ASTQQueryExec","funcs","execQuery","Q","traceBegin","output","concat","execPath","traceEnd","nodes","execStep","axis","match","filter","id","matchAndTake","take","execFilter","op","walk","_parent","leftSibling","_i","_parent2","_i2","_parent3","_i3","_parent4","_i4","_parent5","expr","result","execExpr","truthy","execExprConditionalBinary","execExprConditionalTernary","execExprLogical","execExprBitwise","execExprRelational","execExprArithmetical","execExprUnary","execExprFuncCall","execExprAttribute","execExprParam","execExprLiteralString","execExprLiteralRegExp","execExprLiteralNumber","execExprLiteralValue","execExprPath","v1","coerce","v2","Math","pow","v","./astq-query-trace.js","./astq-util.js",9,"prefixOf","prefix1","pad","prefix2","_prefixOf","console","log","replace",10,"PEGUtil","ASTQQueryParse","peg$subclass","ctor","SyntaxError","message","expected","found","offset","line","column","parse","input","peg$reportedPos","peg$computePosDetails","error","peg$buildException","advance","details","startPos","endPos","p","ch","charAt","seenCR","peg$cachedPos","peg$cachedPosDetails","peg$fail","peg$maxFailPos","peg$currPos","peg$maxFailExpected","cleanupExpected","sort","b","description","splice","buildMessage","stringEscape","hex","charCodeAt","toString","expectedDesc","foundDesc","expectedDescs","join","posDetails","peg$parsequery","s0","s1","s2","s3","s4","cached","peg$cache","nextPos","peg$parse_","peg$FAILED","peg$parsequerySet","peg$parseeof","peg$c1","peg$c0","s5","s6","s7","peg$parsequeryPath","peg$c3","peg$silentFails","peg$c4","peg$c5","peg$parsequeryStep","peg$parsequeryStepSubsequent","peg$c6","peg$parsequeryAxis","peg$c7","peg$parsequeryMatch","peg$parsequeryFilter","peg$c8","peg$c10","peg$c11","peg$c12","peg$c13","peg$c14","peg$c15","peg$c16","peg$c17","peg$c18","peg$c19","peg$c20","peg$c21","peg$c22","peg$c23","peg$c24","peg$c25","substring","peg$c26","peg$c9","peg$parseid","peg$c27","peg$c28","peg$c29","peg$c30","peg$c31","peg$c32","peg$parseexprConditional","peg$c33","peg$c34","peg$c35","s8","s9","peg$parseexprLogicalOr","peg$c36","peg$c37","peg$c38","peg$c39","peg$c40","peg$c41","peg$c42","peg$c43","peg$parseexprLogicalAnd","peg$c44","peg$c45","peg$c46","peg$parseexprBitwiseOr","peg$c47","peg$c48","peg$parseexprBitwiseXOr","peg$c49","peg$c50","peg$c51","peg$parseexprBitwiseAnd","peg$c52","peg$c53","peg$parseexprRelational","peg$c54","peg$c55","peg$parseexprBitwiseShift","peg$c56","peg$c57","peg$c58","peg$c59","peg$c60","peg$c61","peg$c62","peg$c63","peg$c64","peg$c65","peg$c66","peg$c67","peg$c68","peg$c69","peg$c70","peg$c71","peg$c72","peg$parseexprAdditive","peg$c73","peg$c74","peg$c75","peg$c76","peg$parseexprMultiplicative","peg$c77","peg$c78","peg$c79","peg$c80","peg$c81","peg$parseexprUnary","peg$c82","peg$c83","peg$c84","peg$c85","peg$c86","peg$c87","peg$c88","peg$c89","peg$parseexprOther","peg$c90","peg$parseexprFunctionCall","peg$parseexprAttribute","peg$parseexprParam","peg$parseexprLiteral","peg$parseexprParenthesis","peg$c91","peg$c92","peg$parseexprFunctionCallParams","peg$c93","peg$c94","peg$c95","peg$c96","peg$c98","peg$c99","peg$c100","peg$c97","peg$c102","peg$c103","peg$c104","peg$c105","peg$c106","peg$c101","peg$parsestring","peg$parseregexp","peg$parsenumber","peg$parsevalue","peg$c107","peg$c109","peg$c110","test","peg$c111","peg$c112","peg$c113","peg$c114","peg$c108","peg$c116","peg$c117","peg$parsestringEscapedChar","peg$c118","peg$c119","peg$c120","peg$c121","peg$c122","peg$c123","peg$c124","peg$c125","peg$c126","peg$c127","peg$c115","peg$c129","peg$c130","peg$c131","peg$c132","peg$c133","peg$c134","peg$c135","peg$c136","peg$c137","peg$c138","peg$c139","peg$c140","peg$c141","peg$c142","peg$c143","peg$c144","peg$c145","peg$c146","peg$c147","peg$c148","peg$c149","peg$c150","peg$c151","peg$c152","peg$c153","peg$c154","peg$c155","peg$c156","peg$c157","peg$c158","peg$c159","peg$c160","peg$c161","peg$c162","peg$c163","peg$c128","peg$c165","peg$c166","peg$c167","peg$c168","peg$c169","peg$c164","s10","s11","peg$c171","peg$c172","peg$c173","peg$c174","peg$c175","peg$c176","peg$c177","peg$c178","peg$c179","peg$c180","peg$c181","peg$c182","peg$c183","peg$c184","peg$c185","peg$c186","peg$c187","peg$c188","peg$c189","peg$c190","peg$c191","peg$c192","peg$c193","peg$c170","peg$c195","peg$c196","peg$c197","peg$c198","peg$c199","peg$c200","peg$c201","peg$c202","peg$c203","peg$c204","peg$c205","peg$c206","peg$c207","peg$c208","peg$c209","peg$c194","peg$parseco","peg$parsews","peg$c210","peg$c212","peg$c213","peg$c214","peg$c215","peg$c216","peg$c211","peg$c218","peg$c219","peg$c217","peg$c220","peg$result","options","peg$startRuleFunctions","peg$startRuleFunction","qs","ast","add","unroll","m","merge","e1","e2","e3","fromCharCode","re","RegExp","parseFloat","NaN","startRule","makeUnroll","makeAST","ASTQQuery","asty","compile","errorMessage","dump","execute","qe","./astq-query-exec.js","pegjs-util",11,"ASTQUtil","isNaN","Boolean","Number",12,"version","major","minor","micro","date",13,"ASTQAdapterMOZAST","ASTQFuncsSTD","ASTQVersion","_adapter","_name","_cache","cache","entries","./astq-adapter-asty.js","./astq-adapter-mozast.js","./astq-adapter-xmldom.js","./astq-adapter.js","./astq-cache.js","./astq-funcs-std.js","./astq-funcs.js","./astq-query.js","./astq-version.js","_dereq_","ASTYBase","init","C","L","O","P","_arguments","_add","JSON","stringify","arg","j","ASTYDump","maxDepth","out","ASTYMerge","takePos","attrMap","attrSource","attrTarget","ASTYWalk","when","_walk","ASTYCtx","ASTYNode","mixins","mixin","proto","method","isA","./asty-base.js","./asty-dump.js","./asty-merge.js","./asty-walk.js"],"mappings":"AAAA;;CEwBC,SAASiC,GAAG,GAAG,gBAAiBD,UAAS,mBAAoBD,QAAOA,OAAOC,QAAQC,QAAS,IAAG,kBAAmBC,SAAQA,OAAOC,IAAID,UAAUD,OAAO,CAAC,GAAIG,EAAE,oBAAoBC,QAAOD,EAAEC,OAAO,mBAAoBC,QAAOF,EAAEE,OAAO,mBAAoBC,QAAOH,EAAEG,MAAMH,EAAElC,KAAK+B,MAAM,WAAqC,MAAO,SAAUA,GAAEO,EAAEC,EAAEC,GAAG,QAASC,GAAEC,EAAEC,GAAG,IAAIJ,EAAEG,GAAG,CAAC,IAAIJ,EAAEI,GAAG,CAAC,GAAIE,GAAkB,kBAAT7C,UAAqBA,OAAQ,KAAI4C,GAAGC,EAAE,MAAOA,GAAEF,GAAE,EAAI,IAAGG,EAAE,MAAOA,GAAEH,GAAE,EAAI,IAAIR,GAAE,GAAIY,OAAM,uBAAuBJ,EAAE,IAAK,MAAMR,GAAEa,KAAK,mBAAmBb,EAAE,GAAIc,GAAET,EAAEG,IAAIZ,WAAYQ,GAAEI,GAAG,GAAGrB,KAAK2B,EAAElB,QAAQ,SAASC,GAAG,GAAIQ,GAAED,EAAEI,GAAG,GAAGX,EAAG,OAAOU,GAAEF,EAAEA,EAAER,IAAIiB,EAAEA,EAAElB,QAAQC,EAAEO,EAAEC,EAAEC,GAAG,MAAOD,GAAEG,GAAGZ,QAAkD,IAAI,GAA1Ce,GAAkB,kBAAT9C,UAAqBA,QAAgB2C,EAAE,EAAEA,EAAEF,EAAES,OAAOP,IAAID,EAAED,EAAEE,GAAI,OAAOD,KAAKS,GAAG,SAASnD,EAAQ8B,GAClxB,YA0BA,IAAIsB,IACAjD,MAAO,SAAeE,GAClB,MAAuB,gBAATA,IAA0C,iBAAdA,GAAKgD,MAEnDjD,cAAe,SAAuBC,GAClC,MAAOA,GAAKC,UAEhBC,cAAe,SAAuBF,GAClC,MAAOA,GAAKG,UAEhBC,YAAa,SAAqBJ,GAC9B,MAAOA,GAAKK,QAEhBC,iBAAkB,SAA0BN,GACxC,MAAOA,GAAKO,SAEhBC,iBAAkB,SAA0BR,EAAMS,GAC9C,MAAOT,GAAKU,IAAID,IAIxBgB,GAAOC,QAAUqB,OAEXE,GAAG,SAAStD,EAAQ8B,GAC1B,YA4BA,IAAIyB,IACApD,MAAO,SAAeE,GAClB,MAAuB,gBAATA,IAA0C,gBAAdA,GAAKK,MAAyC,gBAAbL,GAAKmD,KAEpFpD,cAAe,WACX,KAAM,IAAI2C,OAAM,oEAEpBxC,cAAe,SAAuBF,GAClC,GAAIoD,GAAQxC,KACRT,IACJ,KAAK,GAAIkD,KAASrD,GACVA,EAAKsD,eAAeD,IAAUzC,KAAKd,MAAME,EAAKqD,IAASlD,EAAOoD,KAAKvD,GAAeA,EAAKsD,eAAeD,IAAiC,gBAAhBrD,GAAKqD,IAAuBrD,EAAKqD,YAAkBG,QAC1KxD,EAAKqD,GAAOI,QAAQ,SAAUzD,GACtBoD,EAAMtD,MAAME,IAAOG,EAAOoD,KAAKvD,IAI/C,OAAOG,IAEXC,YAAa,SAAqBJ,GAC9B,MAAOA,GAAKK,MAEhBC,iBAAkB,SAA0BN,GACxC,GAAI0D,KACJ,KAAK,GAAIL,KAASrD,GACVA,EAAKsD,eAAeD,IAAiC,gBAAhBrD,GAAKqD,IAAiC,SAAVA,GAA8B,QAAVA,GAAiBK,EAAMH,KAAKF,EACxH,OAAOK,IAEZlD,iBAAkB,SAA0BR,EAAMS,GAC9C,MAAIT,GAAKsD,eAAe7C,IAA+B,gBAAfT,GAAKS,IAA+B,SAATA,GAA4B,QAATA,EAAuBT,EAAKS,GAAkBkD,QAI5IlC,GAAOC,QAAUwB,OAGXU,GAAG,SAASjE,EAAQ8B,GAC1B,YA0BA,IAAIoC,IACA/D,MAAO,SAAeE,GAElB,MAAuB,gBAAT8D,OAAqB9D,YAAgB8D,OAAwB,gBAAT9D,IAA8C,gBAAlBA,GAAK+D,UAAkD,gBAAlB/D,GAAKgE,UAE5IjE,cAAe,SAAuBC,GAClC,MAAOA,GAAKiE,YAEhB/D,cAAe,SAAuBF,GAClC,MAAOA,GAAKkE,YAEhB9D,YAAa,SAAqBJ,GAC9B,MAAOA,GAAKgE,UAEhB1D,iBAAkB,SAA0BN,GACxC,MAAOwD,OAAMxC,UAAUmD,MAAMlD,KAAKjB,EAAKoE,WAAY,GAAGC,IAAI,SAAUlC,GAChE,MAAOA,GAAE6B,YAGjBxD,iBAAkB,SAA0BR,EAAMS,GAC9C,MAAOT,GAAKsE,aAAa7D,IAIjCgB,GAAOC,QAAUmC,OAEXU,GAAG,SAAS5E,EAAQ8B,GAC1B,YAEA,IAAI+C,GAAuB,SAAUC,EAAOC,EAAaC,GAAqBD,GAAa5D,OAAO8D,iBAAiBH,EAAOC,GAAkBC,GAAe7D,OAAO8D,iBAAiBH,EAAMzD,UAAW2D,IA0BhM9E,EAAc,WACd,QAASA,KAEL,MADAe,MAAKiE,aACEjE,KAoCX,MAjCA4D,GAAqB3E,EAAa,MAC9BiF,UACIC,MAAO,SAAkB5D,GAErB,MADAP,MAAKiE,UAAUG,QAAQ7D,GAChBP,MAEXqE,UAAU,EACVC,cAAc,GAElBC,YACIJ,MAAO,SAAoB5D,GACvB,GAAgBwC,SAAZxC,EAAuBP,KAAKiE,iBAAoB,CAEhD,IAAK,GADDO,MACK3C,EAAI,EAAGA,EAAI7B,KAAKiE,UAAUhC,OAAQJ,IACnC7B,KAAKiE,UAAUpC,KAAOtB,GAASiE,EAAS7B,KAAK3C,KAAKiE,UAAUpC,GACnE7B,MAAKiE,UAAYO,EAEtB,MAAOxE,OAEXqE,UAAU,EACVC,cAAc,GAElBG,QACIN,MAAO,SAAgB/E,GACnB,IAAK,GAAIyC,GAAI,EAAGA,EAAI7B,KAAKiE,UAAUhC,OAAQJ,IACvC,GAAI7B,KAAKiE,UAAUpC,GAAG3C,MAAME,GAAO,MAAOY,MAAKiE,UAAUpC,EAC5D,OAAOkB,SAEZsB,UAAU,EACVC,cAAc,KAIfrF,IAGX4B,GAAOC,QAAU7B,OAEXyF,GAAG,SAAS3F,EAAQ8B,GAC1B,YAEA,IAAI+C,GAAuB,SAAUC,EAAOC,EAAaC,GAAqBD,GAAa5D,OAAO8D,iBAAiBH,EAAOC,GAAkBC,GAAe7D,OAAO8D,iBAAiBH,EAAMzD,UAAW2D,IA0BhMY,EAAY,WAEZ,QAASA,KASL,MARA3E,MAAK4E,UACL5E,KAAK6E,UAAaC,MAAO,MACzB9E,KAAK+E,UAAaC,MAAO,MACzBhF,KAAK6E,SAASC,MAAQ9E,KAAK+E,SAC3B/E,KAAK+E,SAASC,MAAQhF,KAAK6E,SAC3B7E,KAAKiF,KAAO,EACZjF,KAAKkF,KAAOC,IACZnF,KAAKoF,SAAW,aACTpF,KAiOX,MA9NA4D,GAAqBe,EAAW,MAC5BU,OAGIlB,MAAO,SAAemB,GAClB,GAAIC,GAASvF,KAAKkF,IAKlB,OAJIM,WAAUvD,OAAS,IACnBjC,KAAKkF,KAAOI,EACZtF,KAAKyF,UAEFF,GAEXlB,UAAU,EACVC,cAAc,GAElBoB,SAGIvB,MAAO,SAAiBwB,GAEpB,MADA3F,MAAKoF,SAAWO,EACT3F,MAEXqE,UAAU,EACVC,cAAc,GAElBrC,QAGIkC,MAAO,WACH,MAAOnE,MAAKiF,MAEhBZ,UAAU,EACVC,cAAc,GAElBsB,MAGIzB,MAAO,WACH,MAAOnE,MAAK6F,KAAK,SAAUC,EAAKC,GAC5B/F,KAAK2C,KAAKoD,SAGlB1B,UAAU,EACVC,cAAc,GAElB0B,QAGI7B,MAAO,WACH,MAAOnE,MAAK6F,KAAK,SAAUC,GACvB9F,KAAK2C,KAAKmD,SAGlBzB,UAAU,EACVC,cAAc,GAElBuB,MAGI1B,MAAO,SAAcwB,EAAIM,GACjBT,UAAY,IAAGS,EAAMjG,KAGzB,KAFA,GAAI6B,GAAI,EACJqE,EAASlG,KAAK+E,SAASC,MACpBkB,IAAWlG,KAAK6E,UACnBc,EAAGtF,KAAK4F,EAAKC,EAAOJ,IAAKI,EAAOH,IAAKlE,KACrCqE,EAASA,EAAOlB,KAEpB,OAAOiB,IAEX5B,UAAU,EACVC,cAAc,GAElB6B,KAGIhC,MAAO,SAAa4B,GAChB,GAAIG,GAASlG,KAAK4E,OAAOmB,EACzB,OAAkBhD,UAAXmD,GAEX7B,UAAU,EACVC,cAAc,GAElB8B,MAGIjC,MAAO,SAAc4B,GACjB,GAAIG,GAASlG,KAAK4E,OAAOmB,EACzB,OAAehD,UAAXmD,EAA6BnD,OAC7BmD,EAAOG,QAAUC,KAAKC,UACtBvG,MAAKwG,IAAIN,EAAOH,KAGbG,EAAOJ,KAElBzB,UAAU,EACVC,cAAc,GAElBmC,OAGItC,MAAO,SAAe4B,GAClB,GAAIG,GAASlG,KAAK4E,OAAOmB,EAEzB,OADehD,UAAXmD,GAAsBlG,KAAK0G,SAASR,GACjClG,MAEXqE,UAAU,EACVC,cAAc,GAElBxE,KAGIqE,MAAO,SAAa4B,GAChB,GAAID,GAAM9F,KAAKoG,KAAKL,EAEpB,OADA/F,MAAKyG,MAAMV,GACJD,GAEXzB,UAAU,EACVC,cAAc,GAElBqC,KAGIxC,MAAO,SAAa4B,EAAKD,EAAKO,GACtBb,UAAUvD,OAAS,IAAGoE,EAAUlB,KACpCkB,GAAWC,KAAKC,KAChB,IAAIL,GAASlG,KAAK4E,OAAOmB,EACzB,IAAehD,SAAXmD,EAEAA,GACIlB,MAAO,KACPF,MAAO,KACPiB,IAAKA,EACLD,IAAKA,EACLO,QAASA,GAEbrG,KAAK4E,OAAOmB,GAAOG,EACnBlG,KAAK4G,QAAQV,GACblG,KAAKiF,OACLjF,KAAKyF,aACF,CAEH,GAAIoB,GAASX,EAAOJ,GACpBI,GAAOJ,IAAMA,EACb9F,KAAK0G,SAASR,GACdlG,KAAKoF,SAASrC,OAAWmD,EAAOH,IAAKc,EAAQ,OAEjD,MAAO7G,OAEXqE,UAAU,EACVC,cAAc,GAElBkC,KAGIrC,MAAO,SAAa4B,GAChB,GAAIG,GAASlG,KAAK4E,OAAOmB,EACzB,IAAehD,SAAXmD,EAAsB,KAAM,IAAIpE,OAAM,gCAK1C,cAJO9B,MAAK4E,OAAOmB,GACnB/F,KAAK8G,QAAQZ,GACblG,KAAKiF,OACLjF,KAAKoF,SAASrC,OAAWgD,EAAKG,EAAOJ,IAAK,OACnC9F,MAEXqE,UAAU,EACVC,cAAc,GAElByC,OAGI5C,MAAO,WACH,KAAOnE,KAAKiF,KAAO,GAAGjF,KAAKwG,IAAIxG,KAAK6E,SAASC,MAAMiB,IACnD,OAAO/F,OAEXqE,UAAU,EACVC,cAAc,GAElBmB,QAGItB,MAAO,WACH,KAAOnE,KAAKiF,KAAOjF,KAAKkF,MAAMlF,KAAKwG,IAAIxG,KAAK6E,SAASC,MAAMiB,MAE/D1B,UAAU,EACVC,cAAc,GAElBoC,UAGIvC,MAAO,SAAkB+B,GAErBlG,KAAK8G,QAAQZ,GACblG,KAAK4G,QAAQV,IAEjB7B,UAAU,EACVC,cAAc,GAElBwC,SAGI3C,MAAO,SAAiB+B,GACpBA,EAAOlB,MAAMF,MAAQoB,EAAOpB,MAC5BoB,EAAOpB,MAAME,MAAQkB,EAAOlB,MAC5BkB,EAAOlB,MAAQ,KACfkB,EAAOpB,MAAQ,MAEnBT,UAAU,EACVC,cAAc,GAElBsC,SAGIzC,MAAO,SAAiB+B,GACpBA,EAAOlB,MAAQhF,KAAK+E,SAASC,MAC7BkB,EAAOpB,MAAQ9E,KAAK+E,SACpBmB,EAAOpB,MAAME,MAAQkB,EACrBA,EAAOlB,MAAMF,MAAQoB,GAEzB7B,UAAU,EACVC,cAAc,KAIfK,IAGX9D,GAAOC,QAAU6D,OAGXqC,GAAG,SAASjI,EAAQ8B,GAC1B,YA0BA,IAAIoG,IAEAxH,KAAM,SAAUyH,EAAGC,GACf,MAAOD,GAAE1H,YAAY2H,IAIzBC,MAAO,SAAUF,EAAGC,GAGhB,IAFA,GAAIC,GAAQ,EACRhI,EAAO+H,EAC+B,QAAlC/H,EAAO8H,EAAE/H,cAAcC,KAAiBgI,GAChD,OAAOA,IAIXC,IAAK,SAAUH,EAAGC,GACd,GAAI9H,GAAS6H,EAAE/H,cAAcgI,EAC7B,IAAe,OAAX9H,EAAiB,MAAO,EAE5B,KAAK,GADDiI,GAAUJ,EAAE5H,cAAcD,GACrBwC,EAAI,EAAGA,EAAIyF,EAAQrF,OAAQJ,IAChC,GAAIyF,EAAQzF,KAAOsF,EAAG,MAAOtF,GAAI,CACpC,MAAM,IAAIC,OAAM,uBAIrByF,IAAK,SAAUL,EAAGC,EAAGK,GACjBA,EAAMC,SAASD,EAAK,GACpB,IAAInI,GAAS6H,EAAE/H,cAAcgI,EAC7B,IAAe,OAAX9H,EAAiB,CACjB,GAAIiI,GAAUJ,EAAE5H,cAAcD,EACpB,GAANmI,IAASA,EAAMF,GAAWE,EAAM,GACpC,KAAK,GAAI3F,GAAI,EAAGA,EAAIyF,EAAQrF,OAAQJ,IAChC,GAAIyF,EAAQzF,KAAOsF,EAAG,MAAOtF,GAAI,IAAM2F,CAC1C,QAAO,EACL,MAAY,KAARA,GAAkB,GAAiB,GAIlDE,MAAO,SAAUR,EAAGC,GAChB,MAAOF,GAASM,IAAIL,EAAGC,EAAG,IAI9BQ,KAAM,SAAUT,EAAGC,GACf,MAAOF,GAASM,IAAIL,EAAGC,EAAG,KAI9BS,MAAO,SAAUV,EAAGC,EAAGrB,GACnB,MAAmB,gBAARA,IAAoBA,YAAelD,OAAckD,EAAI7D,OAA+B,gBAAR6D,GAAyB5F,OAAO0F,KAAKE,GAAK7D,OAA+B,gBAAR6D,GAAyBA,EAAI7D,OAAmB4F,OAAO/B,GAAK7D,QAIxN6F,OAAQ,SAAUZ,EAAGC,EAAGY,EAAKV,EAAKW,GAC9B,MAAOH,QAAOE,GAAKD,OAAOT,EAAKW,IAInCC,GAAI,SAAUf,EAAGC,EAAGY,GAChB,MAAOF,QAAOE,GAAKG,eAIvBC,GAAI,SAAUjB,EAAGC,EAAGY,GAChB,MAAOF,QAAOE,GAAKK,eAI3BvH,GAAOC,QAAUmG,OAEXoB,GAAG,SAAStJ,EAAQ8B,GAC1B,YAEA,IAAI+C,GAAuB,SAAUC,EAAOC,EAAaC,GAAqBD,GAAa5D,OAAO8D,iBAAiBH,EAAOC,GAAkBC,GAAe7D,OAAO8D,iBAAiBH,EAAMzD,UAAW2D,IA0BhMuE,EAAY,WACZ,QAASA,KAEL,MADAtI,MAAKuI,UACEvI,KAsBX,MAnBA4D,GAAqB0E,EAAW,MAC5BpE,UACIC,MAAO,SAAkBqE,EAAMC,GAC3BzI,KAAKuI,OAAOC,GAAQC,GAExBpE,UAAU,EACVC,cAAc,GAElBoE,KACIvE,MAAO,SAAaqE,EAAMG,GACtB,GAAIF,GAAOzI,KAAKuI,OAAOC,EACvB,IAAoB,kBAATC,GAAqB,KAAM,IAAI3G,OAAM,qBAAwB0G,EAAO,IAC/E,OAAOC,GAAKG,MAAM,KAAMD,IAE5BtE,UAAU,EACVC,cAAc,KAIfgE,IAGXzH,GAAOC,QAAUwH,OAEXO,GAAG,SAAS9J,EAAQ8B,GAC1B,YAEA,IAAIiI,GAAkB,SAAUC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,EAAI,WAAaA,GAEnFnF,EAAuB,SAAUC,EAAOC,EAAaC,GAAqBD,GAAa5D,OAAO8D,iBAAiBH,EAAOC,GAAkBC,GAAe7D,OAAO8D,iBAAiBH,EAAMzD,UAAW2D,IAEhMkF,EAAY,SAAUC,EAAUC,GAAc,GAA0B,kBAAfA,IAA4C,OAAfA,EAAuB,KAAM,IAAIC,WAAU,iEAAoED,GAAeD,GAAS9I,UAAYF,OAAOmJ,OAAOF,GAAcA,EAAW/I,WAAakJ,aAAenF,MAAO+E,EAAUK,YAAY,EAAOlF,UAAU,EAAMC,cAAc,KAAe6E,IAAYD,EAASM,UAAYL,IA0B9ZM,EAAOX,EAAgB/J,EAAQ,mBAE/B2K,EAAiBZ,EAAgB/J,EAAQ,0BAEzC4K,EAAgB,SAAWD,GAC3B,QAASC,GAAcpJ,EAASI,EAAQiJ,EAAOhJ,GAC3CZ,KAAKO,QAAUA,EACfP,KAAKW,OAASA,EACdX,KAAK4J,MAAQA,EACb5J,KAAKY,MAAQA,EAqbjB,MAlbAqI,GAAUU,EAAeD,GAEzB9F,EAAqB+F,EAAe,MAChCE,WACI1F,MAAO,SAAmB2F,EAAG3C,GACzB,GAAI3E,GAAQxC,IACZA,MAAK+J,WAAWD,EAAG3C,EACnB,IAAI6C,KAKJ,OAJAF,GAAEvK,SAASsD,QAAQ,SAAUiH,GACzBE,EAASA,EAAOC,OAAOzH,EAAM0H,SAASJ,EAAG3C,MAE7CnH,KAAKmK,SAASL,EAAG3C,EAAG6C,GACbA,GAEX3F,UAAU,EACVC,cAAc,GAElB4F,UACI/F,MAAO,SAAkB2F,EAAG3C,GACxB,GAAI3E,GAAQxC,IACZA,MAAK+J,WAAWD,EAAG3C,EACnB,IAAIiD,IAASjD,EASb,OARA2C,GAAEvK,SAASsD,QAAQ,SAAUiH,GACzB,GAAIE,KACJI,GAAMvH,QAAQ,SAAUsE,GACpB6C,EAASA,EAAOC,OAAOzH,EAAM6H,SAASP,EAAG3C,MAE7CiD,EAAQJ,IAEZhK,KAAKmK,SAASL,EAAG3C,EAAGiD,GACbA,GAEX/F,UAAU,EACVC,cAAc,GAElB+F,UACIlG,MAAO,SAAkB2F,EAAG3C,GACxB,GAAI3E,GAAQxC,IACZA,MAAK+J,WAAWD,EAAG3C,EAGnB,IAAI5H,GAASuK,EAAEvK,SACX+K,EAAO,KACPC,EAAQ,KACRC,EAAS,KACT3I,EAAI,CAIR,IAHIA,EAAItC,EAAO0C,QAA+B,SAArB1C,EAAOsC,GAAGpC,SAAmB6K,EAAO/K,EAAOsC,MAChEA,EAAItC,EAAO0C,QAA+B,UAArB1C,EAAOsC,GAAGpC,SAAoB8K,EAAQhL,EAAOsC,MAClEA,EAAItC,EAAO0C,QAA+B,WAArB1C,EAAOsC,GAAGpC,SAAqB+K,EAASjL,EAAOsC,MAC1D,OAAV0I,EAAgB,KAAM,IAAIzI,OAAM,iCAEpC,IAAIsI,MAGAK,EAAKF,EAAMzK,IAAI,MACf4K,EAAe,SAAUvD,GACzB,GAAI1H,GAAO+C,EAAMjC,QAAQf,YAAY2H,EACrC,IAAW,MAAPsD,GAAcA,IAAOhL,EAAM,CAC3B,GAAIkL,IAAO,CACI,QAAXH,IAAsBhI,EAAMoI,WAAWJ,EAAQrD,KAAIwD,GAAO,IAC1DA,GAAMP,EAAMzH,KAAKwE,IAK7B,IAAa,OAATmD,EAAe,CACf,GAAIO,GAAKP,EAAKxK,IAAI,KAClB,IAAW,MAAP+K,EAEA7K,KAAKO,QAAQjB,cAAc6H,GAAGtE,QAAQ,SAAUsE,GAC5C,MAAOuD,GAAavD,SAErB,IAAW,OAAP0D,GACP,WAEI,GAAIC,GAAO,SAAU3D,GACjBuD,EAAavD,GACb3E,EAAMjC,QAAQjB,cAAc6H,GAAGtE,QAAQ,SAAUsE,GAC7C,MAAO2D,GAAK3D,KAGpB3E,GAAMjC,QAAQjB,cAAc6H,GAAGtE,QAAQ,SAAUsE,GAC7C,MAAO2D,GAAK3D,YAGjB,IAAW,OAAP0D,EAAa,CAEpB,GAAIE,GAAU/K,KAAKO,QAAQpB,cAAcgI,EACzC,IAAgB,OAAZ4D,EAAkB,CAGlB,IAAK,GAFDzD,GAAUtH,KAAKO,QAAQjB,cAAcyL,GACrCC,EAAc,KACTC,EAAK,EAAGA,EAAK3D,EAAQrF,QACtBqF,EAAQ2D,KAAQ9D,EADc8D,IAElCD,EAAc1D,EAAQ2D,EAE1BP,GAAaM,QAEd,IAAW,QAAPH,EAAc,CAErB,GAAIK,GAAWlL,KAAKO,QAAQpB,cAAcgI,EAC1C,IAAiB,OAAb+D,EAEA,IAAK,GADD5D,GAAUtH,KAAKO,QAAQjB,cAAc4L,GAChCC,EAAM,EAAGA,EAAM7D,EAAQrF,QACxBqF,EAAQ6D,KAAShE,EADegE,IAEpCT,EAAapD,EAAQ6D,QAG1B,IAAW,OAAPN,EAAa,CAEpB,GAAIO,GAAWpL,KAAKO,QAAQpB,cAAcgI,EAC1C,IAAiB,OAAbiE,EAAmB,CACnB,GAAI9D,GAAUtH,KAAKO,QAAQjB,cAAc8L,GACrCC,EAAMtI,MACV,KAAKsI,EAAM,EAAGA,EAAM/D,EAAQrF,QAAmBqF,EAAQ+D,KAASlE,EAA5BkE,KAChCA,EAAM/D,EAAQrF,SACdoJ,IACAX,EAAapD,EAAQ+D,UAG1B,IAAW,QAAPR,EAAc,CAErB,GAAIS,GAAWtL,KAAKO,QAAQpB,cAAcgI,EAC1C,IAAiB,OAAbmE,EAAmB,CACnB,GAAIhE,GAAUtH,KAAKO,QAAQjB,cAAcgM,GACrCC,EAAMxI,MACV,KAAKwI,EAAM,EAAGA,EAAMjE,EAAQrF,QAAmBqF,EAAQiE,KAASpE,EAA5BoE,KACpC,GAAIA,EAAMjE,EAAQrF,OAEd,IADAsJ,IACOA,EAAMjE,EAAQrF,QAAQyI,EAAapD,EAAQiE,WAGvD,IAAW,QAAPV,EAAc,CAErB,GAAIW,GAAWxL,KAAKO,QAAQpB,cAAcgI,EACzB,QAAbqE,GAAmBd,EAAac,OACjC,IAAW,SAAPX,EAGP,IADA,GAAIzL,GAAO+H,IACE,CACT,CAAenH,KAAKO,QAAQpB,cAAcC,GAC1C,GAAe,OAAXC,OAAiB,KACrBqL,GAAarL,QACbD,EAAOC,YAKfqL,GAAavD,EAGjB,OADAnH,MAAKmK,SAASL,EAAG3C,EAAGiD,GACbA,GAEX/F,UAAU,EACVC,cAAc,GAElBsG,YACIzG,MAAO,SAAoB2F,EAAG3C,GAC1BnH,KAAK+J,WAAWD,EAAG3C,EACnB,IAAIsE,GAAO3B,EAAEvK,SAAS,GAClBmM,EAAS1L,KAAK2L,SAASF,EAAMtE,EAGjC,OAFAuE,GAASjC,EAAKmC,OAAOF,GACrB1L,KAAKmK,SAASL,EAAG3C,EAAGuE,GACbA,GAEXrH,UAAU,EACVC,cAAc,GAElBqH,UACIxH,MAAO,SAAkB2F,EAAG3C,GACxB,OAAQ2C,EAAErK,QACN,IAAK,oBACD,MAAOO,MAAK6L,0BAA0B/B,EAAG3C,EAC7C,KAAK,qBACD,MAAOnH,MAAK8L,2BAA2BhC,EAAG3C,EAC9C,KAAK,UACD,MAAOnH,MAAK+L,gBAAgBjC,EAAG3C,EACnC,KAAK,UACD,MAAOnH,MAAKgM,gBAAgBlC,EAAG3C,EACnC,KAAK,aACD,MAAOnH,MAAKiM,mBAAmBnC,EAAG3C,EACtC,KAAK,eACD,MAAOnH,MAAKkM,qBAAqBpC,EAAG3C,EACxC,KAAK,QACD,MAAOnH,MAAKmM,cAAcrC,EAAG3C,EACjC,KAAK,WACD,MAAOnH,MAAKoM,iBAAiBtC,EAAG3C,EACpC,KAAK,YACD,MAAOnH,MAAKqM,kBAAkBvC,EAAG3C,EACrC,KAAK,QACD,MAAOnH,MAAKsM,cAAcxC,EAAG3C,EACjC,KAAK,gBACD,MAAOnH,MAAKuM,sBAAsBzC,EAAG3C,EACzC,KAAK,gBACD,MAAOnH,MAAKwM,sBAAsB1C,EAAG3C,EACzC,KAAK,gBACD,MAAOnH,MAAKyM,sBAAsB3C,EAAG3C,EACzC,KAAK,eACD,MAAOnH,MAAK0M,qBAAqB5C,EAAG3C,EACxC,KAAK,OACD,MAAOnH,MAAK2M,aAAa7C,EAAG3C,KAGxC9C,UAAU,EACVC,cAAc,GAElBuH,2BACI1H,MAAO,SAAmC2F,EAAG3C,GACzCnH,KAAK+J,WAAWD,EAAG3C,EACnB,IAAIuE,GAAS1L,KAAK2L,SAAS7B,EAAEvK,SAAS,GAAI4H,EAG1C,OAFKsC,GAAKmC,OAAOF,KAASA,EAAS1L,KAAK2L,SAAS7B,EAAEvK,SAAS,GAAI4H,IAChEnH,KAAKmK,SAASL,EAAG3C,EAAGuE,GACbA,GAEXrH,UAAU,EACVC,cAAc,GAElBwH,4BACI3H,MAAO,SAAoC2F,EAAG3C,GAC1CnH,KAAK+J,WAAWD,EAAG3C,EACnB,IAAIuE,GAAS1L,KAAK2L,SAAS7B,EAAEvK,SAAS,GAAI4H,EAG1C,OAFyBuE,GAArBjC,EAAKmC,OAAOF,GAAkB1L,KAAK2L,SAAS7B,EAAEvK,SAAS,GAAI4H,GAAiBnH,KAAK2L,SAAS7B,EAAEvK,SAAS,GAAI4H,GAC7GnH,KAAKmK,SAASL,EAAG3C,EAAGuE,GACbA,GAEXrH,UAAU,EACVC,cAAc,GAElByH,iBACI5H,MAAO,SAAyB2F,EAAG3C,GAC/BnH,KAAK+J,WAAWD,EAAG3C,EACnB,IAAIuE,IAAS,CACb,QAAQ5B,EAAEhK,IAAI,OACV,IAAK,KACD4L,EAASjC,EAAKmC,OAAO5L,KAAK2L,SAAS7B,EAAEvK,SAAS,GAAI4H,IAC9CuE,IAAQA,EAASA,GAAUjC,EAAKmC,OAAO5L,KAAK2L,SAAS7B,EAAEvK,SAAS,GAAI4H,IACxE,MACJ,KAAK,KACDuE,EAASjC,EAAKmC,OAAO5L,KAAK2L,SAAS7B,EAAEvK,SAAS,GAAI4H,IAC7CuE,IAAQA,EAASA,GAAUjC,EAAKmC,OAAO5L,KAAK2L,SAAS7B,EAAEvK,SAAS,GAAI4H,KAIjF,MADAnH,MAAKmK,SAASL,EAAG3C,EAAGuE,GACbA,GAEXrH,UAAU,EACVC,cAAc,GAElB0H,iBACI7H,MAAO,SAAyB2F,EAAG3C,GAC/BnH,KAAK+J,WAAWD,EAAG3C,EACnB,IAAIyF,GAAKnD,EAAKoD,OAAO7M,KAAK2L,SAAS7B,EAAEvK,SAAS,GAAI4H,GAAI,UAClD2F,EAAKrD,EAAKoD,OAAO7M,KAAK2L,SAAS7B,EAAEvK,SAAS,GAAI4H,GAAI,UAClDuE,EAAS3I,MACb,QAAQ+G,EAAEhK,IAAI,OACV,IAAK,IACD4L,EAASkB,EAAKE,CAAG,MACrB,KAAK,IACDpB,EAASkB,EAAKE,CAAG,MACrB,KAAK,KACDpB,EAASkB,GAAME,CAAG,MACtB,KAAK,KACDpB,EAASkB,GAAME,EAGvB,MADA9M,MAAKmK,SAASL,EAAG3C,EAAGuE,GACbA,GAEXrH,UAAU,EACVC,cAAc,GAElB2H,oBACI9H,MAAO,SAA4B2F,EAAG3C,GAClCnH,KAAK+J,WAAWD,EAAG3C,EACnB,IAAIyF,GAAK5M,KAAK2L,SAAS7B,EAAEvK,SAAS,GAAI4H,GAClC2F,EAAK9M,KAAK2L,SAAS7B,EAAEvK,SAAS,GAAI4H,GAClCuE,EAAS3I,MACb,QAAQ+G,EAAEhK,IAAI,OACV,IAAK,KACD4L,EAASkB,IAAOE,CAAG,MACvB,KAAK,KACDpB,EAASkB,IAAOE,CAAG,MACvB,KAAK,KACDpB,EAASjC,EAAKoD,OAAOD,EAAI,WAAanD,EAAKoD,OAAOC,EAAI,SAAU,MACpE,KAAK,KACDpB,EAASjC,EAAKoD,OAAOD,EAAI,WAAanD,EAAKoD,OAAOC,EAAI,SAAU,MACpE,KAAK,IACDpB,EAASjC,EAAKoD,OAAOD,EAAI,UAAYnD,EAAKoD,OAAOC,EAAI,SAAU,MACnE,KAAK,IACDpB,EAASjC,EAAKoD,OAAOD,EAAI,UAAYnD,EAAKoD,OAAOC,EAAI,SAAU,MACnE,KAAK,KACDpB,EAAwE,OAA/DjC,EAAKoD,OAAOD,EAAI,UAAUrC,MAAMd,EAAKoD,OAAOC,EAAI,UAAoB,MACjF,KAAK,KACDpB,EAAwE,OAA/DjC,EAAKoD,OAAOD,EAAI,UAAUrC,MAAMd,EAAKoD,OAAOC,EAAI,WAGjE,MADA9M,MAAKmK,SAASL,EAAG3C,EAAGuE,GACbA,GAEXrH,UAAU,EACVC,cAAc,GAElB4H,sBACI/H,MAAO,SAA8B2F,EAAG3C,GACpCnH,KAAK+J,WAAWD,EAAG3C,EACnB,IAAIyF,GAAK5M,KAAK2L,SAAS7B,EAAEvK,SAAS,GAAI4H,GAClC2F,EAAK9M,KAAK2L,SAAS7B,EAAEvK,SAAS,GAAI4H,GAClCuE,EAAS3I,MACb,QAAQ+G,EAAEhK,IAAI,OACV,IAAK,IAC2B4L,EAAV,gBAAPkB,GAA0BA,EAAKnD,EAAKoD,OAAOC,EAAI,UAAwBrD,EAAKoD,OAAOD,EAAI,UAAYnD,EAAKoD,OAAOC,EAAI,SAC9H,MACJ,KAAK,IACDpB,EAASjC,EAAKoD,OAAOD,EAAI,UAAYnD,EAAKoD,OAAOC,EAAI,SAAU,MACnE,KAAK,IACDpB,EAASjC,EAAKoD,OAAOD,EAAI,UAAYnD,EAAKoD,OAAOC,EAAI,SAAU,MACnE,KAAK,IACDpB,EAASjC,EAAKoD,OAAOD,EAAI,UAAYnD,EAAKoD,OAAOC,EAAI,SAAU,MACnE,KAAK,IACDpB,EAASjC,EAAKoD,OAAOD,EAAI,UAAYnD,EAAKoD,OAAOC,EAAI,SAAU,MACnE,KAAK,KACDpB,EAASqB,KAAKC,IAAIvD,EAAKoD,OAAOD,EAAI,UAAWnD,EAAKoD,OAAOC,EAAI,WAGrE,MADA9M,MAAKmK,SAASL,EAAG3C,EAAGuE,GACbA,GAEXrH,UAAU,EACVC,cAAc,GAElB6H,eACIhI,MAAO,SAAuB2F,EAAG3C,GAC7BnH,KAAK+J,WAAWD,EAAG3C,EACnB,IAAI8F,GAAIjN,KAAK2L,SAAS7B,EAAEvK,SAAS,GAAI4H,GACjCuE,EAAS3I,MACb,QAAQ+G,EAAEhK,IAAI,OACV,IAAK,IACD4L,GAAUjC,EAAKoD,OAAOI,EAAG,UAAW,MACxC,KAAK,IACDvB,GAAUjC,EAAKoD,OAAOI,EAAG,UAGjC,MADAjN,MAAKmK,SAASL,EAAG3C,EAAGuE,GACbA,GAEXrH,UAAU,EACVC,cAAc,GAElB8H,kBACIjI,MAAO,SAA0B2F,EAAG3C,GAChC,GAAI3E,GAAQxC,IACZA,MAAK+J,WAAWD,EAAG3C,EACnB,IAAIsD,GAAKX,EAAEhK,IAAI,MACX6I,GAAQ3I,KAAKO,QAAS4G,EAC1B2C,GAAEvK,SAASsD,QAAQ,SAAUiH,GACzBnB,EAAKhG,KAAKH,EAAMmJ,SAAS7B,EAAG3C,KAEhC,IAAIuE,GAAS1L,KAAK4J,MAAMlB,IAAI+B,EAAI9B,EAEhC,OADA3I,MAAKmK,SAASL,EAAG3C,EAAGuE,GACbA,GAEXrH,UAAU,EACVC,cAAc,GAElB+H,mBACIlI,MAAO,SAA2B2F,EAAG3C,GACjCnH,KAAK+J,WAAWD,EAAG3C,EACnB,IAAIsD,GAAKX,EAAEhK,IAAI,MACX4L,EAAS1L,KAAKO,QAAQX,iBAAiBuH,EAAGsD,EAE9C,OADAzK,MAAKmK,SAASL,EAAG3C,EAAGuE,GACbA,GAEXrH,UAAU,EACVC,cAAc,GAElBgI,eACInI,MAAO,SAAuB2F,EAAG3C,GAC7BnH,KAAK+J,WAAWD,EAAG3C,EACnB,IAAIsD,GAAKX,EAAEhK,IAAI,KACf,IAA+B,mBAApBE,MAAKW,OAAO8J,GAAqB,KAAM,IAAI3I,OAAM,sBAAyB2I,EAAK,IAC1F,IAAIiB,GAAS1L,KAAKW,OAAO8J,EAEzB,OADAzK,MAAKmK,SAASL,EAAG3C,EAAGuE,GACbA,GAEXrH,UAAU,EACVC,cAAc,GAElBiI,uBACIpI,MAAO,SAA+B2F,EAAG3C,GACrCnH,KAAK+J,WAAWD,EAAG3C,EACnB,IAAIuE,GAAS5B,EAAEhK,IAAI,QAEnB,OADAE,MAAKmK,SAASL,EAAG3C,EAAGuE,GACbA,GAEXrH,UAAU,EACVC,cAAc,GAElBkI,uBACIrI,MAAO,SAA+B2F,EAAG3C,GACrCnH,KAAK+J,WAAWD,EAAG3C,EACnB,IAAIuE,GAAS5B,EAAEhK,IAAI,QAEnB,OADAE,MAAKmK,SAASL,EAAG3C,EAAGuE,GACbA,GAEXrH,UAAU,EACVC,cAAc,GAElBmI,uBACItI,MAAO,SAA+B2F,EAAG3C,GACrCnH,KAAK+J,WAAWD,EAAG3C,EACnB,IAAIuE,GAAS5B,EAAEhK,IAAI,QAEnB,OADAE,MAAKmK,SAASL,EAAG3C,EAAGuE,GACbA,GAEXrH,UAAU,EACVC,cAAc,GAElBoI,sBACIvI,MAAO,SAA8B2F,EAAG3C,GACpCnH,KAAK+J,WAAWD,EAAG3C,EACnB,IAAIuE,GAAS5B,EAAEhK,IAAI,QAEnB,OADAE,MAAKmK,SAASL,EAAG3C,EAAGuE,GACbA,GAEXrH,UAAU,EACVC,cAAc,GAElBqI,cACIxI,MAAO,SAAsB2F,EAAG3C,GAC5BnH,KAAK+J,WAAWD,EAAG3C,EACnB,IAAIuE,GAAS1L,KAAKkK,SAASJ,EAAG3C,EAE9B,OADAnH,MAAKmK,SAASL,EAAG3C,EAAGuE,GACbA,GAEXrH,UAAU,EACVC,cAAc,KAIfqF,GACRD,EAEH7I,GAAOC,QAAU6I,IAGduD,wBAAwB,EAAEC,iBAAiB,KAAKC,GAAG,SAASrO,EAAQ8B,GACvE,YAEA,IAAIiI,GAAkB,SAAUC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,EAAI,WAAaA,GAEnFnF,EAAuB,SAAUC,EAAOC,EAAaC,GAAqBD,GAAa5D,OAAO8D,iBAAiBH,EAAOC,GAAkBC,GAAe7D,OAAO8D,iBAAiBH,EAAMzD,UAAW2D,IA0BhM0F,EAAOX,EAAgB/J,EAAQ,mBAE/B2K,EAAiB,WACjB,QAASA,MA2DT,MAzDA9F,GAAqB8F,EAAgB,MACjC2D,UAEIlJ,MAAO,SAAkB2F,EAAG3C,GAGxB,IAFA,GAAIC,GAAQ,EACRhI,EAAO0K,EACuB,QAA1B1K,EAAOA,EAAKC,WAAoB+H,GACxC,IAAIkG,GAAU7D,EAAK8D,IAAI,GAAI,EAAInG,EAG/B,KAFAA,EAAQ,EACRhI,EAAO+H,EAC8C,QAA7C/H,EAAOY,KAAKO,QAAQpB,cAAcC,KAAiBgI,GAC3D,IAAIoG,GAAU/D,EAAK8D,IAAI,GAAI,EAAInG,EAC/B,QAASkG,QAASA,EAASE,QAASA,IAExCnJ,UAAU,EACVC,cAAc,GAElByF,YAGI5F,MAAO,SAAoB2F,EAAG3C,GAC1B,GAAKnH,KAAKY,MAAV,CACA,GAAI6M,GAAYzN,KAAKqN,SAASvD,EAAG3C,GAE7BmG,EAAUG,EAAUH,QACpBE,EAAUC,EAAUD,OACxBE,SAAQC,IAAI,oBAAsBlE,EAAK8D,IAAID,EAAUxD,EAAErK,OAAS,KAAM,KAAO,MAAQ+N,EAAUxN,KAAKO,QAAQf,YAAY2H,MAE5H9C,UAAU,EACVC,cAAc,GAElB6F,UAGIhG,MAAO,SAAkB2F,EAAG3C,EAAGrB,GAC3B,GAAItD,GAAQxC,IACZ,IAAKA,KAAKY,MAAV,CACA,GAAI6M,GAAYzN,KAAKqN,SAASvD,EAAG3C,GAE7BmG,EAAUG,EAAUH,QACpBE,EAAUC,EAAUD,QACpB9B,EAAS3I,MACDA,UAAR+C,EAAmB4F,EAAS,YAAoC,gBAAR5F,IAAoBA,YAAelD,QAC3F8I,EAAS,IACT5F,EAAIjD,QAAQ,SAAUzD,GAClBsM,GAAU,QAAUlJ,EAAMjC,QAAQf,YAAYJ,GAAQ,OAE1DsM,EAASA,EAAOkC,QAAQ,KAAM,IAAM,KACjClC,QAAgB5F,GAAM,IAAMA,EAAM,IACrC4F,EAAOzJ,OAAS,KAAIyJ,EAASA,EAAO5D,OAAO,EAAG,IAAM,OACxD4F,QAAQC,IAAI,oBAAsBlE,EAAK8D,IAAID,EAAU,MAAQ5B,EAAQ,KAAO,MAAQ8B,EAAUxN,KAAKO,QAAQf,YAAY2H,MAE3H9C,UAAU,EACVC,cAAc,KAIfoF,IAGX7I,GAAOC,QAAU4I,IAEdyD,iBAAiB,KAAKU,IAAI,SAAS9O,EAAQ8B,GAC9C,YAEA,IAAIiI,GAAkB,SAAUC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,EAAI,WAAaA,GAEnFnF,EAAuB,SAAUC,EAAOC,EAAaC,GAAqBD,GAAa5D,OAAO8D,iBAAiBH,EAAOC,GAAkBC,GAAe7D,OAAO8D,iBAAiBH,EAAMzD,UAAW2D,IA8BhMjF,EAAOC,EAAQ,QAEf+O,EAAU/O,EAAQ,cAGlBgP,EAAkB,WAOpB,QAASC,GAAanK,EAAOxE,GAC3B,QAAS4O,KAASjO,KAAKsJ,YAAczF,EACrCoK,EAAK7N,UAAYf,EAAOe,UACxByD,EAAMzD,UAAY,GAAI6N,GAGxB,QAASC,GAAYC,EAASC,EAAUC,EAAOC,EAAQC,EAAMC,GAC3DxO,KAAKmO,QAAWA,EAChBnO,KAAKoO,SAAWA,EAChBpO,KAAKqO,MAAWA,EAChBrO,KAAKsO,OAAWA,EAChBtO,KAAKuO,KAAWA,EAChBvO,KAAKwO,OAAWA,EAEhBxO,KAAKwI,KAAW,cAKlB,QAASiG,GAAMC,GA4Tb,QAASJ,KACP,MAAOK,IAGT,QAASJ,KACP,MAAOK,GAAsBD,IAAiBJ,KAGhD,QAASC,KACP,MAAOI,GAAsBD,IAAiBH,OAWhD,QAASK,GAAMV,GACb,KAAMW,GAAmBX,EAAS,KAAMQ,IAG1C,QAASC,GAAsBvH,GAC7B,QAAS0H,GAAQC,EAASC,EAAUC,GAClC,GAAIC,GAAGC,CAEP,KAAKD,EAAIF,EAAcC,EAAJC,EAAYA,IAC7BC,EAAKV,EAAMW,OAAOF,GACP,OAAPC,GACGJ,EAAQM,QAAUN,EAAQT,OAC/BS,EAAQR,OAAS,EACjBQ,EAAQM,QAAS,GACD,OAAPF,GAAsB,WAAPA,GAA0B,WAAPA,GAC3CJ,EAAQT,OACRS,EAAQR,OAAS,EACjBQ,EAAQM,QAAS,IAEjBN,EAAQR,SACRQ,EAAQM,QAAS,GAcvB,MATIC,MAAkBlI,IAChBkI,GAAgBlI,IAClBkI,GAAgB,EAChBC,IAAyBjB,KAAM,EAAGC,OAAQ,EAAGc,QAAQ,IAEvDP,EAAQS,GAAsBD,GAAelI,GAC7CkI,GAAgBlI,GAGXmI,GAGT,QAASC,GAASrB,GACEsB,GAAdC,KAEAA,GAAcD,KAChBA,GAAiBC,GACjBC,OAGFA,GAAoBjN,KAAKyL,IAG3B,QAASU,GAAmBX,EAASC,EAAU/G,GAC7C,QAASwI,GAAgBzB,GACvB,GAAIvM,GAAI,CAYR,KAVAuM,EAAS0B,KAAK,SAASlO,EAAGmO,GACxB,MAAInO,GAAEoO,YAAcD,EAAEC,YACb,GACEpO,EAAEoO,YAAcD,EAAEC,YACpB,EAEA,IAIJnO,EAAIuM,EAASnM,QACdmM,EAASvM,EAAI,KAAOuM,EAASvM,GAC/BuM,EAAS6B,OAAOpO,EAAG,GAEnBA,IAKN,QAASqO,GAAa9B,EAAUC,GAC9B,QAAS8B,GAAa1O,GACpB,QAAS2O,GAAIhB,GAAM,MAAOA,GAAGiB,WAAW,GAAGC,SAAS,IAAIlI,cAExD,MAAO3G,GACJmM,QAAQ,MAAS,QACjBA,QAAQ,KAAS,OACjBA,QAAQ,QAAS,OACjBA,QAAQ,MAAS,OACjBA,QAAQ,MAAS,OACjBA,QAAQ,MAAS,OACjBA,QAAQ,MAAS,OACjBA,QAAQ,2BAA4B,SAASwB,GAAM,MAAO,OAASgB,EAAIhB,KACvExB,QAAQ,wBAA4B,SAASwB,GAAM,MAAO,MAASgB,EAAIhB,KACvExB,QAAQ,mBAA4B,SAASwB,GAAM,MAAO,OAASgB,EAAIhB,KACvExB,QAAQ,mBAA4B,SAASwB,GAAM,MAAO,MAASgB,EAAIhB,KAG5E,GACImB,GAAcC,EAAW3O,EADzB4O,EAAgB,GAAI7N,OAAMwL,EAASnM,OAGvC,KAAKJ,EAAI,EAAGA,EAAIuM,EAASnM,OAAQJ,IAC/B4O,EAAc5O,GAAKuM,EAASvM,GAAGmO,WAWjC,OARAO,GAAenC,EAASnM,OAAS,EAC7BwO,EAAclN,MAAM,EAAG,IAAImN,KAAK,MAC5B,OACAD,EAAcrC,EAASnM,OAAS,GACpCwO,EAAc,GAElBD,EAAYnC,EAAQ,IAAO8B,EAAa9B,GAAS,IAAO,eAEjD,YAAckC,EAAe,QAAUC,EAAY,UAG5D,GAAIG,GAAa/B,EAAsBvH,GACnCgH,EAAahH,EAAMqH,EAAMzM,OAASyM,EAAMW,OAAOhI,GAAO,IAM1D,OAJiB,QAAb+G,GACFyB,EAAgBzB,GAGX,GAAIF,GACG,OAAZC,EAAmBA,EAAU+B,EAAa9B,EAAUC,GACpDD,EACAC,EACAhH,EACAsJ,EAAWpC,KACXoC,EAAWnC,QAIf,QAASoC,KACP,GAAIC,GAAIC,EAAIC,EAAIC,EAAIC,EAEhBlL,EAAuB,GAAd4J,GAAmB,EAC5BuB,EAASC,GAAUpL,EAEvB,OAAImL,IACFvB,GAAcuB,EAAOE,QACdF,EAAOxF,SAGhBmF,EAAKlB,GACLmB,EAAKO,IACDP,IAAOQ,GACTP,EAAKQ,IACDR,IAAOO,GACTN,EAAKK,IACDL,IAAOM,GACTL,EAAKO,IACDP,IAAOK,GACT3C,GAAkBkC,EAClBC,EAAKW,EAAOV,GACZF,EAAKC,IAELnB,GAAckB,EACdA,EAAKa,KAGP/B,GAAckB,EACdA,EAAKa,KAGP/B,GAAckB,EACdA,EAAKa,KAGP/B,GAAckB,EACdA,EAAKa,GAGPP,GAAUpL,IAASqL,QAASzB,GAAajE,OAAQmF,GAE1CA,GAGT,QAASU,KACP,GAAIV,GAAIC,EAAIC,EAAIC,EAAIC,EAAIU,EAAIC,EAAIC,EAE5B9L,EAAuB,GAAd4J,GAAmB,EAC5BuB,EAASC,GAAUpL,EAEvB,IAAImL,EAEF,MADAvB,IAAcuB,EAAOE,QACdF,EAAOxF,MAKhB,IAFAmF,EAAKlB,GACLmB,EAAKgB,IACDhB,IAAOQ,EAAY,CAmCrB,IAlCAP,KACAC,EAAKrB,GACLsB,EAAKI,IACDJ,IAAOK,GAC6B,KAAlC5C,EAAM2B,WAAWV,KACnBgC,EAAKI,EACLpC,OAEAgC,EAAKL,EACmB,IAApBU,IAAyBvC,EAASwC,IAEpCN,IAAOL,GACTM,EAAKP,IACDO,IAAON,GACTO,EAAKC,IACDD,IAAOP,GACTL,GAAMA,EAAIU,EAAIC,EAAIC,GAClBb,EAAKC,IAELtB,GAAcqB,EACdA,EAAKU,KAGP/B,GAAcqB,EACdA,EAAKU,KAGP/B,GAAcqB,EACdA,EAAKU,KAGP/B,GAAcqB,EACdA,EAAKU,GAEAV,IAAOM,GACZP,EAAGpO,KAAKqO,GACRA,EAAKrB,GACLsB,EAAKI,IACDJ,IAAOK,GAC6B,KAAlC5C,EAAM2B,WAAWV,KACnBgC,EAAKI,EACLpC,OAEAgC,EAAKL,EACmB,IAApBU,IAAyBvC,EAASwC,IAEpCN,IAAOL,GACTM,EAAKP,IACDO,IAAON,GACTO,EAAKC,IACDD,IAAOP,GACTL,GAAMA,EAAIU,EAAIC,EAAIC,GAClBb,EAAKC,IAELtB,GAAcqB,EACdA,EAAKU,KAGP/B,GAAcqB,EACdA,EAAKU,KAGP/B,GAAcqB,EACdA,EAAKU,KAGP/B,GAAcqB,EACdA,EAAKU,EAGLX,KAAOO,GACT3C,GAAkBkC,EAClBC,EAAKoB,GAAOpB,EAAIC,GAChBF,EAAKC,IAELnB,GAAckB,EACdA,EAAKa,OAGP/B,IAAckB,EACdA,EAAKa,CAKP,OAFAP,IAAUpL,IAASqL,QAASzB,GAAajE,OAAQmF,GAE1CA,EAGT,QAASiB,KACP,GAAIjB,GAAIC,EAAIC,EAAIC,EAAIC,EAAIU,EAEpB5L,EAAuB,GAAd4J,GAAmB,EAC5BuB,EAASC,GAAUpL,EAEvB,IAAImL,EAEF,MADAvB,IAAcuB,EAAOE,QACdF,EAAOxF,MAKhB,IAFAmF,EAAKlB,GACLmB,EAAKqB,IACDrB,IAAOQ,EAAY,CAiBrB,IAhBAP,KACAC,EAAKrB,GACLsB,EAAKI,IACDJ,IAAOK,GACTK,EAAKS,IACDT,IAAOL,GACTL,GAAMA,EAAIU,GACVX,EAAKC,IAELtB,GAAcqB,EACdA,EAAKU,KAGP/B,GAAcqB,EACdA,EAAKU,GAEAV,IAAOM,GACZP,EAAGpO,KAAKqO,GACRA,EAAKrB,GACLsB,EAAKI,IACDJ,IAAOK,GACTK,EAAKS,IACDT,IAAOL,GACTL,GAAMA,EAAIU,GACVX,EAAKC,IAELtB,GAAcqB,EACdA,EAAKU,KAGP/B,GAAcqB,EACdA,EAAKU,EAGLX,KAAOO,GACT3C,GAAkBkC,EAClBC,EAAKuB,GAAOvB,EAAIC,GAChBF,EAAKC,IAELnB,GAAckB,EACdA,EAAKa,OAGP/B,IAAckB,EACdA,EAAKa,CAKP,OAFAP,IAAUpL,IAASqL,QAASzB,GAAajE,OAAQmF,GAE1CA,EAGT,QAASsB,KACP,GAAItB,GAAIC,EAAIC,EAAIC,EAAIC,EAAIU,EAEpB5L,EAAuB,GAAd4J,GAAmB,EAC5BuB,EAASC,GAAUpL,EAEvB,OAAImL,IACFvB,GAAcuB,EAAOE,QACdF,EAAOxF,SAGhBmF,EAAKlB,GACLmB,EAAKwB,IACDxB,IAAOQ,IACTR,EAAKyB,IAEHzB,IAAOQ,GACTP,EAAKM,IACDN,IAAOO,GACTN,EAAKwB,IACDxB,IAAOM,GACTL,EAAKI,IACDJ,IAAOK,GACTK,EAAKc,IACDd,IAAOL,IACTK,EAAKY,IAEHZ,IAAOL,GACT3C,GAAkBkC,EAClBC,EAAK4B,GAAO5B,EAAIE,EAAIW,GACpBd,EAAKC,IAELnB,GAAckB,EACdA,EAAKa,KAGP/B,GAAckB,EACdA,EAAKa,KAGP/B,GAAckB,EACdA,EAAKa,KAGP/B,GAAckB,EACdA,EAAKa,KAGP/B,GAAckB,EACdA,EAAKa,GAGPP,GAAUpL,IAASqL,QAASzB,GAAajE,OAAQmF,GAE1CA,GAGT,QAASuB,KACP,GAAIvB,GAAIC,EAAIC,EAAIC,EAAIC,EAAIU,EAEpB5L,EAAuB,GAAd4J,GAAmB,EAC5BuB,EAASC,GAAUpL,EAEvB,OAAImL,IACFvB,GAAcuB,EAAOE,QACdF,EAAOxF,SAGhBmF,EAAKlB,GACLmB,EAAKwB,IACDxB,IAAOQ,GACTP,EAAKM,IACDN,IAAOO,GACTN,EAAKwB,IACDxB,IAAOM,GACTL,EAAKI,IACDJ,IAAOK,GACTK,EAAKc,IACDd,IAAOL,IACTK,EAAKY,IAEHZ,IAAOL,GACT3C,GAAkBkC,EAClBC,EAAK4B,GAAO5B,EAAIE,EAAIW,GACpBd,EAAKC,IAELnB,GAAckB,EACdA,EAAKa,KAGP/B,GAAckB,EACdA,EAAKa,KAGP/B,GAAckB,EACdA,EAAKa,KAGP/B,GAAckB,EACdA,EAAKa,KAGP/B,GAAckB,EACdA,EAAKa,GAGPP,GAAUpL,IAASqL,QAASzB,GAAajE,OAAQmF,GAE1CA,GAGT,QAASyB,KACP,GAAIzB,GAAIC,EAAIC,EAERhL,EAAuB,GAAd4J,GAAmB,EAC5BuB,EAASC,GAAUpL,EAEvB,OAAImL,IACFvB,GAAcuB,EAAOE,QACdF,EAAOxF,SAGhBsG,KACAnB,EAAKlB,GACLmB,EAAKnB,GACDjB,EAAM5G,OAAO6H,GAAa,KAAOgD,IACnC5B,EAAK4B,GACLhD,IAAe,IAEfoB,EAAKO,EACmB,IAApBU,IAAyBvC,EAASmD,KAEpC7B,IAAOO,IAC6B,KAAlC5C,EAAM2B,WAAWV,KACnBoB,EAAK8B,GACLlD,OAEAoB,EAAKO,EACmB,IAApBU,IAAyBvC,EAASqD,KAEpC/B,IAAOO,IACL5C,EAAM5G,OAAO6H,GAAa,KAAOoD,IACnChC,EAAKgC,GACLpD,IAAe,IAEfoB,EAAKO,EACmB,IAApBU,IAAyBvC,EAASuD,KAEpCjC,IAAOO,IACL5C,EAAM5G,OAAO6H,GAAa,KAAOsD,IACnClC,EAAKkC,GACLtD,IAAe,IAEfoB,EAAKO,EACmB,IAApBU,IAAyBvC,EAASyD,KAEpCnC,IAAOO,IACL5C,EAAM5G,OAAO6H,GAAa,KAAOwD,IACnCpC,EAAKoC,GACLxD,IAAe,IAEfoB,EAAKO,EACmB,IAApBU,IAAyBvC,EAAS2D,KAEpCrC,IAAOO,IACL5C,EAAM5G,OAAO6H,GAAa,KAAO0D,IACnCtC,EAAKsC,GACL1D,IAAe,IAEfoB,EAAKO,EACmB,IAApBU,IAAyBvC,EAAS6D,KAEpCvC,IAAOO,IACL5C,EAAM5G,OAAO6H,GAAa,KAAO4D,IACnCxC,EAAKwC,GACL5D,IAAe,IAEfoB,EAAKO,EACmB,IAApBU,IAAyBvC,EAAS+D,KAEpCzC,IAAOO,IACL5C,EAAM5G,OAAO6H,GAAa,KAAO8D,IACnC1C,EAAK0C,GACL9D,IAAe,IAEfoB,EAAKO,EACmB,IAApBU,IAAyBvC,EAASiE,YASlD3C,IAAOO,IACTP,EAAKrC,EAAMiF,UAAU7C,EAAInB,KAE3BmB,EAAKC,EACDD,IAAOQ,IACT3C,GAAkBkC,EAClBC,EAAK8C,GAAQ9C,IAEfD,EAAKC,EACLkB,KACInB,IAAOS,IACTR,EAAKQ,EACmB,IAApBU,IAAyBvC,EAASoE,KAGxC1C,GAAUpL,IAASqL,QAASzB,GAAajE,OAAQmF,GAE1CA,GAGT,QAAS2B,KACP,GAAI3B,GAAIC,EAEJ/K,EAAuB,GAAd4J,GAAmB,EAC5BuB,EAASC,GAAUpL,EAEvB,OAAImL,IACFvB,GAAcuB,EAAOE,QACdF,EAAOxF,SAGhBmF,EAAKlB,GACLmB,EAAKgD,IACDhD,IAAOQ,IACT3C,GAAkBkC,EAClBC,EAAKiD,GAAQjD,IAEfD,EAAKC,EACDD,IAAOS,IACTT,EAAKlB,GACiC,KAAlCjB,EAAM2B,WAAWV,KACnBmB,EAAKkD,GACLrE,OAEAmB,EAAKQ,EACmB,IAApBU,IAAyBvC,EAASwE,KAEpCnD,IAAOQ,IACT3C,GAAkBkC,EAClBC,EAAKoD,MAEPrD,EAAKC,GAGPK,GAAUpL,IAASqL,QAASzB,GAAajE,OAAQmF,GAE1CA,GAGT,QAAS4B,KACP,GAAI5B,GAAIC,EAAIC,EAAIC,EAAIC,EAAIU,EAEpB5L,EAAuB,GAAd4J,GAAmB,EAC5BuB,EAASC,GAAUpL,EAEvB,OAAImL,IACFvB,GAAcuB,EAAOE,QACdF,EAAOxF,SAGhBmF,EAAKlB,GACiC,KAAlCjB,EAAM2B,WAAWV,KACnBmB,EAAKqD,GACLxE,OAEAmB,EAAKQ,EACmB,IAApBU,IAAyBvC,EAAS2E,KAEpCtD,IAAOQ,GACTP,EAAKM,IACDN,IAAOO,GACTN,EAAKqD,IACDrD,IAAOM,GACTL,EAAKI,IACDJ,IAAOK,GAC6B,KAAlC5C,EAAM2B,WAAWV,KACnBgC,EAAK2C,GACL3E,OAEAgC,EAAKL,EACmB,IAApBU,IAAyBvC,EAAS8E,KAEpC5C,IAAOL,GACT3C,GAAkBkC,EAClBC,EAAK0D,GAAQxD,GACbH,EAAKC,IAELnB,GAAckB,EACdA,EAAKa,KAGP/B,GAAckB,EACdA,EAAKa,KAGP/B,GAAckB,EACdA,EAAKa,KAGP/B,GAAckB,EACdA,EAAKa,KAGP/B,GAAckB,EACdA,EAAKa,GAGPP,GAAUpL,IAASqL,QAASzB,GAAajE,OAAQmF,GAE1CA,GAGT,QAASwD,KACP,GAAIxD,GAAIC,EAAIC,EAAIC,EAAIC,EAAIU,EAAIC,EAAIC,EAAI4C,EAAIC,EAEpC3O,EAAuB,GAAd4J,GAAmB,EAC5BuB,EAASC,GAAUpL,EAEvB,OAAImL,IACFvB,GAAcuB,EAAOE,QACdF,EAAOxF,SAGhBmF,EAAKlB,GACLmB,EAAK6D,IACD7D,IAAOQ,GACTP,EAAKM,IACDN,IAAOO,GACL5C,EAAM5G,OAAO6H,GAAa,KAAOiF,IACnC5D,EAAK4D,GACLjF,IAAe,IAEfqB,EAAKM,EACmB,IAApBU,IAAyBvC,EAASoF,KAEpC7D,IAAOM,GACTL,EAAKI,IACDJ,IAAOK,GACTK,EAAKgD,IACDhD,IAAOL,GACT3C,GAAkBkC,EAClBC,EAAKgE,GAAQhE,EAAIa,GACjBd,EAAKC,IAELnB,GAAckB,EACdA,EAAKa,KAGP/B,GAAckB,EACdA,EAAKa,KAGP/B,GAAckB,EACdA,EAAKa,KAGP/B,GAAckB,EACdA,EAAKa,KAGP/B,GAAckB,EACdA,EAAKa,GAEHb,IAAOS,IACTT,EAAKlB,GACLmB,EAAK6D,IACD7D,IAAOQ,GACTP,EAAKM,IACDN,IAAOO,GAC6B,KAAlC5C,EAAM2B,WAAWV,KACnBqB,EAAK+D,GACLpF,OAEAqB,EAAKM,EACmB,IAApBU,IAAyBvC,EAASuF,KAEpChE,IAAOM,GACTL,EAAKI,IACDJ,IAAOK,GACTK,EAAKgD,IACDhD,IAAOL,GACTM,EAAKP,IACDO,IAAON,GAC6B,KAAlC5C,EAAM2B,WAAWV,KACnBkC,EAAKoD,GACLtF,OAEAkC,EAAKP,EACmB,IAApBU,IAAyBvC,EAASyF,KAEpCrD,IAAOP,GACTmD,EAAKpD,IACDoD,IAAOnD,GACToD,EAAKC,IACDD,IAAOpD,GACT3C,GAAkBkC,EAClBC,EAAKqE,GAAQrE,EAAIa,EAAI+C,GACrB7D,EAAKC,IAELnB,GAAckB,EACdA,EAAKa,KAGP/B,GAAckB,EACdA,EAAKa,KAGP/B,GAAckB,EACdA,EAAKa,KAGP/B,GAAckB,EACdA,EAAKa,KAGP/B,GAAckB,EACdA,EAAKa,KAGP/B,GAAckB,EACdA,EAAKa,KAGP/B,GAAckB,EACdA,EAAKa,KAGP/B,GAAckB,EACdA,EAAKa,KAGP/B,GAAckB,EACdA,EAAKa,GAEHb,IAAOS,IACTT,EAAK8D,MAITxD,GAAUpL,IAASqL,QAASzB,GAAajE,OAAQmF,GAE1CA,GAGT,QAAS8D,KACP,GAAI9D,GAAIC,EAAIC,EAAIC,EAAIC,EAAIU,EAEpB5L,EAAuB,GAAd4J,GAAmB,EAC5BuB,EAASC,GAAUpL,EAEvB,OAAImL,IACFvB,GAAcuB,EAAOE,QACdF,EAAOxF,SAGhBmF,EAAKlB,GACLmB,EAAKsE,IACDtE,IAAOQ,GACTP,EAAKM,IACDN,IAAOO,GACTN,EAAKrB,GACDjB,EAAM5G,OAAO6H,GAAa,KAAO0F,IACnCpE,EAAKoE,GACL1F,IAAe,IAEfsB,EAAKK,EACmB,IAApBU,IAAyBvC,EAAS6F,KAEpCrE,IAAOK,IACTL,EAAKvC,EAAMiF,UAAU3C,EAAIrB,KAE3BqB,EAAKC,EACDD,IAAOM,GACTL,EAAKI,IACDJ,IAAOK,GACTK,EAAKgD,IACDhD,IAAOL,GACT3C,GAAkBkC,EAClBC,EAAKyE,GAAQzE,EAAIE,EAAIW,GACrBd,EAAKC,IAELnB,GAAckB,EACdA,EAAKa,KAGP/B,GAAckB,EACdA,EAAKa,KAGP/B,GAAckB,EACdA,EAAKa,KAGP/B,GAAckB,EACdA,EAAKa,KAGP/B,GAAckB,EACdA,EAAKa,GAEHb,IAAOS,IACTT,EAAKuE,KAGPjE,GAAUpL,IAASqL,QAASzB,GAAajE,OAAQmF,GAE1CA,GAGT,QAASuE,KACP,GAAIvE,GAAIC,EAAIC,EAAIC,EAAIC,EAAIU,EAEpB5L,EAAuB,GAAd4J,GAAmB,GAC5BuB,EAASC,GAAUpL,EAEvB,OAAImL,IACFvB,GAAcuB,EAAOE,QACdF,EAAOxF,SAGhBmF,EAAKlB,GACLmB,EAAK0E,IACD1E,IAAOQ,GACTP,EAAKM,IACDN,IAAOO,GACTN,EAAKrB,GACDjB,EAAM5G,OAAO6H,GAAa,KAAO8F,IACnCxE,EAAKwE,GACL9F,IAAe,IAEfsB,EAAKK,EACmB,IAApBU,IAAyBvC,EAASiG,KAEpCzE,IAAOK,IACTL,EAAKvC,EAAMiF,UAAU3C,EAAIrB,KAE3BqB,EAAKC,EACDD,IAAOM,GACTL,EAAKI,IACDJ,IAAOK,GACTK,EAAKyD,IACDzD,IAAOL,GACT3C,GAAkBkC,EAClBC,EAAKyE,GAAQzE,EAAIE,EAAIW,GACrBd,EAAKC,IAELnB,GAAckB,EACdA,EAAKa,KAGP/B,GAAckB,EACdA,EAAKa,KAGP/B,GAAckB,EACdA,EAAKa,KAGP/B,GAAckB,EACdA,EAAKa,KAGP/B,GAAckB,EACdA,EAAKa,GAEHb,IAAOS,IACTT,EAAK2E,KAGPrE,GAAUpL,IAASqL,QAASzB,GAAajE,OAAQmF,GAE1CA,GAGT,QAAS2E,KACP,GAAI3E,GAAIC,EAAIC,EAAIC,EAAIC,EAAIU,EAEpB5L,EAAuB,GAAd4J,GAAmB,GAC5BuB,EAASC,GAAUpL,EAEvB,OAAImL,IACFvB,GAAcuB,EAAOE,QACdF,EAAOxF,SAGhBmF,EAAKlB,GACLmB,EAAK6E,IACD7E,IAAOQ,GACTP,EAAKM,IACDN,IAAOO,GACTN,EAAKrB,GACiC,MAAlCjB,EAAM2B,WAAWV,KACnBsB,EAAK2E,GACLjG,OAEAsB,EAAKK,EACmB,IAApBU,IAAyBvC,EAASoG,KAEpC5E,IAAOK,IACTL,EAAKvC,EAAMiF,UAAU3C,EAAIrB,KAE3BqB,EAAKC,EACDD,IAAOM,GACTL,EAAKI,IACDJ,IAAOK,GACTK,EAAK6D,IACD7D,IAAOL,GACT3C,GAAkBkC,EAClBC,EAAKgF,GAAQhF,EAAIE,EAAIW,GACrBd,EAAKC,IAELnB,GAAckB,EACdA,EAAKa,KAGP/B,GAAckB,EACdA,EAAKa,KAGP/B,GAAckB,EACdA,EAAKa,KAGP/B,GAAckB,EACdA,EAAKa,KAGP/B,GAAckB,EACdA,EAAKa,GAEHb,IAAOS,IACTT,EAAK8E,KAGPxE,GAAUpL,IAASqL,QAASzB,GAAajE,OAAQmF,GAE1CA,GAGT,QAAS8E,KACP,GAAI9E,GAAIC,EAAIC,EAAIC,EAAIC,EAAIU,EAEpB5L,EAAuB,GAAd4J,GAAmB,GAC5BuB,EAASC,GAAUpL,EAEvB,OAAImL,IACFvB,GAAcuB,EAAOE,QACdF,EAAOxF,SAGhBmF,EAAKlB,GACLmB,EAAKiF,IACDjF,IAAOQ,GACTP,EAAKM,IACDN,IAAOO,GACTN,EAAKrB,GACiC,KAAlCjB,EAAM2B,WAAWV,KACnBsB,EAAK+E,GACLrG,OAEAsB,EAAKK,EACmB,IAApBU,IAAyBvC,EAASwG,KAEpChF,IAAOK,IACTL,EAAKvC,EAAMiF,UAAU3C,EAAIrB,KAE3BqB,EAAKC,EACDD,IAAOM,GACTL,EAAKI,IACDJ,IAAOK,GACTK,EAAKgE,IACDhE,IAAOL,GACT3C,GAAkBkC,EAClBC,EAAKgF,GAAQhF,EAAIE,EAAIW,GACrBd,EAAKC,IAELnB,GAAckB,EACdA,EAAKa,KAGP/B,GAAckB,EACdA,EAAKa,KAGP/B,GAAckB,EACdA,EAAKa,KAGP/B,GAAckB,EACdA,EAAKa,KAGP/B,GAAckB,EACdA,EAAKa,GAEHb,IAAOS,IACTT,EAAKkF,KAGP5E,GAAUpL,IAASqL,QAASzB,GAAajE,OAAQmF,GAE1CA,GAGT,QAASkF,KACP,GAAIlF,GAAIC,EAAIC,EAAIC,EAAIC,EAAIU,EAEpB5L,EAAuB,GAAd4J,GAAmB,GAC5BuB,EAASC,GAAUpL,EAEvB,OAAImL,IACFvB,GAAcuB,EAAOE,QACdF,EAAOxF,SAGhBmF,EAAKlB,GACLmB,EAAKoF,IACDpF,IAAOQ,GACTP,EAAKM,IACDN,IAAOO,GACTN,EAAKrB,GACiC,KAAlCjB,EAAM2B,WAAWV,KACnBsB,EAAKkF,GACLxG,OAEAsB,EAAKK,EACmB,IAApBU,IAAyBvC,EAAS2G,KAEpCnF,IAAOK,IACTL,EAAKvC,EAAMiF,UAAU3C,EAAIrB,KAE3BqB,EAAKC,EACDD,IAAOM,GACTL,EAAKI,IACDJ,IAAOK,GACTK,EAAKoE,IACDpE,IAAOL,GACT3C,GAAkBkC,EAClBC,EAAKgF,GAAQhF,EAAIE,EAAIW,GACrBd,EAAKC,IAELnB,GAAckB,EACdA,EAAKa,KAGP/B,GAAckB,EACdA,EAAKa,KAGP/B,GAAckB,EACdA,EAAKa,KAGP/B,GAAckB,EACdA,EAAKa,KAGP/B,GAAckB,EACdA,EAAKa,GAEHb,IAAOS,IACTT,EAAKqF,KAGP/E,GAAUpL,IAASqL,QAASzB,GAAajE,OAAQmF,GAE1CA,GAGT,QAASqF,KACP,GAAIrF,GAAIC,EAAIC,EAAIC,EAAIC,EAAIU,EAEpB5L,EAAuB,GAAd4J,GAAmB,GAC5BuB,EAASC,GAAUpL,EAEvB,OAAImL,IACFvB,GAAcuB,EAAOE,QACdF,EAAOxF,SAGhBmF,EAAKlB,GACLmB,EAAKuF,IACDvF,IAAOQ,GACTP,EAAKM,IACDN,IAAOO,GACTN,EAAKrB,GACDjB,EAAM5G,OAAO6H,GAAa,KAAO2G,IACnCrF,EAAKqF,GACL3G,IAAe,IAEfsB,EAAKK,EACmB,IAApBU,IAAyBvC,EAAS8G,KAEpCtF,IAAOK,IACL5C,EAAM5G,OAAO6H,GAAa,KAAO6G,IACnCvF,EAAKuF,GACL7G,IAAe,IAEfsB,EAAKK,EACmB,IAApBU,IAAyBvC,EAASgH,KAEpCxF,IAAOK,IACL5C,EAAM5G,OAAO6H,GAAa,KAAO+G,IACnCzF,EAAKyF,GACL/G,IAAe,IAEfsB,EAAKK,EACmB,IAApBU,IAAyBvC,EAASkH,KAEpC1F,IAAOK,IACL5C,EAAM5G,OAAO6H,GAAa,KAAOiH,IACnC3F,EAAK2F,GACLjH,IAAe,IAEfsB,EAAKK,EACmB,IAApBU,IAAyBvC,EAASoH,KAEpC5F,IAAOK,IAC6B,KAAlC5C,EAAM2B,WAAWV,KACnBsB,EAAK6F,GACLnH,OAEAsB,EAAKK,EACmB,IAApBU,IAAyBvC,EAASsH,KAEpC9F,IAAOK,IAC6B,KAAlC5C,EAAM2B,WAAWV,KACnBsB,EAAK+F,GACLrH,OAEAsB,EAAKK,EACmB,IAApBU,IAAyBvC,EAASwH,KAEpChG,IAAOK,IACL5C,EAAM5G,OAAO6H,GAAa,KAAOuH,IACnCjG,EAAKiG,GACLvH,IAAe,IAEfsB,EAAKK,EACmB,IAApBU,IAAyBvC,EAAS0H,KAEpClG,IAAOK,IACL5C,EAAM5G,OAAO6H,GAAa,KAAOyH,IACnCnG,EAAKmG,GACLzH,IAAe,IAEfsB,EAAKK,EACmB,IAApBU,IAAyBvC,EAAS4H,YASlDpG,IAAOK,IACTL,EAAKvC,EAAMiF,UAAU3C,EAAIrB,KAE3BqB,EAAKC,EACDD,IAAOM,GACTL,EAAKI,IACDJ,IAAOK,GACTK,EAAKuE,IACDvE,IAAOL,GACT3C,GAAkBkC,EAClBC,EAAKwG,GAAQxG,EAAIE,EAAIW,GACrBd,EAAKC,IAELnB,GAAckB,EACdA,EAAKa,KAGP/B,GAAckB,EACdA,EAAKa,KAGP/B,GAAckB,EACdA,EAAKa,KAGP/B,GAAckB,EACdA,EAAKa,KAGP/B,GAAckB,EACdA,EAAKa,GAEHb,IAAOS,IACTT,EAAKwF,KAGPlF,GAAUpL,IAASqL,QAASzB,GAAajE,OAAQmF,GAE1CA,GAGT,QAASwF,KACP,GAAIxF,GAAIC,EAAIC,EAAIC,EAAIC,EAAIU,EAEpB5L,EAAuB,GAAd4J,GAAmB,GAC5BuB,EAASC,GAAUpL,EAEvB,OAAImL,IACFvB,GAAcuB,EAAOE,QACdF,EAAOxF,SAGhBmF,EAAKlB,GACLmB,EAAKyG,IACDzG,IAAOQ,GACTP,EAAKM,IACDN,IAAOO,GACTN,EAAKrB,GACDjB,EAAM5G,OAAO6H,GAAa,KAAO6H,IACnCvG,EAAKuG,GACL7H,IAAe,IAEfsB,EAAKK,EACmB,IAApBU,IAAyBvC,EAASgI,KAEpCxG,IAAOK,IACL5C,EAAM5G,OAAO6H,GAAa,KAAO+H,IACnCzG,EAAKyG,GACL/H,IAAe,IAEfsB,EAAKK,EACmB,IAApBU,IAAyBvC,EAASkI,MAGtC1G,IAAOK,IACTL,EAAKvC,EAAMiF,UAAU3C,EAAIrB,KAE3BqB,EAAKC,EACDD,IAAOM,GACTL,EAAKI,IACDJ,IAAOK,GACTK,EAAK0E,IACD1E,IAAOL,GACT3C,GAAkBkC,EAClBC,EAAKgF,GAAQhF,EAAIE,EAAIW,GACrBd,EAAKC,IAELnB,GAAckB,EACdA,EAAKa,KAGP/B,GAAckB,EACdA,EAAKa,KAGP/B,GAAckB,EACdA,EAAKa,KAGP/B,GAAckB,EACdA,EAAKa,KAGP/B,GAAckB,EACdA,EAAKa,GAEHb,IAAOS,IACTT,EAAK0G,KAGPpG,GAAUpL,IAASqL,QAASzB,GAAajE,OAAQmF,GAE1CA,GAGT,QAAS0G,KACP,GAAI1G,GAAIC,EAAIC,EAAIC,EAAIC,EAAIU,EAEpB5L,EAAuB,GAAd4J,GAAmB,GAC5BuB,EAASC,GAAUpL,EAEvB,OAAImL,IACFvB,GAAcuB,EAAOE,QACdF,EAAOxF,SAGhBmF,EAAKlB,GACLmB,EAAK8G,IACD9G,IAAOQ,GACTP,EAAKM,IACDN,IAAOO,GACTN,EAAKrB,GACiC,KAAlCjB,EAAM2B,WAAWV,KACnBsB,EAAK4G,GACLlI,OAEAsB,EAAKK,EACmB,IAApBU,IAAyBvC,EAASqI,KAEpC7G,IAAOK,IAC6B,KAAlC5C,EAAM2B,WAAWV,KACnBsB,EAAK8G,GACLpI,OAEAsB,EAAKK,EACmB,IAApBU,IAAyBvC,EAASuI,MAGtC/G,IAAOK,IACTL,EAAKvC,EAAMiF,UAAU3C,EAAIrB,KAE3BqB,EAAKC,EACDD,IAAOM,GACTL,EAAKI,IACDJ,IAAOK,GACTK,EAAK4F,IACD5F,IAAOL,GACT3C,GAAkBkC,EAClBC,EAAKmH,GAAQnH,EAAIE,EAAIW,GACrBd,EAAKC,IAELnB,GAAckB,EACdA,EAAKa,KAGP/B,GAAckB,EACdA,EAAKa,KAGP/B,GAAckB,EACdA,EAAKa,KAGP/B,GAAckB,EACdA,EAAKa,KAGP/B,GAAckB,EACdA,EAAKa,GAEHb,IAAOS,IACTT,EAAK+G,KAGPzG,GAAUpL,IAASqL,QAASzB,GAAajE,OAAQmF,GAE1CA,GAGT,QAAS+G,KACP,GAAI/G,GAAIC,EAAIC,EAAIC,EAAIC,EAAIU,EAEpB5L,EAAuB,GAAd4J,GAAmB,GAC5BuB,EAASC,GAAUpL,EAEvB,OAAImL,IACFvB,GAAcuB,EAAOE,QACdF,EAAOxF,SAGhBmF,EAAKlB,GACLmB,EAAKoH,IACDpH,IAAOQ,GACTP,EAAKM,IACDN,IAAOO,GACTN,EAAKrB,GACDjB,EAAM5G,OAAO6H,GAAa,KAAOwI,IACnClH,EAAKkH,GACLxI,IAAe,IAEfsB,EAAKK,EACmB,IAApBU,IAAyBvC,EAAS2I,KAEpCnH,IAAOK,IAC6B,KAAlC5C,EAAM2B,WAAWV,KACnBsB,EAAK+C,GACLrE,OAEAsB,EAAKK,EACmB,IAApBU,IAAyBvC,EAASwE,KAEpChD,IAAOK,IAC6B,KAAlC5C,EAAM2B,WAAWV,KACnBsB,EAAK4B,GACLlD,OAEAsB,EAAKK,EACmB,IAApBU,IAAyBvC,EAASqD,KAEpC7B,IAAOK,IAC6B,KAAlC5C,EAAM2B,WAAWV,KACnBsB,EAAKoH,GACL1I,OAEAsB,EAAKK,EACmB,IAApBU,IAAyBvC,EAAS6I,QAK1CrH,IAAOK,IACTL,EAAKvC,EAAMiF,UAAU3C,EAAIrB,KAE3BqB,EAAKC,EACDD,IAAOM,GACTL,EAAKI,IACDJ,IAAOK,GACTK,EAAKiG,IACDjG,IAAOL,GACT3C,GAAkBkC,EAClBC,EAAKmH,GAAQnH,EAAIE,EAAIW,GACrBd,EAAKC,IAELnB,GAAckB,EACdA,EAAKa,KAGP/B,GAAckB,EACdA,EAAKa,KAGP/B,GAAckB,EACdA,EAAKa,KAGP/B,GAAckB,EACdA,EAAKa,KAGP/B,GAAckB,EACdA,EAAKa,GAEHb,IAAOS,IACTT,EAAKqH,KAGP/G,GAAUpL,IAASqL,QAASzB,GAAajE,OAAQmF,GAE1CA,GAGT,QAASqH,KACP,GAAIrH,GAAIC,EAAIC,EAERhL,EAAuB,GAAd4J,GAAmB,GAC5BuB,EAASC,GAAUpL,EAEvB,OAAImL,IACFvB,GAAcuB,EAAOE,QACdF,EAAOxF,SAGhBmF,EAAKlB,GACLmB,EAAKnB,GACiC,KAAlCjB,EAAM2B,WAAWV,KACnBoB,EAAKwH,GACL5I,OAEAoB,EAAKO,EACmB,IAApBU,IAAyBvC,EAAS+I,KAEpCzH,IAAOO,IAC6B,MAAlC5C,EAAM2B,WAAWV,KACnBoB,EAAK0H,GACL9I,OAEAoB,EAAKO,EACmB,IAApBU,IAAyBvC,EAASiJ,MAGtC3H,IAAOO,IACTP,EAAKrC,EAAMiF,UAAU7C,EAAInB,KAE3BmB,EAAKC,EACDD,IAAOQ,GACTP,EAAK4H,IACD5H,IAAOO,GACT3C,GAAkBkC,EAClBC,EAAK8H,GAAQ9H,EAAIC,GACjBF,EAAKC,IAELnB,GAAckB,EACdA,EAAKa,KAGP/B,GAAckB,EACdA,EAAKa,GAEHb,IAAOS,IACTT,EAAK8H,KAGPxH,GAAUpL,IAASqL,QAASzB,GAAajE,OAAQmF,GAE1CA,GAGT,QAAS8H,KACP,GAAI9H,GAEA9K,EAAuB,GAAd4J,GAAmB,GAC5BuB,EAASC,GAAUpL,EAEvB,OAAImL,IACFvB,GAAcuB,EAAOE,QACdF,EAAOxF,SAGhBmF,EAAKgI,IACDhI,IAAOS,IACTT,EAAKiI,IACDjI,IAAOS,IACTT,EAAKkI,IACDlI,IAAOS,IACTT,EAAKmI,IACDnI,IAAOS,IACTT,EAAKoI,IACDpI,IAAOS,IACTT,EAAKiB,SAOfX,GAAUpL,IAASqL,QAASzB,GAAajE,OAAQmF,GAE1CA,GAGT,QAASgI,KACP,GAAIhI,GAAIC,EAAIC,EAAIC,EAAIC,EAAIU,EAAIC,EAAIC,EAE5B9L,EAAuB,GAAd4J,GAAmB,GAC5BuB,EAASC,GAAUpL,EAEvB,OAAImL,IACFvB,GAAcuB,EAAOE,QACdF,EAAOxF,SAGhBmF,EAAKlB,GACLmB,EAAKgD,IACDhD,IAAOQ,GACTP,EAAKM,IACDN,IAAOO,GAC6B,KAAlC5C,EAAM2B,WAAWV,KACnBqB,EAAKkI,GACLvJ,OAEAqB,EAAKM,EACmB,IAApBU,IAAyBvC,EAAS0J,KAEpCnI,IAAOM,GACTL,EAAKI,IACDJ,IAAOK,GACTK,EAAKyH,IACDzH,IAAOL,IACTK,EAAKY,IAEHZ,IAAOL,GACTM,EAAKP,IACDO,IAAON,GAC6B,KAAlC5C,EAAM2B,WAAWV,KACnBkC,EAAKwH,GACL1J,OAEAkC,EAAKP,EACmB,IAApBU,IAAyBvC,EAAS6J,KAEpCzH,IAAOP,GACT3C,GAAkBkC,EAClBC,EAAKyI,GAAQzI,EAAIa,GACjBd,EAAKC,IAELnB,GAAckB,EACdA,EAAKa,KAGP/B,GAAckB,EACdA,EAAKa,KAGP/B,GAAckB,EACdA,EAAKa,KAGP/B,GAAckB,EACdA,EAAKa,KAGP/B,GAAckB,EACdA,EAAKa,KAGP/B,GAAckB,EACdA,EAAKa,KAGP/B,GAAckB,EACdA,EAAKa,GAGPP,GAAUpL,IAASqL,QAASzB,GAAajE,OAAQmF,GAE1CA,GAGT,QAASuI,KACP,GAAIvI,GAAIC,EAAIC,EAAIC,EAAIC,EAAIU,EAAIC,EAAIC,EAE5B9L,EAAuB,GAAd4J,GAAmB,GAC5BuB,EAASC,GAAUpL,EAEvB,IAAImL,EAEF,MADAvB,IAAcuB,EAAOE,QACdF,EAAOxF,MAKhB,IAFAmF,EAAKlB,GACLmB,EAAKuD,IACDvD,IAAOQ,EAAY,CAmCrB,IAlCAP,KACAC,EAAKrB,GACLsB,EAAKI,IACDJ,IAAOK,GAC6B,KAAlC5C,EAAM2B,WAAWV,KACnBgC,EAAKI,EACLpC,OAEAgC,EAAKL,EACmB,IAApBU,IAAyBvC,EAASwC,IAEpCN,IAAOL,GACTM,EAAKP,IACDO,IAAON,GACTO,EAAKwC,IACDxC,IAAOP,GACTL,GAAMA,EAAIU,EAAIC,EAAIC,GAClBb,EAAKC,IAELtB,GAAcqB,EACdA,EAAKU,KAGP/B,GAAcqB,EACdA,EAAKU,KAGP/B,GAAcqB,EACdA,EAAKU,KAGP/B,GAAcqB,EACdA,EAAKU,GAEAV,IAAOM,GACZP,EAAGpO,KAAKqO,GACRA,EAAKrB,GACLsB,EAAKI,IACDJ,IAAOK,GAC6B,KAAlC5C,EAAM2B,WAAWV,KACnBgC,EAAKI,EACLpC,OAEAgC,EAAKL,EACmB,IAApBU,IAAyBvC,EAASwC,IAEpCN,IAAOL,GACTM,EAAKP,IACDO,IAAON,GACTO,EAAKwC,IACDxC,IAAOP,GACTL,GAAMA,EAAIU,EAAIC,EAAIC,GAClBb,EAAKC,IAELtB,GAAcqB,EACdA,EAAKU,KAGP/B,GAAcqB,EACdA,EAAKU,KAGP/B,GAAcqB,EACdA,EAAKU,KAGP/B,GAAcqB,EACdA,EAAKU,EAGLX,KAAOO,GACT3C,GAAkBkC,EAClBC,EAAK0I,GAAQ1I,EAAIC,GACjBF,EAAKC,IAELnB,GAAckB,EACdA,EAAKa,OAGP/B,IAAckB,EACdA,EAAKa,CAKP,OAFAP,IAAUpL,IAASqL,QAASzB,GAAajE,OAAQmF,GAE1CA,EAGT,QAASiI,KACP,GAAIjI,GAAIC,EAAIC,EAERhL,EAAuB,GAAd4J,GAAmB,GAC5BuB,EAASC,GAAUpL,EAEvB,OAAImL,IACFvB,GAAcuB,EAAOE,QACdF,EAAOxF,SAGhBsG,KACAnB,EAAKlB,GACiC,KAAlCjB,EAAM2B,WAAWV,KACnBmB,EAAK2I,GACL9J,OAEAmB,EAAKQ,EACmB,IAApBU,IAAyBvC,EAASiK,KAEpC5I,IAAOQ,GACTP,EAAK+C,IACD/C,IAAOO,GACT3C,GAAkBkC,EAClBC,EAAK6I,GAAS5I,GACdF,EAAKC,IAELnB,GAAckB,EACdA,EAAKa,KAGP/B,GAAckB,EACdA,EAAKa,GAEPM,KACInB,IAAOS,IACTR,EAAKQ,EACmB,IAApBU,IAAyBvC,EAASmK,KAGxCzI,GAAUpL,IAASqL,QAASzB,GAAajE,OAAQmF,GAE1CA,GAGT,QAASkI,KACP,GAAIlI,GAAIC,EAAIC,EAAIC,EAAIC,EAAIU,EAEpB5L,EAAuB,GAAd4J,GAAmB,GAC5BuB,EAASC,GAAUpL,EAEvB,OAAImL,IACFvB,GAAcuB,EAAOE,QACdF,EAAOxF,SAGhBsG,KACAnB,EAAKlB,GACiC,MAAlCjB,EAAM2B,WAAWV,KACnBmB,EAAK+I,GACLlK,OAEAmB,EAAKQ,EACmB,IAApBU,IAAyBvC,EAASqK,KAEpChJ,IAAOQ,GACTP,EAAKM,IACDN,IAAOO,GACTN,EAAK8C,IACD9C,IAAOM,GACTL,EAAKI,IACDJ,IAAOK,GAC6B,MAAlC5C,EAAM2B,WAAWV,KACnBgC,EAAKoI,GACLpK,OAEAgC,EAAKL,EACmB,IAApBU,IAAyBvC,EAASuK,KAEpCrI,IAAOL,GACT3C,GAAkBkC,EAClBC,EAAKmJ,GAASjJ,GACdH,EAAKC,IAELnB,GAAckB,EACdA,EAAKa,KAGP/B,GAAckB,EACdA,EAAKa,KAGP/B,GAAckB,EACdA,EAAKa,KAGP/B,GAAckB,EACdA,EAAKa,KAGP/B,GAAckB,EACdA,EAAKa,GAEPM,KACInB,IAAOS,IACTR,EAAKQ,EACmB,IAApBU,IAAyBvC,EAASyK,KAGxC/I,GAAUpL,IAASqL,QAASzB,GAAajE,OAAQmF,GAE1CA,GAGT,QAASmI,KACP,GAAInI,GAEA9K,EAAuB,GAAd4J,GAAmB,GAC5BuB,EAASC,GAAUpL,EAEvB,OAAImL,IACFvB,GAAcuB,EAAOE,QACdF,EAAOxF,SAGhBmF,EAAKsJ,IACDtJ,IAAOS,IACTT,EAAKuJ,IACDvJ,IAAOS,IACTT,EAAKwJ,IACDxJ,IAAOS,IACTT,EAAKyJ,OAKXnJ,GAAUpL,IAASqL,QAASzB,GAAajE,OAAQmF,GAE1CA,GAGT,QAASoI,KACP,GAAIpI,GAAIC,EAAIC,EAAIC,EAAIC,EAAIU,EAEpB5L,EAAuB,GAAd4J,GAAmB,GAC5BuB,EAASC,GAAUpL,EAEvB,OAAImL,IACFvB,GAAcuB,EAAOE,QACdF,EAAOxF,SAGhBmF,EAAKlB,GACiC,KAAlCjB,EAAM2B,WAAWV,KACnBmB,EAAKoI,GACLvJ,OAEAmB,EAAKQ,EACmB,IAApBU,IAAyBvC,EAAS0J,KAEpCrI,IAAOQ,GACTP,EAAKM,IACDN,IAAOO,GACTN,EAAKqD,IACDrD,IAAOM,GACTL,EAAKI,IACDJ,IAAOK,GAC6B,KAAlC5C,EAAM2B,WAAWV,KACnBgC,EAAK0H,GACL1J,OAEAgC,EAAKL,EACmB,IAApBU,IAAyBvC,EAAS6J,KAEpC3H,IAAOL,GACT3C,GAAkBkC,EAClBC,EAAKyJ,GAASvJ,GACdH,EAAKC,IAELnB,GAAckB,EACdA,EAAKa,KAGP/B,GAAckB,EACdA,EAAKa,KAGP/B,GAAckB,EACdA,EAAKa,KAGP/B,GAAckB,EACdA,EAAKa,KAGP/B,GAAckB,EACdA,EAAKa,GAGPP,GAAUpL,IAASqL,QAASzB,GAAajE,OAAQmF,GAE1CA,GAGT,QAASiD,KACP,GAAIjD,GAAIC,EAAIC,EAAIC,EAAIC,EAAIU,EAAIC,EAExB7L,EAAuB,GAAd4J,GAAmB,GAC5BuB,EAASC,GAAUpL,EAEvB,IAAImL,EAEF,MADAvB,IAAcuB,EAAOE,QACdF,EAAOxF,MAiBhB,IAdAsG,KACAnB,EAAKlB,GACLmB,EAAKnB,GACLoB,EAAKpB,GACLqB,EAAKrB,GACLqC,KACAf,EAAKqJ,IACLtI,KACIf,IAAOK,EACTN,EAAKwJ,IAEL7K,GAAcqB,EACdA,EAAKU,GAEHV,IAAOM,EAQT,GAPImJ,GAASC,KAAKhM,EAAMW,OAAOM,MAC7BsB,EAAKvC,EAAMW,OAAOM,IAClBA,OAEAsB,EAAKK,EACmB,IAApBU,IAAyBvC,EAASkL,KAEpC1J,IAAOK,EAAY,CASrB,IARAK,KACIiJ,GAASF,KAAKhM,EAAMW,OAAOM,MAC7BiC,EAAKlD,EAAMW,OAAOM,IAClBA,OAEAiC,EAAKN,EACmB,IAApBU,IAAyBvC,EAASoL,KAEjCjJ,IAAON,GACZK,EAAGhP,KAAKiP,GACJgJ,GAASF,KAAKhM,EAAMW,OAAOM,MAC7BiC,EAAKlD,EAAMW,OAAOM,IAClBA,OAEAiC,EAAKN,EACmB,IAApBU,IAAyBvC,EAASoL,IAGtClJ,KAAOL,GACTN,GAAMA,EAAIC,EAAIU,GACdZ,EAAKC,IAELrB,GAAcoB,EACdA,EAAKW,OAGP/B,IAAcoB,EACdA,EAAKW,MAGP/B,IAAcoB,EACdA,EAAKW,CAmBP,OAjBIX,KAAOO,IACTP,EAAKrC,EAAMiF,UAAU7C,EAAInB,KAE3BmB,EAAKC,EACDD,IAAOQ,IACT3C,GAAkBkC,EAClBC,EAAKgK,GAAShK,IAEhBD,EAAKC,EACLkB,KACInB,IAAOS,IACTR,EAAKQ,EACmB,IAApBU,IAAyBvC,EAASsL,KAGxC5J,GAAUpL,IAASqL,QAASzB,GAAajE,OAAQmF,GAE1CA,EAGT,QAASsJ,KACP,GAAItJ,GAAIC,EAAIC,EAAIC,EAAIC,EAEhBlL,EAAuB,GAAd4J,GAAmB,GAC5BuB,EAASC,GAAUpL,EAEvB,IAAImL,EAEF,MADAvB,IAAcuB,EAAOE,QACdF,EAAOxF,MAYhB,IATAsG,KACAnB,EAAKlB,GACiC,KAAlCjB,EAAM2B,WAAWV,KACnBmB,EAAKkK,GACLrL,OAEAmB,EAAKQ,EACmB,IAApBU,IAAyBvC,EAASwL,KAEpCnK,IAAOQ,EAAY,CAYrB,IAXAP,KACAC,EAAKkK,IACDlK,IAAOM,IACL6J,GAAST,KAAKhM,EAAMW,OAAOM,MAC7BqB,EAAKtC,EAAMW,OAAOM,IAClBA,OAEAqB,EAAKM,EACmB,IAApBU,IAAyBvC,EAAS2L,MAGnCpK,IAAOM,GACZP,EAAGpO,KAAKqO,GACRA,EAAKkK,IACDlK,IAAOM,IACL6J,GAAST,KAAKhM,EAAMW,OAAOM,MAC7BqB,EAAKtC,EAAMW,OAAOM,IAClBA,OAEAqB,EAAKM,EACmB,IAApBU,IAAyBvC,EAAS2L,KAIxCrK,KAAOO,GAC6B,KAAlC5C,EAAM2B,WAAWV,KACnBqB,EAAKgK,GACLrL,OAEAqB,EAAKM,EACmB,IAApBU,IAAyBvC,EAASwL,KAEpCjK,IAAOM,GACT3C,GAAkBkC,EAClBC,EAAKuK,GAAStK,GACdF,EAAKC,IAELnB,GAAckB,EACdA,EAAKa,KAGP/B,GAAckB,EACdA,EAAKa,OAGP/B,IAAckB,EACdA,EAAKa,CAEP,IAAIb,IAAOS,EAST,GARAT,EAAKlB,GACiC,KAAlCjB,EAAM2B,WAAWV,KACnBmB,EAAKwK,GACL3L,OAEAmB,EAAKQ,EACmB,IAApBU,IAAyBvC,EAAS8L,KAEpCzK,IAAOQ,EAAY,CAmBrB,IAlBAP,EAAKpB,GACLqB,KACItC,EAAM5G,OAAO6H,GAAa,KAAO6L,IACnCvK,EAAKuK,GACL7L,IAAe,IAEfsB,EAAKK,EACmB,IAApBU,IAAyBvC,EAASgM,KAEpCxK,IAAOK,IACLoK,GAAShB,KAAKhM,EAAMW,OAAOM,MAC7BsB,EAAKvC,EAAMW,OAAOM,IAClBA,OAEAsB,EAAKK,EACmB,IAApBU,IAAyBvC,EAASkM,MAGnC1K,IAAOK,GACZN,EAAGrO,KAAKsO,GACJvC,EAAM5G,OAAO6H,GAAa,KAAO6L,IACnCvK,EAAKuK,GACL7L,IAAe,IAEfsB,EAAKK,EACmB,IAApBU,IAAyBvC,EAASgM,KAEpCxK,IAAOK,IACLoK,GAAShB,KAAKhM,EAAMW,OAAOM,MAC7BsB,EAAKvC,EAAMW,OAAOM,IAClBA,OAEAsB,EAAKK,EACmB,IAApBU,IAAyBvC,EAASkM,KAIxC3K,KAAOM,IACTN,EAAKtC,EAAMiF,UAAU5C,EAAIpB,KAE3BoB,EAAKC,EACDD,IAAOO,GAC6B,KAAlC5C,EAAM2B,WAAWV,KACnBqB,EAAKsK,GACL3L,OAEAqB,EAAKM,EACmB,IAApBU,IAAyBvC,EAAS8L,KAEpCvK,IAAOM,GACT3C,GAAkBkC,EAClBC,EAAK8K,GAAS7K,GACdF,EAAKC,IAELnB,GAAckB,EACdA,EAAKa,KAGP/B,GAAckB,EACdA,EAAKa,OAGP/B,IAAckB,EACdA,EAAKa,CAWT,OARAM,MACInB,IAAOS,IACTR,EAAKQ,EACmB,IAApBU,IAAyBvC,EAASoM,KAGxC1K,GAAUpL,IAASqL,QAASzB,GAAajE,OAAQmF,GAE1CA,EAGT,QAASqK,KACP,GAAIrK,GAAIC,EAAIC,EAAIC,EAAIC,EAAIU,EAAIC,EAAIC,EAE5B9L,EAAuB,GAAd4J,GAAmB,GAC5BuB,EAASC,GAAUpL,EAEvB,OAAImL,IACFvB,GAAcuB,EAAOE,QACdF,EAAOxF,SAGhBsG,KACAnB,EAAKlB,GACDjB,EAAM5G,OAAO6H,GAAa,KAAOmM,IACnChL,EAAKgL,GACLnM,IAAe,IAEfmB,EAAKQ,EACmB,IAApBU,IAAyBvC,EAASsM,KAEpCjL,IAAOQ,IACT3C,GAAkBkC,EAClBC,EAAKkL,MAEPnL,EAAKC,EACDD,IAAOS,IACTT,EAAKlB,GACDjB,EAAM5G,OAAO6H,GAAa,KAAOsM,IACnCnL,EAAKmL,GACLtM,IAAe,IAEfmB,EAAKQ,EACmB,IAApBU,IAAyBvC,EAASyM,KAEpCpL,IAAOQ,IACT3C,GAAkBkC,EAClBC,EAAKqL,MAEPtL,EAAKC,EACDD,IAAOS,IACTT,EAAKlB,GACiC,KAAlCjB,EAAM2B,WAAWV,KACnBmB,EAAKwK,GACL3L,OAEAmB,EAAKQ,EACmB,IAApBU,IAAyBvC,EAAS8L,KAEpCzK,IAAOQ,IACT3C,GAAkBkC,EAClBC,EAAKsL,MAEPvL,EAAKC,EACDD,IAAOS,IACTT,EAAKlB,GACDjB,EAAM5G,OAAO6H,GAAa,KAAO0M,IACnCvL,EAAKuL,GACL1M,IAAe,IAEfmB,EAAKQ,EACmB,IAApBU,IAAyBvC,EAAS6M,KAEpCxL,IAAOQ,IACT3C,GAAkBkC,EAClBC,EAAKyL,MAEP1L,EAAKC,EACDD,IAAOS,IACTT,EAAKlB,GACDjB,EAAM5G,OAAO6H,GAAa,KAAO6M,IACnC1L,EAAK0L,GACL7M,IAAe,IAEfmB,EAAKQ,EACmB,IAApBU,IAAyBvC,EAASgN,KAEpC3L,IAAOQ,IACT3C,GAAkBkC,EAClBC,EAAK4L,MAEP7L,EAAKC,EACDD,IAAOS,IACTT,EAAKlB,GACDjB,EAAM5G,OAAO6H,GAAa,KAAOgN,IACnC7L,EAAK6L,GACLhN,IAAe,IAEfmB,EAAKQ,EACmB,IAApBU,IAAyBvC,EAASmN,KAEpC9L,IAAOQ,IACT3C,GAAkBkC,EAClBC,EAAK+L,MAEPhM,EAAKC,EACDD,IAAOS,IACTT,EAAKlB,GACDjB,EAAM5G,OAAO6H,GAAa,KAAOmN,IACnChM,EAAKgM,GACLnN,IAAe,IAEfmB,EAAKQ,EACmB,IAApBU,IAAyBvC,EAASsN,KAEpCjM,IAAOQ,IACT3C,GAAkBkC,EAClBC,EAAKkM,MAEPnM,EAAKC,EACDD,IAAOS,IACTT,EAAKlB,GACDjB,EAAM5G,OAAO6H,GAAa,KAAOsN,IACnCnM,EAAKmM,GACLtN,IAAe,IAEfmB,EAAKQ,EACmB,IAApBU,IAAyBvC,EAASyN,KAEpCpM,IAAOQ,IACT3C,GAAkBkC,EAClBC,EAAKqM,MAEPtM,EAAKC,EACDD,IAAOS,IACTT,EAAKlB,GACDjB,EAAM5G,OAAO6H,GAAa,KAAOyN,IACnCtM,EAAKsM,GACLzN,IAAe,IAEfmB,EAAKQ,EACmB,IAApBU,IAAyBvC,EAAS4N,KAEpCvM,IAAOQ,IACT3C,GAAkBkC,EAClBC,EAAKwM,MAEPzM,EAAKC,EACDD,IAAOS,IACTT,EAAKlB,GACDjB,EAAM5G,OAAO6H,GAAa,KAAO4N,IACnCzM,EAAKyM,GACL5N,IAAe,IAEfmB,EAAKQ,EACmB,IAApBU,IAAyBvC,EAAS+N,KAEpC1M,IAAOQ,IACT3C,GAAkBkC,EAClBC,EAAK2M,MAEP5M,EAAKC,EACDD,IAAOS,IACTT,EAAKlB,GACDjB,EAAM5G,OAAO6H,GAAa,KAAO+N,IACnC5M,EAAK4M,GACL/N,IAAe,IAEfmB,EAAKQ,EACmB,IAApBU,IAAyBvC,EAASkO,KAEpC7M,IAAOQ,GACTP,EAAKpB,GACLqB,EAAKrB,GACDiO,GAASlD,KAAKhM,EAAMW,OAAOM,MAC7BsB,EAAKvC,EAAMW,OAAOM,IAClBA,OAEAsB,EAAKK,EACmB,IAApBU,IAAyBvC,EAASoO,KAEpC5M,IAAOK,GACLsM,GAASlD,KAAKhM,EAAMW,OAAOM,MAC7BgC,EAAKjD,EAAMW,OAAOM,IAClBA,OAEAgC,EAAKL,EACmB,IAApBU,IAAyBvC,EAASoO,KAEpClM,IAAOL,GACTL,GAAMA,EAAIU,GACVX,EAAKC,IAELtB,GAAcqB,EACdA,EAAKU,KAGP/B,GAAcqB,EACdA,EAAKU,GAEHV,IAAOM,IACTN,EAAKtC,EAAMiF,UAAU5C,EAAIpB,KAE3BoB,EAAKC,EACDD,IAAOO,GACT3C,GAAkBkC,EAClBC,EAAKgN,GAAS/M,GACdF,EAAKC,IAELnB,GAAckB,EACdA,EAAKa,KAGP/B,GAAckB,EACdA,EAAKa,GAEHb,IAAOS,IACTT,EAAKlB,GACDjB,EAAM5G,OAAO6H,GAAa,KAAOoO,IACnCjN,EAAKiN,GACLpO,IAAe,IAEfmB,EAAKQ,EACmB,IAApBU,IAAyBvC,EAASuO,KAEpClN,IAAOQ,GACTP,EAAKpB,GACLqB,EAAKrB,GACDiO,GAASlD,KAAKhM,EAAMW,OAAOM,MAC7BsB,EAAKvC,EAAMW,OAAOM,IAClBA,OAEAsB,EAAKK,EACmB,IAApBU,IAAyBvC,EAASoO,KAEpC5M,IAAOK,GACLsM,GAASlD,KAAKhM,EAAMW,OAAOM,MAC7BgC,EAAKjD,EAAMW,OAAOM,IAClBA,OAEAgC,EAAKL,EACmB,IAApBU,IAAyBvC,EAASoO,KAEpClM,IAAOL,GACLsM,GAASlD,KAAKhM,EAAMW,OAAOM,MAC7BiC,EAAKlD,EAAMW,OAAOM,IAClBA,OAEAiC,EAAKN,EACmB,IAApBU,IAAyBvC,EAASoO,KAEpCjM,IAAON,GACLsM,GAASlD,KAAKhM,EAAMW,OAAOM,MAC7BkC,EAAKnD,EAAMW,OAAOM,IAClBA,OAEAkC,EAAKP,EACmB,IAApBU,IAAyBvC,EAASoO,KAEpChM,IAAOP,GACTL,GAAMA,EAAIU,EAAIC,EAAIC,GAClBb,EAAKC,IAELtB,GAAcqB,EACdA,EAAKU,KAGP/B,GAAcqB,EACdA,EAAKU,KAGP/B,GAAcqB,EACdA,EAAKU,KAGP/B,GAAcqB,EACdA,EAAKU,GAEHV,IAAOM,IACTN,EAAKtC,EAAMiF,UAAU5C,EAAIpB,KAE3BoB,EAAKC,EACDD,IAAOO,GACT3C,GAAkBkC,EAClBC,EAAKgN,GAAS/M,GACdF,EAAKC,IAELnB,GAAckB,EACdA,EAAKa,KAGP/B,GAAckB,EACdA,EAAKa,cAa7BM,KACInB,IAAOS,IACTR,EAAKQ,EACmB,IAApBU,IAAyBvC,EAASwO,KAGxC9M,GAAUpL,IAASqL,QAASzB,GAAajE,OAAQmF,GAE1CA;CAGT,QAASuJ,KACP,GAAIvJ,GAAIC,EAAIC,EAAIC,EAAIC,EAEhBlL,EAAuB,GAAd4J,GAAmB,GAC5BuB,EAASC,GAAUpL,EAEvB,IAAImL,EAEF,MADAvB,IAAcuB,EAAOE,QACdF,EAAOxF,MAYhB,IATAsG,KACAnB,EAAKlB,GACiC,KAAlCjB,EAAM2B,WAAWV,KACnBmB,EAAK+B,GACLlD,OAEAmB,EAAKQ,EACmB,IAApBU,IAAyBvC,EAASqD,KAEpChC,IAAOQ,EAAY,CAmBrB,IAlBAP,EAAKpB,GACLqB,KACItC,EAAM5G,OAAO6H,GAAa,KAAOuO,IACnCjN,EAAKiN,GACLvO,IAAe,IAEfsB,EAAKK,EACmB,IAApBU,IAAyBvC,EAAS0O,KAEpClN,IAAOK,IACL8M,GAAS1D,KAAKhM,EAAMW,OAAOM,MAC7BsB,EAAKvC,EAAMW,OAAOM,IAClBA,OAEAsB,EAAKK,EACmB,IAApBU,IAAyBvC,EAAS4O,MAGnCpN,IAAOK,GACZN,EAAGrO,KAAKsO,GACJvC,EAAM5G,OAAO6H,GAAa,KAAOuO,IACnCjN,EAAKiN,GACLvO,IAAe,IAEfsB,EAAKK,EACmB,IAApBU,IAAyBvC,EAAS0O,KAEpClN,IAAOK,IACL8M,GAAS1D,KAAKhM,EAAMW,OAAOM,MAC7BsB,EAAKvC,EAAMW,OAAOM,IAClBA,OAEAsB,EAAKK,EACmB,IAApBU,IAAyBvC,EAAS4O,KAIxCrN,KAAOM,IACTN,EAAKtC,EAAMiF,UAAU5C,EAAIpB,KAE3BoB,EAAKC,EACDD,IAAOO,GAC6B,KAAlC5C,EAAM2B,WAAWV,KACnBqB,EAAK6B,GACLlD,OAEAqB,EAAKM,EACmB,IAApBU,IAAyBvC,EAASqD,KAEpC9B,IAAOM,GACT3C,GAAkBkC,EAClBC,EAAKwN,GAASvN,GACdF,EAAKC,IAELnB,GAAckB,EACdA,EAAKa,KAGP/B,GAAckB,EACdA,EAAKa,OAGP/B,IAAckB,EACdA,EAAKa,CAUP,OARAM,MACInB,IAAOS,IACTR,EAAKQ,EACmB,IAApBU,IAAyBvC,EAAS8O,KAGxCpN,GAAUpL,IAASqL,QAASzB,GAAajE,OAAQmF,GAE1CA,EAGT,QAASwJ,KACP,GAAIxJ,GAAIC,EAAIC,EAAIC,EAAIC,EAAIU,EAAIC,EAAIC,EAAI4C,EAAIC,EAAI8J,EAAKC,EAE7C1Y,EAAuB,GAAd4J,GAAmB,GAC5BuB,EAASC,GAAUpL,EAEvB,IAAImL,EAEF,MADAvB,IAAcuB,EAAOE,QACdF,EAAOxF,MAoBhB,IAjBAsG,KACAnB,EAAKlB,GACLmB,EAAKnB,GACD+O,GAAShE,KAAKhM,EAAMW,OAAOM,MAC7BoB,EAAKrC,EAAMW,OAAOM,IAClBA,OAEAoB,EAAKO,EACmB,IAApBU,IAAyBvC,EAASkP,KAEpC5N,IAAOO,IACTP,EAAKwB,IAEHxB,IAAOO,IACTP,EAAKrC,EAAMiF,UAAU7C,EAAInB,KAE3BmB,EAAKC,EACDD,IAAOQ,EAQT,GAPI5C,EAAM5G,OAAO6H,GAAa,KAAOiP,IACnC7N,EAAK6N,GACLjP,IAAe,IAEfoB,EAAKO,EACmB,IAApBU,IAAyBvC,EAASoP,KAEpC9N,IAAOO,EAAY,CAUrB,GATAN,EAAKrB,GACLsB,KACI6N,GAASpE,KAAKhM,EAAMW,OAAOM,MAC7BgC,EAAKjD,EAAMW,OAAOM,IAClBA,OAEAgC,EAAKL,EACmB,IAApBU,IAAyBvC,EAASsP,KAEpCpN,IAAOL,EACT,KAAOK,IAAOL,GACZL,EAAGtO,KAAKgP,GACJmN,GAASpE,KAAKhM,EAAMW,OAAOM,MAC7BgC,EAAKjD,EAAMW,OAAOM,IAClBA,OAEAgC,EAAKL,EACmB,IAApBU,IAAyBvC,EAASsP,SAI1C9N,GAAKS,CAEHT,KAAOK,IACTL,EAAKvC,EAAMiF,UAAU3C,EAAIrB,KAE3BqB,EAAKC,EACDD,IAAOM,GACT3C,GAAkBkC,EAClBC,EAAKkO,GAASlO,EAAIE,GAClBH,EAAKC,IAELnB,GAAckB,EACdA,EAAKa,OAGP/B,IAAckB,EACdA,EAAKa,MAGP/B,IAAckB,EACdA,EAAKa,CAEP,IAAIb,IAAOS,EAAY,CAiBrB,GAhBAT,EAAKlB,GACLmB,EAAKnB,GACD+O,GAAShE,KAAKhM,EAAMW,OAAOM,MAC7BoB,EAAKrC,EAAMW,OAAOM,IAClBA,OAEAoB,EAAKO,EACmB,IAApBU,IAAyBvC,EAASkP,KAEpC5N,IAAOO,IACTP,EAAKwB,IAEHxB,IAAOO,IACTP,EAAKrC,EAAMiF,UAAU7C,EAAInB,KAE3BmB,EAAKC,EACDD,IAAOQ,EAQT,GAPI5C,EAAM5G,OAAO6H,GAAa,KAAOsP,IACnClO,EAAKkO,GACLtP,IAAe,IAEfoB,EAAKO,EACmB,IAApBU,IAAyBvC,EAASyP,KAEpCnO,IAAOO,EAAY,CAUrB,GATAN,EAAKrB,GACLsB,KACIkO,GAASzE,KAAKhM,EAAMW,OAAOM,MAC7BgC,EAAKjD,EAAMW,OAAOM,IAClBA,OAEAgC,EAAKL,EACmB,IAApBU,IAAyBvC,EAAS2P,KAEpCzN,IAAOL,EACT,KAAOK,IAAOL,GACZL,EAAGtO,KAAKgP,GACJwN,GAASzE,KAAKhM,EAAMW,OAAOM,MAC7BgC,EAAKjD,EAAMW,OAAOM,IAClBA,OAEAgC,EAAKL,EACmB,IAApBU,IAAyBvC,EAAS2P,SAI1CnO,GAAKS,CAEHT,KAAOK,IACTL,EAAKvC,EAAMiF,UAAU3C,EAAIrB,KAE3BqB,EAAKC,EACDD,IAAOM,GACT3C,GAAkBkC,EAClBC,EAAKuO,GAASvO,EAAIE,GAClBH,EAAKC,IAELnB,GAAckB,EACdA,EAAKa,OAGP/B,IAAckB,EACdA,EAAKa,MAGP/B,IAAckB,EACdA,EAAKa,CAEP,IAAIb,IAAOS,EAAY,CAiBrB,GAhBAT,EAAKlB,GACLmB,EAAKnB,GACD+O,GAAShE,KAAKhM,EAAMW,OAAOM,MAC7BoB,EAAKrC,EAAMW,OAAOM,IAClBA,OAEAoB,EAAKO,EACmB,IAApBU,IAAyBvC,EAASkP,KAEpC5N,IAAOO,IACTP,EAAKwB,IAEHxB,IAAOO,IACTP,EAAKrC,EAAMiF,UAAU7C,EAAInB,KAE3BmB,EAAKC,EACDD,IAAOQ,EAQT,GAPI5C,EAAM5G,OAAO6H,GAAa,KAAO2P,IACnCvO,EAAKuO,GACL3P,IAAe,IAEfoB,EAAKO,EACmB,IAApBU,IAAyBvC,EAAS8P,KAEpCxO,IAAOO,EAAY,CAUrB,GATAN,EAAKrB,GACLsB,KACI2M,GAASlD,KAAKhM,EAAMW,OAAOM,MAC7BgC,EAAKjD,EAAMW,OAAOM,IAClBA,OAEAgC,EAAKL,EACmB,IAApBU,IAAyBvC,EAASoO,KAEpClM,IAAOL,EACT,KAAOK,IAAOL,GACZL,EAAGtO,KAAKgP,GACJiM,GAASlD,KAAKhM,EAAMW,OAAOM,MAC7BgC,EAAKjD,EAAMW,OAAOM,IAClBA,OAEAgC,EAAKL,EACmB,IAApBU,IAAyBvC,EAASoO,SAI1C5M,GAAKS,CAEHT,KAAOK,IACTL,EAAKvC,EAAMiF,UAAU3C,EAAIrB,KAE3BqB,EAAKC,EACDD,IAAOM,GACT3C,GAAkBkC,EAClBC,EAAK0O,GAAS1O,EAAIE,GAClBH,EAAKC,IAELnB,GAAckB,EACdA,EAAKa,OAGP/B,IAAckB,EACdA,EAAKa,MAGP/B,IAAckB,EACdA,EAAKa,CAEP,IAAIb,IAAOS,EAAY,CAcrB,GAbAT,EAAKlB,GACLmB,EAAKnB,GACLoB,EAAKpB,GACD+O,GAAShE,KAAKhM,EAAMW,OAAOM,MAC7BqB,EAAKtC,EAAMW,OAAOM,IAClBA,OAEAqB,EAAKM,EACmB,IAApBU,IAAyBvC,EAASkP,KAEpC3N,IAAOM,IACTN,EAAKuB,IAEHvB,IAAOM,EAAY,CASrB,IARAL,KACIwO,GAAS/E,KAAKhM,EAAMW,OAAOM,MAC7BgC,EAAKjD,EAAMW,OAAOM,IAClBA,OAEAgC,EAAKL,EACmB,IAApBU,IAAyBvC,EAASiQ,KAEjC/N,IAAOL,GACZL,EAAGtO,KAAKgP,GACJ8N,GAAS/E,KAAKhM,EAAMW,OAAOM,MAC7BgC,EAAKjD,EAAMW,OAAOM,IAClBA,OAEAgC,EAAKL,EACmB,IAApBU,IAAyBvC,EAASiQ,IAG1C,IAAIzO,IAAOK,EAQT,GAPsC,KAAlC5C,EAAM2B,WAAWV,KACnBgC,EAAKgO,GACLhQ,OAEAgC,EAAKL,EACmB,IAApBU,IAAyBvC,EAASmQ,KAEpCjO,IAAOL,EAAY,CASrB,GARAM,KACI6N,GAAS/E,KAAKhM,EAAMW,OAAOM,MAC7BkC,EAAKnD,EAAMW,OAAOM,IAClBA,OAEAkC,EAAKP,EACmB,IAApBU,IAAyBvC,EAASiQ,KAEpC7N,IAAOP,EACT,KAAOO,IAAOP,GACZM,EAAGjP,KAAKkP,GACJ4N,GAAS/E,KAAKhM,EAAMW,OAAOM,MAC7BkC,EAAKnD,EAAMW,OAAOM,IAClBA,OAEAkC,EAAKP,EACmB,IAApBU,IAAyBvC,EAASiQ,SAI1C9N,GAAKF,CAEP,IAAIE,IAAON,EAAY,CASrB,GARAO,EAAKlC,GACDkQ,GAASnF,KAAKhM,EAAMW,OAAOM,MAC7B8E,EAAK/F,EAAMW,OAAOM,IAClBA,OAEA8E,EAAKnD,EACmB,IAApBU,IAAyBvC,EAASqQ,KAEpCrL,IAAOnD,EAWT,GAVIoN,GAAShE,KAAKhM,EAAMW,OAAOM,MAC7B+E,EAAKhG,EAAMW,OAAOM,IAClBA,OAEA+E,EAAKpD,EACmB,IAApBU,IAAyBvC,EAASkP,KAEpCjK,IAAOpD,IACToD,EAAKnC,IAEHmC,IAAOpD,EAAY,CASrB,GARAkN,KACIiB,GAAS/E,KAAKhM,EAAMW,OAAOM,MAC7B8O,EAAM/P,EAAMW,OAAOM,IACnBA,OAEA8O,EAAMnN,EACkB,IAApBU,IAAyBvC,EAASiQ,KAEpCjB,IAAQnN,EACV,KAAOmN,IAAQnN,GACbkN,EAAI7b,KAAK8b,GACLgB,GAAS/E,KAAKhM,EAAMW,OAAOM,MAC7B8O,EAAM/P,EAAMW,OAAOM,IACnBA,OAEA8O,EAAMnN,EACkB,IAApBU,IAAyBvC,EAASiQ,SAI1ClB,GAAM9M,CAEJ8M,KAAQlN,GACVmD,GAAMA,EAAIC,EAAI8J,GACd3M,EAAK4C,IAEL9E,GAAckC,EACdA,EAAKH,OAGP/B,IAAckC,EACdA,EAAKH,MAGP/B,IAAckC,EACdA,EAAKH,CAEHG,KAAOP,IACTO,EAAKU,IAEHV,IAAOP,GACTN,GAAMA,EAAIC,EAAIU,EAAIC,EAAIC,GACtBd,EAAKC,IAELrB,GAAcoB,EACdA,EAAKW,OAGP/B,IAAcoB,EACdA,EAAKW,MAGP/B,IAAcoB,EACdA,EAAKW,MAGP/B,IAAcoB,EACdA,EAAKW,MAGP/B,IAAcoB,EACdA,EAAKW,CAWP,IATIX,IAAOO,IACTP,EAAKrC,EAAMiF,UAAU7C,EAAInB,KAE3BmB,EAAKC,EACDD,IAAOQ,IACT3C,GAAkBkC,EAClBC,EAAKiP,GAASjP,IAEhBD,EAAKC,EACDD,IAAOS,EAAY,CAcrB,GAbAT,EAAKlB,GACLmB,EAAKnB,GACLoB,EAAKpB,GACD+O,GAAShE,KAAKhM,EAAMW,OAAOM,MAC7BqB,EAAKtC,EAAMW,OAAOM,IAClBA,OAEAqB,EAAKM,EACmB,IAApBU,IAAyBvC,EAASkP,KAEpC3N,IAAOM,IACTN,EAAKuB,IAEHvB,IAAOM,EAAY,CASrB,GARAL,KACIwO,GAAS/E,KAAKhM,EAAMW,OAAOM,MAC7BgC,EAAKjD,EAAMW,OAAOM,IAClBA,OAEAgC,EAAKL,EACmB,IAApBU,IAAyBvC,EAASiQ,KAEpC/N,IAAOL,EACT,KAAOK,IAAOL,GACZL,EAAGtO,KAAKgP,GACJ8N,GAAS/E,KAAKhM,EAAMW,OAAOM,MAC7BgC,EAAKjD,EAAMW,OAAOM,IAClBA,OAEAgC,EAAKL,EACmB,IAApBU,IAAyBvC,EAASiQ,SAI1CzO,GAAKS,CAEHT,KAAOK,GACTN,GAAMA,EAAIC,GACVF,EAAKC,IAELrB,GAAcoB,EACdA,EAAKW,OAGP/B,IAAcoB,EACdA,EAAKW,CAEHX,KAAOO,IACTP,EAAKrC,EAAMiF,UAAU7C,EAAInB,KAE3BmB,EAAKC,EACDD,IAAOQ,IACT3C,GAAkBkC,EAClBC,EAAKkP,GAASlP,IAEhBD,EAAKC,KAab,MARAkB,MACInB,IAAOS,IACTR,EAAKQ,EACmB,IAApBU,IAAyBvC,EAASwQ,KAGxC9O,GAAUpL,IAASqL,QAASzB,GAAajE,OAAQmF,GAE1CA,EAGT,QAASyJ,KACP,GAAIzJ,GAAIC,EAEJ/K,EAAuB,GAAd4J,GAAmB,GAC5BuB,EAASC,GAAUpL,EAEvB,OAAImL,IACFvB,GAAcuB,EAAOE,QACdF,EAAOxF,SAGhBsG,KACAnB,EAAKlB,GACDjB,EAAM5G,OAAO6H,GAAa,KAAOuQ,IACnCpP,EAAKoP,GACLvQ,IAAe,IAEfmB,EAAKQ,EACmB,IAApBU,IAAyBvC,EAAS0Q,KAEpCrP,IAAOQ,IACT3C,GAAkBkC,EAClBC,EAAKsP,MAEPvP,EAAKC,EACDD,IAAOS,IACTT,EAAKlB,GACDjB,EAAM5G,OAAO6H,GAAa,KAAO0Q,IACnCvP,EAAKuP,GACL1Q,IAAe,IAEfmB,EAAKQ,EACmB,IAApBU,IAAyBvC,EAAS6Q,KAEpCxP,IAAOQ,IACT3C,GAAkBkC,EAClBC,EAAKyP,MAEP1P,EAAKC,EACDD,IAAOS,IACTT,EAAKlB,GACDjB,EAAM5G,OAAO6H,GAAa,KAAO6Q,IACnC1P,EAAK0P,GACL7Q,IAAe,IAEfmB,EAAKQ,EACmB,IAApBU,IAAyBvC,EAASgR,KAEpC3P,IAAOQ,IACT3C,GAAkBkC,EAClBC,EAAK4P,MAEP7P,EAAKC,EACDD,IAAOS,IACTT,EAAKlB,GACDjB,EAAM5G,OAAO6H,GAAa,KAAOgR,IACnC7P,EAAK6P,GACLhR,IAAe,IAEfmB,EAAKQ,EACmB,IAApBU,IAAyBvC,EAASmR,KAEpC9P,IAAOQ,IACT3C,GAAkBkC,EAClBC,EAAK+P,MAEPhQ,EAAKC,EACDD,IAAOS,IACTT,EAAKlB,GACDjB,EAAM5G,OAAO6H,GAAa,KAAOmR,IACnChQ,EAAKgQ,GACLnR,IAAe,IAEfmB,EAAKQ,EACmB,IAApBU,IAAyBvC,EAASsR,KAEpCjQ,IAAOQ,IACT3C,GAAkBkC,EAClBC,EAAKkQ,MAEPnQ,EAAKC,MAKbkB,KACInB,IAAOS,IACTR,EAAKQ,EACmB,IAApBU,IAAyBvC,EAASwR,KAGxC9P,GAAUpL,IAASqL,QAASzB,GAAajE,OAAQmF,GAE1CA,GAGT,QAASQ,KACP,GAAIR,GAAIC,EAEJ/K,EAAuB,GAAd4J,GAAmB,GAC5BuB,EAASC,GAAUpL,EAEvB,IAAImL,EAEF,MADAvB,IAAcuB,EAAOE,QACdF,EAAOxF,MAShB,KANAsG,KACAnB,KACAC,EAAKoQ,IACDpQ,IAAOQ,IACTR,EAAKqQ,KAEArQ,IAAOQ,GACZT,EAAGlO,KAAKmO,GACRA,EAAKoQ,IACDpQ,IAAOQ,IACTR,EAAKqQ,IAWT,OARAnP,MACInB,IAAOS,IACTR,EAAKQ,EACmB,IAApBU,IAAyBvC,EAAS2R,KAGxCjQ,GAAUpL,IAASqL,QAASzB,GAAajE,OAAQmF,GAE1CA,EAGT,QAASqQ,KACP,GAAIrQ,GAAIC,EAAIC,EAAIC,EAAIC,EAAIU,EAEpB5L,EAAuB,GAAd4J,GAAmB,GAC5BuB,EAASC,GAAUpL,EAEvB,IAAImL,EAEF,MADAvB,IAAcuB,EAAOE,QACdF,EAAOxF,MAYhB,IATAsG,KACAnB,EAAKlB,GACDjB,EAAM5G,OAAO6H,GAAa,KAAO0R,IACnCvQ,EAAKuQ,GACL1R,IAAe,IAEfmB,EAAKQ,EACmB,IAApBU,IAAyBvC,EAAS6R,KAEpCxQ,IAAOQ,EAAY,CAsCrB,IArCAP,KACAC,EAAKrB,GACLsB,EAAKtB,GACLqC,KACItD,EAAM5G,OAAO6H,GAAa,KAAO4R,IACnC5P,EAAK4P,GACL5R,IAAe,IAEfgC,EAAKL,EACmB,IAApBU,IAAyBvC,EAAS+R,KAExCxP,KACIL,IAAOL,EACTL,EAAKuJ,IAEL7K,GAAcsB,EACdA,EAAKS,GAEHT,IAAOK,GACL5C,EAAMzM,OAAS0N,IACjBgC,EAAKjD,EAAMW,OAAOM,IAClBA,OAEAgC,EAAKL,EACmB,IAApBU,IAAyBvC,EAASgS,KAEpC9P,IAAOL,GACTL,GAAMA,EAAIU,GACVX,EAAKC,IAELtB,GAAcqB,EACdA,EAAKU,KAGP/B,GAAcqB,EACdA,EAAKU,GAEAV,IAAOM,GACZP,EAAGpO,KAAKqO,GACRA,EAAKrB,GACLsB,EAAKtB,GACLqC,KACItD,EAAM5G,OAAO6H,GAAa,KAAO4R,IACnC5P,EAAK4P,GACL5R,IAAe,IAEfgC,EAAKL,EACmB,IAApBU,IAAyBvC,EAAS+R,KAExCxP,KACIL,IAAOL,EACTL,EAAKuJ,IAEL7K,GAAcsB,EACdA,EAAKS,GAEHT,IAAOK,GACL5C,EAAMzM,OAAS0N,IACjBgC,EAAKjD,EAAMW,OAAOM,IAClBA,OAEAgC,EAAKL,EACmB,IAApBU,IAAyBvC,EAASgS,KAEpC9P,IAAOL,GACTL,GAAMA,EAAIU,GACVX,EAAKC,IAELtB,GAAcqB,EACdA,EAAKU,KAGP/B,GAAcqB,EACdA,EAAKU,EAGLX,KAAOO,GACL5C,EAAM5G,OAAO6H,GAAa,KAAO4R,IACnCvQ,EAAKuQ,GACL5R,IAAe,IAEfqB,EAAKM,EACmB,IAApBU,IAAyBvC,EAAS+R,KAEpCxQ,IAAOM,GACTR,GAAMA,EAAIC,EAAIC,GACdH,EAAKC,IAELnB,GAAckB,EACdA,EAAKa,KAGP/B,GAAckB,EACdA,EAAKa,OAGP/B,IAAckB,EACdA,EAAKa,CAUP,OARAM,MACInB,IAAOS,IACTR,EAAKQ,EACmB,IAApBU,IAAyBvC,EAASiS,KAGxCvQ,GAAUpL,IAASqL,QAASzB,GAAajE,OAAQmF,GAE1CA,EAGT,QAASsQ,KACP,GAAItQ,GAAIC,EAEJ/K,EAAuB,GAAd4J,GAAmB,GAC5BuB,EAASC,GAAUpL,EAEvB,IAAImL,EAEF,MADAvB,IAAcuB,EAAOE,QACdF,EAAOxF,MAYhB,IATAsG,KACAnB,KACI8Q,GAASjH,KAAKhM,EAAMW,OAAOM,MAC7BmB,EAAKpC,EAAMW,OAAOM,IAClBA,OAEAmB,EAAKQ,EACmB,IAApBU,IAAyBvC,EAASmS,KAEpC9Q,IAAOQ,EACT,KAAOR,IAAOQ,GACZT,EAAGlO,KAAKmO,GACJ6Q,GAASjH,KAAKhM,EAAMW,OAAOM,MAC7BmB,EAAKpC,EAAMW,OAAOM,IAClBA,OAEAmB,EAAKQ,EACmB,IAApBU,IAAyBvC,EAASmS,SAI1C/Q,GAAKa,CAUP,OARAM,MACInB,IAAOS,IACTR,EAAKQ,EACmB,IAApBU,IAAyBvC,EAASoS,KAGxC1Q,GAAUpL,IAASqL,QAASzB,GAAajE,OAAQmF,GAE1CA,EAGT,QAASW,KACP,GAAIX,GAAIC,EAEJ/K,EAAuB,GAAd4J,GAAmB,GAC5BuB,EAASC,GAAUpL,EAEvB,OAAImL,IACFvB,GAAcuB,EAAOE,QACdF,EAAOxF,SAGhBsG,KACAnB,EAAKlB,GACLqC,KACItD,EAAMzM,OAAS0N,IACjBmB,EAAKpC,EAAMW,OAAOM,IAClBA,OAEAmB,EAAKQ,EACmB,IAApBU,IAAyBvC,EAASgS,KAExCzP,KACIlB,IAAOQ,EACTT,EAAK2J,IAEL7K,GAAckB,EACdA,EAAKa,GAEPM,KACInB,IAAOS,IACTR,EAAKQ,EACmB,IAApBU,IAAyBvC,EAASqS,KAGxC3Q,GAAUpL,IAASqL,QAASzB,GAAajE,OAAQmF,GAE1CA,GA1oHT,GA6SIkR,GA7SAC,EAAUxc,UAAUvD,OAAS,EAAIuD,UAAU,MAE3C8L,KAEA2Q,GAA2BxhB,MAAOmQ,GAClCsR,EAAyBtR,EAEzBc,EAASJ,EACTG,EAAS,SAAS0Q,GACN,MAAOA,IAGnBpQ,EAAS,IACTE,GAAWxS,KAAM,UAAW0E,MAAO,IAAK6L,YAAa,OACrDkC,GAAS,SAAShR,EAAGc,GACT,MAAOogB,IAAI,SAASC,IAAIC,GAAOphB,EAAGc,EAAG,KAEjDqQ,GAAS,SAASnR,EAAGc,GACT,MAAOogB,IAAI,QAAQC,IAAIC,GAAOphB,EAAGc,EAAG,KAEhDuQ,GAAS,KACTG,GAAS,SAAS9Q,EAAG2gB,EAAGrhB,GACZ,MAAOkhB,IAAI,QAAQC,IAAIzgB,EAAG2gB,EAAGrhB,IAEzC2S,IAAWpU,KAAM,QAASuQ,YAAa,QACvC2C,GAAU,KACVC,IAAYnT,KAAM,UAAW0E,MAAO,KAAM6L,YAAa,QACvD6C,GAAU,IACVC,IAAYrT,KAAM,UAAW0E,MAAO,IAAK6L,YAAa,OACtD+C,GAAU,MACVC,IAAYvT,KAAM,UAAW0E,MAAO,MAAO6L,YAAa,SACxDiD,GAAU,KACVC,IAAYzT,KAAM,UAAW0E,MAAO,KAAM6L,YAAa,QACvDmD,GAAU,MACVC,IAAY3T,KAAM,UAAW0E,MAAO,MAAO6L,YAAa,SACxDqD,GAAU,KACVC,IAAY7T,KAAM,UAAW0E,MAAO,KAAM6L,YAAa,QACvDuD,GAAU,OACVC,IAAY/T,KAAM,UAAW0E,MAAO,OAAQ6L,YAAa,UACzDyD,GAAU,MACVC,IAAYjU,KAAM,UAAW0E,MAAO,MAAO6L,YAAa,SACxD4D,GAAU,SAAS/I,GACP,MAAOuX,IAAI,QAAQzb,KAAMkE,GAAIA,KAEzCkJ,GAAU,SAAStJ,GACP,MAAO2X,IAAI,SAASI,MAAM/X,IAEtCuJ,GAAU,IACVC,IAAYxU,KAAM,UAAW0E,MAAO,IAAK6L,YAAa,OACtDkE,GAAU,WACE,MAAOkO,IAAI,SAASzb,KAAM8D,GAAI,OAE1C0J,GAAU,IACVC,IAAY3U,KAAM,UAAW0E,MAAO,IAAK6L,YAAa,OACtDsE,GAAU,IACVC,IAAY9U,KAAM,UAAW0E,MAAO,IAAK6L,YAAa,OACtDwE,GAAU,SAASzT,GACP,MAAOqhB,IAAI,UAAUC,IAAIthB,IAErC6T,GAAU,KACVC,IAAYpV,KAAM,UAAW0E,MAAO,KAAM6L,YAAa,QACvD8E,GAAU,SAAS2N,EAAIC,GACX,MAAON,IAAI,qBAAqBC,IAAII,EAAIC,IAEpD3N,GAAU,IACVC,IAAYvV,KAAM,UAAW0E,MAAO,IAAK6L,YAAa,OACtDiF,GAAU,IACVC,IAAYzV,KAAM,UAAW0E,MAAO,IAAK6L,YAAa,OACtDmF,GAAU,SAASsN,EAAIC,EAAIC,GACf,MAAOP,IAAI,sBAAsBC,IAAII,EAAIC,EAAIC,IAEzDtN,GAAU,KACVC,IAAY7V,KAAM,UAAW0E,MAAO,KAAM6L,YAAa,QACvDuF,GAAU,SAASkN,EAAI5X,EAAI6X,GACf,MAAON,IAAI,WAAWzb,KAAMkE,GAAIA,IAAMwX,IAAII,EAAIC,IAE1DjN,GAAU,KACVC,IAAYjW,KAAM,UAAW0E,MAAO,KAAM6L,YAAa,QACvD4F,GAAU,IACVC,IAAYpW,KAAM,UAAW0E,MAAO,IAAK6L,YAAa,OACtD8F,GAAU,SAAS2M,EAAI5X,EAAI6X,GACf,MAAON,IAAI,WAAWzb,KAAMkE,GAAIA,IAAMwX,IAAII,EAAIC,IAE1D1M,GAAU,IACVC,IAAYxW,KAAM,UAAW0E,MAAO,IAAK6L,YAAa,OACtDmG,GAAU,IACVC,IAAY3W,KAAM,UAAW0E,MAAO,IAAK6L,YAAa,OACtDsG,GAAU,KACVC,IAAY9W,KAAM,UAAW0E,MAAO,KAAM6L,YAAa,QACvDwG,GAAU,KACVC,IAAYhX,KAAM,UAAW0E,MAAO,KAAM6L,YAAa,QACvD0G,GAAU,KACVC,IAAYlX,KAAM,UAAW0E,MAAO,KAAM6L,YAAa,QACvD4G,GAAU,KACVC,IAAYpX,KAAM,UAAW0E,MAAO,KAAM6L,YAAa,QACvD8G,GAAU,IACVC,IAAYtX,KAAM,UAAW0E,MAAO,IAAK6L,YAAa,OACtDgH,GAAU,IACVC,IAAYxX,KAAM,UAAW0E,MAAO,IAAK6L,YAAa,OACtDkH,GAAU,KACVC,IAAY1X,KAAM,UAAW0E,MAAO,KAAM6L,YAAa,QACvDoH,GAAU,KACVC,IAAY5X,KAAM,UAAW0E,MAAO,KAAM6L,YAAa,QACvDsH,GAAU,SAASmL,EAAI5X,EAAI6X,GACf,MAAON,IAAI,cAAczb,KAAMkE,GAAIA,IAAMwX,IAAII,EAAIC,IAE7DlL,GAAU,KACVC,IAAYhY,KAAM,UAAW0E,MAAO,KAAM6L,YAAa,QACvD0H,GAAU,KACVC,IAAYlY,KAAM,UAAW0E,MAAO,KAAM6L,YAAa,QACvD6H,GAAU,IACVC,IAAYrY,KAAM,UAAW0E,MAAO,IAAK6L,YAAa,OACtD+H,GAAU,IACVC,IAAYvY,KAAM,UAAW0E,MAAO,IAAK6L,YAAa,OACtDiI,GAAU,SAASwK,EAAI5X,EAAI6X,GACf,MAAON,IAAI,gBAAgBzb,KAAMkE,GAAIA,IAAMwX,IAAII,EAAIC,IAE/DvK,GAAU,KACVC,IAAY3Y,KAAM,UAAW0E,MAAO,KAAM6L,YAAa,QACvDqI,GAAU,IACVC,IAAY7Y,KAAM,UAAW0E,MAAO,IAAK6L,YAAa,OACtDuI,GAAU,IACVC,IAAY/Y,KAAM,UAAW0E,MAAO,IAAK6L,YAAa,OACtDyI,GAAU,IACVC,IAAYjZ,KAAM,UAAW0E,MAAO,IAAK6L,YAAa,OACtD4I,GAAU,SAAS/N,EAAI9J,GACX,MAAOqhB,IAAI,SAASzb,KAAMkE,GAAIA,IAAMwX,IAAIthB,IAEpDmY,GAAU,IACVC,IAAY1Z,KAAM,UAAW0E,MAAO,IAAK6L,YAAa,OACtDqJ,GAAU,IACVC,IAAY7Z,KAAM,UAAW0E,MAAO,IAAK6L,YAAa,OACtDuJ,GAAU,SAAS9O,EAAI0E,GACX,MAAOiT,IAAI,YAAYI,MAAM/X,GAAI4X,IAAIlT,IAEjDqK,GAAU,SAAStY,EAAGc,GACV,MAAOsgB,IAAOphB,EAAGc,EAAG,IAEhC4X,IAAYna,KAAM,QAASuQ,YAAa,kBACxCyJ,GAAU,IACVC,IAAYja,KAAM,UAAW0E,MAAO,IAAK6L,YAAa,OACtD2J,GAAW,SAASlP,GACR,MAAO2X,IAAI,aAAaI,MAAM/X,IAE1CyP,IAAaza,KAAM,QAASuQ,YAAa,6BACzC6J,GAAW,IACXC,IAAara,KAAM,UAAW0E,MAAO,IAAK6L,YAAa,OACvD+J,GAAW,IACXC,IAAava,KAAM,UAAW0E,MAAO,IAAK6L,YAAa,OACvDiK,GAAW,SAASzR,GACR,MAAO4Z,IAAI,SAASI,MAAMha,IAEtC+R,GAAW,SAASxZ,GACP,MAAOA,IAEpBga,IAAatb,KAAM,QAASuQ,YAAa,cACzCwK,GAAW,OACXC,GAAW,aACXE,IAAalb,KAAM,QAAS0E,MAAO,YAAa6L,YAAa,aAC7D4K,GAAW,kBACXC,IAAapb,KAAM,QAAS0E,MAAO,kBAAmB6L,YAAa,mBACnE8K,GAAW,SAASrQ,GACR,MAAO2X,IAAI,cAAczb,KAAM8D,GAAIA,KAE/CoR,IAAapc,KAAM,QAASuQ,YAAa,yBACzCgL,GAAW,IACXC,IAAaxb,KAAM,UAAW0E,MAAO,IAAM6L,YAAa,SACxDmL,GAAW,QACXC,IAAa3b,KAAM,QAAS0E,MAAO,OAAS6L,YAAa,QACzDqL,GAAW,SAAS5Z,GACR,MAAO2gB,IAAI,iBAAiBzb,KAAMxC,MAAO1C,EAAEiP,KAAK,OAE5D4K,GAAW,IACXC,IAAa9b,KAAM,UAAW0E,MAAO,IAAK6L,YAAa,QACvDwL,GAAW,MACXC,IAAahc,KAAM,UAAW0E,MAAO,MAAO6L,YAAa,YACzD0L,GAAW,QACXC,IAAalc,KAAM,QAAS0E,MAAO,OAAQ6L,YAAa,QACxD4L,GAAW,SAASta,GACR,MAAO8gB,IAAI,iBAAiBzb,KAAMxC,MAAO7C,EAAEsM,QAAQ,OAAQ,QAEvEqQ,IAAaxe,KAAM,QAASuQ,YAAa,4BACzC8L,GAAW,OACXC,IAAatc,KAAM,UAAW0E,MAAO,OAAQ6L,YAAa,cAC1DgM,GAAW,WAAa,MAAO,MAC/BC,GAAW,MACXC,IAAazc,KAAM,UAAW0E,MAAO,MAAQ6L,YAAa,aAC1DmM,GAAW,WAAa,MAAO,KAC/BC,GAAW,WAAa,MAAO,KAC/BC,GAAW,MACXC,IAAa7c,KAAM,UAAW0E,MAAO,MAAO6L,YAAa,WACzDuM,GAAW,WAAa,MAAO,MAC/BC,GAAW,MACXC,IAAahd,KAAM,UAAW0E,MAAO,MAAO6L,YAAa,WACzD0M,GAAW,WAAa,MAAO,KAC/BC,GAAW,MACXC,IAAand,KAAM,UAAW0E,MAAO,MAAO6L,YAAa,WACzD6M,GAAW,WAAa,MAAO,MAC/BC,GAAW,MACXC,IAAatd,KAAM,UAAW0E,MAAO,MAAO6L,YAAa,WACzDgN,GAAW,WAAa,MAAO,KAC/BC,GAAW,MACXC,IAAazd,KAAM,UAAW0E,MAAO,MAAO6L,YAAa,WACzDmN,GAAW,WAAa,MAAO,MAC/BC,GAAW,MACXC,IAAa5d,KAAM,UAAW0E,MAAO,MAAO6L,YAAa,WACzDsN,GAAW,WAAa,MAAO,MAC/BC,GAAW,MACXC,IAAa/d,KAAM,UAAW0E,MAAO,MAAO6L,YAAa,WACzDyN,GAAW,WAAa,MAAO,KAC/BC,GAAW,MACXC,IAAale,KAAM,UAAW0E,MAAO,MAAO6L,YAAa,WACzD4N,GAAW,eACXC,IAAape,KAAM,QAAS0E,MAAO,cAAe6L,YAAa,eAC/D8N,GAAW,SAASvc,GACR,MAAOsG,QAAO+a,aAAanb,SAASlG,EAAG,MAEnDwc,GAAW,MACXC,IAAave,KAAM,UAAW0E,MAAO,MAAO6L,YAAa,WACzDuO,IAAa9e,KAAM,QAASuQ,YAAa,8BACzCkO,GAAW,MACXC,IAAa1e,KAAM,UAAW0E,MAAO,MAAO6L,YAAa,WACzDoO,GAAW,SACXC,IAAa5e,KAAM,QAAS0E,MAAO,SAAU6L,YAAa,UAC1DsO,GAAW,SAASuE,GACR,GAAI5V,EACJ,KAAMA,EAAI,GAAI6V,QAAOD,EAAGjV,QAAQ,QAAS,MACzC,MAAO7M,GAAK8N,EAAM9N,EAAEoN,SACpB,MAAOiU,IAAI,iBAAiBzb,KAAMxC,MAAO8I,KAErDgT,IAAaxgB,KAAM,QAASuQ,YAAa,mBACzC0O,GAAW,SACXC,IAAalf,KAAM,QAAS0E,MAAO,SAAU6L,YAAa,UAC1D4O,GAAW,KACXC,IAAapf,KAAM,UAAW0E,MAAO,KAAM6L,YAAa,QACxD8O,GAAW,QACXC,IAAatf,KAAM,QAAS0E,MAAO,OAAQ6L,YAAa,QACxDgP,GAAW,SAASvd,EAAGF,GACX,MAAO6gB,IAAI,iBAAiBzb,KAAMxC,MAAOsD,SAAShG,EAAIF,EAAG,MAErE0d,GAAW,KACXC,IAAazf,KAAM,UAAW0E,MAAO,KAAM6L,YAAa,QACxDmP,GAAW,SACXC,IAAa3f,KAAM,QAAS0E,MAAO,QAAS6L,YAAa,SACzDqP,GAAW,SAAS5d,EAAGF,GACX,MAAO6gB,IAAI,iBAAiBzb,KAAMxC,MAAOsD,SAAShG,EAAIF,EAAG,MAErE+d,GAAW,KACXC,IAAa9f,KAAM,UAAW0E,MAAO,KAAM6L,YAAa,QACxDwP,GAAW,SAAS/d,EAAGF,GACX,MAAO6gB,IAAI,iBAAiBzb,KAAMxC,MAAOsD,SAAShG,EAAIF,EAAG,OAErEke,GAAW,SACXC,IAAajgB,KAAM,QAAS0E,MAAO,QAAS6L,YAAa,SACzD2P,GAAW,IACXC,IAAangB,KAAM,UAAW0E,MAAO,IAAK6L,YAAa,OACvD6P,GAAW,QACXC,IAAargB,KAAM,QAAS0E,MAAO,OAAQ6L,YAAa,QACxD+P,GAAW,SAASxe,GACR,MAAO6gB,IAAI,iBAAiBzb,KAAMxC,MAAO4e,WAAWxhB,MAEhEye,GAAW,SAASze,GACR,MAAO6gB,IAAI,iBAAiBzb,KAAMxC,MAAOsD,SAASlG,EAAG,OAEjE0f,IAAaxhB,KAAM,QAASuQ,YAAa,gBACzCkQ,GAAW,OACXC,IAAa1gB,KAAM,UAAW0E,MAAO,OAAQ6L,YAAa,UAC1DoQ,GAAW,WAAa,MAAOgC,IAAI,gBAAgBzb,KAAMxC,OAAO,KAChEkc,GAAW,QACXC,IAAa7gB,KAAM,UAAW0E,MAAO,QAAS6L,YAAa,WAC3DuQ,GAAW,WAAa,MAAO6B,IAAI,gBAAgBzb,KAAMxC,OAAO,KAChEqc,GAAW,OACXC,IAAahhB,KAAM,UAAW0E,MAAO,OAAQ6L,YAAa,UAC1D0Q,GAAW,WAAa,MAAO0B,IAAI,gBAAgBzb,KAAMxC,MAAO,QAChEwc,GAAW,MACXC,IAAanhB,KAAM,UAAW0E,MAAO,MAAO6L,YAAa,SACzD6Q,GAAW,WAAa,MAAOuB,IAAI,gBAAgBzb,KAAMxC,MAAO6e,OAChElC,GAAW,YACXC,IAAathB,KAAM,UAAW0E,MAAO,YAAa6L,YAAa,eAC/DgR,GAAW,WAAa,MAAOoB,IAAI,gBAAgBzb,KAAMxC,MAAOpB,UAChEqe,IAAa3hB,KAAM,QAASuQ,YAAa,kBACzC0R,IAAajiB,KAAM,QAASuQ,YAAa,sBACzCqR,GAAW,KACXC,IAAa7hB,KAAM,UAAW0E,MAAO,KAAM6L,YAAa,QACxDuR,GAAW,KACXC,IAAa/hB,KAAM,UAAW0E,MAAO,KAAM6L,YAAa,QACxDyR,IAAahiB,KAAM,MAAOuQ,YAAa,iBACvC6R,IAAapiB,KAAM,QAASuQ,YAAa,mBACzC2R,GAAW,aACXC,IAAaniB,KAAM,QAAS0E,MAAO,eAAgB6L,YAAa,gBAChE8R,IAAariB,KAAM,QAASuQ,YAAa,eAEzCL,GAAuB,EACvBhB,GAAuB,EACvBY,GAAuB,EACvBC,IAAyBjB,KAAM,EAAGC,OAAQ,EAAGc,QAAQ,GACrDI,GAAuB,EACvBE,MACAoC,GAAuB,EAEvBb,KAGJ,IAAI,aAAe6Q,GAAS,CAC1B,KAAMA,EAAQiB,YAAahB,IACzB,KAAM,IAAIngB,OAAM,mCAAqCkgB,EAAQiB,UAAY,KAG3Ef,GAAwBD,EAAuBD,EAAQiB,WA21GrD,GAAIX,IAASN,EAAQvY,KAAKyZ,WAAW3U,EAAMC,EAAQF,EAAQJ,GACvDkU,GAASJ,EAAQvY,KAAK0Z,QAAW5U,EAAMC,EAAQF,EAAQ0T,EAK/D,IAFAD,EAAaG,IAETH,IAAezQ,GAAc3B,KAAgBjB,EAAMzM,OACrD,MAAO8f,EAMP,MAJIA,KAAezQ,GAAc3B,GAAcjB,EAAMzM,QACnDwN,GAAWhQ,KAAM,MAAOuQ,YAAa,iBAGjClB,EAAmB,KAAMc,GAAqBF,IAIxD,MAnqHA1B,GAAaE,EAAapM,QAoqHxBoM,YAAaA,EACbO,MAAaA,MAKb9E,EAAgBb,EAAgB/J,EAAQ,yBAExCqkB,EAAY,WAEZ,QAASA,GAAU1iB,GACfV,KAAKqjB,KAAO,GAAIvkB,GAChBkB,KAAKoiB,IAAM,KACP1hB,GAAUV,KAAKsjB,QAAQ5iB,GA8C/B,MA3CAkD,GAAqBwf,EAAW,MAC5BE,SAGInf,MAAO,SAAiBzD,EAAUE,GAC9B,GAAI4B,GAAQxC,IACRY,IAAO8M,QAAQC,IAAI,6IAAoJjN,EAC3K,IAAIgL,GAASoC,EAAQW,MAAMV,EAAgBrN,GACvCuiB,UAAW,QACXE,QAAS,SAAU5U,EAAMC,EAAQF,EAAQ3F,GACrC,MAAOnG,GAAM6gB,KAAKha,OAAOT,MAAMpG,EAAM6gB,KAAM1a,GAAMtB,IAAIkH,EAAMC,EAAQF,KAG3E,IAAqB,OAAjB5C,EAAOmD,MAAgB,KAAM,IAAI/M,OAAM,yCAA2CgM,EAAQyV,aAAa7X,EAAOmD,OAAO,GAAMjB,QAAQ,MAAO,WAG9I,OAFA5N,MAAKoiB,IAAM1W,EAAO0W,IACdxhB,GAAO8M,QAAQC,IAAI,4HAA8H3N,KAAKwjB,OAAO5V,QAAQ,MAAO,IAAIA,QAAQ,MAAO,sBAC5L5N,MAEXqE,UAAU,EACVC,cAAc,GAElBkf,MAGIrf,MAAO,WACH,MAAOnE,MAAKoiB,IAAIoB,QAEpBnf,UAAU,EACVC,cAAc,GAElBmf,SAGItf,MAAO,SAAiB/E,EAAMmB,EAASI,EAAQiJ,EAAOhJ,GAC9CA,GAAO8M,QAAQC,IAAI,0HACvB,IAAI+V,GAAK,GAAI/Z,GAAcpJ,EAASI,EAAQiJ,EAAOhJ,EACnD,OAAO8iB,GAAG7Z,UAAU7J,KAAKoiB,IAAKhjB,IAElCiF,UAAU,EACVC,cAAc,KAIf8e,IAGXviB,GAAOC,QAAUsiB,IAEdO,uBAAuB,EAAEN,KAAO,OAAOO,aAAa,eAAeC,IAAI,SAAS9kB,EAAQ8B,GAC3F,YA0BA,IAAIijB,IAEAvW,IAAK,QAASA,GAAIxF,EAAKP,GACnB,GAAIjG,GAAU,EAANiG,GAAWA,EAAMA,CACzB,IAAIO,EAAI9F,OAASV,EAAGwG,EAAMA,EAAID,OAAO,EAAGvG,OAAQ,CAC5C,GAAIgM,GAAM3K,MAAMrB,EAAI,EAAIwG,EAAI9F,QAAQyO,KAAK,IACzC3I,GAAY,EAANP,EAAUO,EAAMwF,EAAMA,EAAMxF,EAEtC,MAAOA,IAIX6D,OAAQ,SAAgBzH,GACpB,GAAIuH,GAAS3I,MACb,cAAeoB,IACX,IAAK,UACDuH,EAASvH,CACT,MACJ,KAAK,SACDuH,EAAmB,IAAVvH,IAAgB4f,MAAM5f,EAC/B,MACJ,KAAK,SACDuH,EAAmB,KAAVvH,CACT,MACJ,KAAK,SACDuH,GAAS,EACK,OAAVvH,IACAuH,GAAS,EACLvH,YAAiBvB,SAAO8I,EAASvH,EAAMlC,OAAS,GAExD,MACJ,SACIyJ,GAAS,EAEjB,MAAOA,IAIXmB,OAAQ,SAAgB1I,EAAO1E,GAC3B,SAAW0E,KAAU1E,EACjB,IACI,OAAQA,GACJ,IAAK,UACD0E,EAAQ6f,QAAQ7f,EAChB,MACJ,KAAK,SACDA,EAAQ8f,OAAO9f,EACf,MACJ,KAAK,SACDA,EAAQ0D,OAAO1D,EACf,MACJ,KAAK,SACDA,EAAQ,GAAI2e,QAAO3e,IAG7B,MAAOpD,GACL,KAAM,IAAIe,OAAM,iCAAmCrC,GAG3D,MAAO0E,IAIftD,GAAOC,QAAUgjB,OAEXI,IAAI,SAASnlB,EAAQ8B,GAC3B,YA+BA,IAAIsjB,IACAC,MAAO,EACPC,MAAO,EACPC,MAAO,EACPC,KAAM,SAGV1jB,GAAOC,QAAUqjB,OAEXK,IAAI,SAASzlB,EAAQ8B,GAC3B,YAEA,IAAIiI,GAAkB,SAAUC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,EAAI,WAAaA,GAEnFnF,EAAuB,SAAUC,EAAOC,EAAaC,GAAqBD,GAAa5D,OAAO8D,iBAAiBH,EAAOC,GAAkBC,GAAe7D,OAAO8D,iBAAiBH,EAAMzD,UAAW2D,IA2BhM9E,EAAc6J,EAAgB/J,EAAQ,sBAEtCoD,EAAkB2G,EAAgB/J,EAAQ,2BAE1C0lB,EAAoB3b,EAAgB/J,EAAQ,6BAE5CkE,EAAoB6F,EAAgB/J,EAAQ,6BAE5CuJ,EAAYQ,EAAgB/J,EAAQ,oBAEpC2lB,EAAe5b,EAAgB/J,EAAQ,wBAEvC4F,EAAYmE,EAAgB/J,EAAQ,oBAEpCqkB,EAAYta,EAAgB/J,EAAQ,oBAEpC4lB,EAAc7b,EAAgB/J,EAAQ,sBAGtCC,EAAO,WAEP,QAASA,KAELgB,KAAK4kB,SAAW,GAAI3lB,GACpBe,KAAK4kB,SAAS1gB,SAASugB,GACvBzkB,KAAK4kB,SAAS1gB,SAASjB,GACvBjD,KAAK4kB,SAAS1gB,SAAS/B,GAGvBnC,KAAKuI,OAAS,GAAID,EAClB,KAAK,GAAIuc,KAASH,GACd1kB,KAAKyI,KAAKoc,EAAOH,EAAaG,GAElC7kB,MAAK8kB,OAAS,GAAIngB,GA+FtB,MA5FAf,GAAqB5E,EAAM,MACvBmlB,SAGIhgB,MAAO,WACH,MAAOwgB,IAEXtgB,UAAU,EACVC,cAAc,GAElB/D,SAGI4D,MAAO,QAAS5D,GAAQA,GACpB,GAAyB,IAArBiF,UAAUvD,OAAc,KAAM,IAAIH,OAAM,4CAG5C,OAFA9B,MAAK4kB,SAASrgB,aACdvE,KAAK4kB,SAAS1gB,SAAS3D,GAChBP,MAEXqE,UAAU,EACVC,cAAc,GAElBmE,MAGItE,MAAO,QAASsE,GAAKD,EAAMC,GACvB,GAAyB,IAArBjD,UAAUvD,OAAc,KAAM,IAAIH,OAAM,yCAE5C,OADA9B,MAAKuI,OAAOrE,SAASsE,EAAMC,GACpBzI,MAEXqE,UAAU,EACVC,cAAc,GAElBygB,OAGI5gB,MAAO,SAAe6gB,GAClB,GAAyB,IAArBxf,UAAUvD,OAAc,KAAM,IAAIH,OAAM,0CAE5C,OADA9B,MAAK8kB,OAAOzf,MAAM2f,GACXhlB,MAEXqE,UAAU,EACVC,cAAc,GAElBgf,SAGInf,MAAO,SAAiBzD,EAAUE,GAC9B,GAAI4E,UAAUvD,OAAS,EAAG,KAAM,IAAIH,OAAM,mCAC1C,IAAI0D,UAAUvD,OAAS,EAAG,KAAM,IAAIH,OAAM,mCAC5BiB,UAAVnC,IAAqBA,GAAQ,EACjC,IAAIH,GAAQT,KAAK8kB,OAAOhlB,IAAIY,EAM5B,OALcqC,UAAVtC,IACAA,EAAQ,GAAI2iB,GACZ3iB,EAAM6iB,QAAQ5iB,EAAUE,GACxBZ,KAAK8kB,OAAOne,IAAIjG,EAAUD,IAEvBA,GAEX4D,UAAU,EACVC,cAAc,GAElBmf,SAGItf,MAAO,SAAiB/E,EAAMqB,EAAOE,EAAQC,GACzC,GAAI4E,UAAUvD,OAAS,EAAG,KAAM,IAAIH,OAAM,mCAC1C,IAAI0D,UAAUvD,OAAS,EAAG,KAAM,IAAIH,OAAM,mCAC3BiB,UAAXpC,IAAsBA,MACZoC,SAAVnC,IAAqBA,GAAQ,EACjC,IAAIL,GAAUP,KAAK4kB,SAASngB,OAAOrF,EACnC,IAAgB2D,SAAZxC,EAAuB,KAAM,IAAIuB,OAAM,mDAC3C,OAAOrB,GAAMgjB,QAAQrkB,EAAMmB,EAASI,EAAQX,KAAKuI,OAAQ3H,IAE7DyD,UAAU,EACVC,cAAc,GAElB7D,OAGI0D,MAAO,SAAe/E,EAAMsB,EAAUC,EAAQC,GAC1C,GAAI4E,UAAUvD,OAAS,EAAG,KAAM,IAAIH,OAAM,iCAC1C,IAAI0D,UAAUvD,OAAS,EAAG,KAAM,IAAIH,OAAM,iCAG1C,OAFeiB,UAAXpC,IAAsBA,MACZoC,SAAVnC,IAAqBA,GAAQ,GAC1BZ,KAAKyjB,QAAQrkB,EAAMY,KAAKsjB,QAAQ5iB,EAAUE,GAAQD,EAAQC,IAErEyD,UAAU,EACVC,cAAc,KAIftF,IAGX6B,GAAOC,QAAU9B,IAEdimB,yBAAyB,EAAEC,2BAA2B,EAAEC,2BAA2B,EAAEC,oBAAoB,EAAEC,kBAAkB,EAAEC,sBAAsB,EAAEC,kBAAkB,EAAEC,kBAAkB,GAAGC,oBAAoB,UAAU,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,KAAK;;;;;CCjzKhQ,SAAS1kB,GAAG,GAAG,gBAAiBD,UAAS,mBAAoBD,QAAOA,OAAOC,QAAQC,QAAS,IAAG,kBAAmBC,SAAQA,OAAOC,IAAID,UAAUD,OAAO,CAAC,GAAIG,EAAE,oBAAoBC,QAAOD,EAAEC,OAAO,mBAAoBC,QAAOF,EAAEE,OAAO,mBAAoBC,QAAOH,EAAEG,MAAMH,EAAEpC,KAAKiC,MAAM,WAAqC,MAAO,SAAUA,GAAEO,EAAEC,EAAEC,GAAG,QAASC,GAAEC,EAAEC,GAAG,IAAIJ,EAAEG,GAAG,CAAC,IAAIJ,EAAEI,GAAG,CAAC,GAAIE,GAAkB,kBAAT7C,UAAqBA,OAAQ,KAAI4C,GAAGC,EAAE,MAAOA,GAAEF,GAAE,EAAI,IAAGG,EAAE,MAAOA,GAAEH,GAAE,EAAI,IAAIR,GAAE,GAAIY,OAAM,uBAAuBJ,EAAE,IAAK,MAAMR,GAAEa,KAAK,mBAAmBb,EAAE,GAAIc,GAAET,EAAEG,IAAIZ,WAAYQ,GAAEI,GAAG,GAAGrB,KAAK2B,EAAElB,QAAQ,SAASC,GAAG,GAAIQ,GAAED,EAAEI,GAAG,GAAGX,EAAG,OAAOU,GAAEF,EAAEA,EAAER,IAAIiB,EAAEA,EAAElB,QAAQC,EAAEO,EAAEC,EAAEC,GAAG,MAAOD,GAAEG,GAAGZ,QAAkD,IAAI,GAA1Ce,GAAkB,kBAAT9C,UAAqBA,QAAgB2C,EAAE,EAAEA,EAAEF,EAAES,OAAOP,IAAID,EAAED,EAAEE,GAAI,OAAOD,KAAKS,GAAG,SAASwjB,EAAQ7kB,GAClxB,YAEA,IAAI+C,GAAuB,SAAUC,EAAOC,EAAaC,GAAqBD,GAAa5D,OAAO8D,iBAAiBH,EAAOC,GAAkBC,GAAe7D,OAAO8D,iBAAiBH,EAAMzD,UAAW2D,IA0BhM4hB,EAAW,WACX,QAASA,MA2JT,MAzJA/hB,GAAqB+hB,EAAU,MAC3BC,MAEIzhB,MAAO,SAAcgD,EAAGD,EAAG2e,GACvB,GAAiB,mBAAN1e,GAAmB,KAAM,IAAIrF,OAAM,yBAO9C,IANA9B,KAAKoC,MAAO,EACZpC,KAAKmH,EAAIA,EACTnH,KAAK8lB,GAAMA,EAAG,EAAGD,EAAG,EAAGE,EAAG,GAC1B/lB,KAAKkH,KACLlH,KAAK6lB,KACL7lB,KAAKgmB,EAAI,KACQ,gBAAN9e,GACP,IAAK,GAAI2d,KAAS3d,GACVA,EAAExE,eAAemiB,IAAQ7kB,KAAK2G,IAAIke,EAAO3d,EAAE2d,GAIvD,OADiB,gBAANgB,IAAkBA,YAAajjB,QAAO5C,KAAKqiB,IAAIwD,GACnD7lB,MAEXqE,UAAU,EACVC,cAAc,GAElB7E,MAGI0E,MAAO,SAAcgD,GACjB,GAAyB,IAArB3B,UAAUvD,OAAc,MAAOjC,MAAKmH,CAAO,IAAyB,IAArB3B,UAAUvD,OAEzD,MADAjC,MAAKmH,EAAIA,EACFnH,IACJ,MAAM,IAAI8B,OAAM,sCAE3BuC,UAAU,EACVC,cAAc,GAElB+C,KAGIlD,MAAO,SAAa2hB,EAAGD,EAAGE,GACtB,GAAyB,IAArBvgB,UAAUvD,OAAc,MAAOjC,MAAK8lB,CAAO,IAAItgB,UAAUvD,QAAU,EAInE,MAHAjC,MAAK8lB,EAAEA,EAAIA,GAAK,EAChB9lB,KAAK8lB,EAAED,EAAIA,GAAK,EAChB7lB,KAAK8lB,EAAEC,EAAIA,GAAK,EACT/lB,IACJ,MAAM,IAAI8B,OAAM,qCAE3BuC,UAAU,EACVC,cAAc,GAElBqC,KAGIxC,MAAO,WACH,GAAI3B,GAAQxC,KACRimB,EAAazgB,SACjB,IAAyB,IAArBA,UAAUvD,QAAwC,gBAAjBuD,WAAU,IAC3C,WACI,GAAImD,GAAOsd,CACX/lB,QAAO0F,KAAK+C,EAAK,IAAI9F,QAAQ,SAAUkD,GACnCvD,EAAM0E,EAAEnB,GAAO4C,EAAK,GAAG5C,YAG5B,CAAA,GAAyB,IAArBP,UAAUvD,OAAuD,KAAM,IAAIH,OAAM,yBAAzD9B,MAAKkH,EAAE1B,UAAU,IAAMA,UAAU,GACpE,MAAOxF,OAEXqE,UAAU,EACVC,cAAc,GAElBxE,KAGIqE,MAAO,SAAa4B,GAChB,GAAyB,IAArBP,UAAUvD,OAAc,KAAM,IAAIH,OAAM,mCAC5C,IAAmB,gBAARiE,GAAkB,KAAM,IAAIjE,OAAM,wBAC7C,OAAO9B,MAAKkH,EAAEnB,IAElB1B,UAAU,EACVC,cAAc,GAElB3E,OAGIwE,MAAO,WACH,MAAOjE,QAAO0F,KAAK5F,KAAKkH,IAE5B7C,UAAU,EACVC,cAAc,GAElB+d,KAGIle,MAAO,WACH,GAAI3B,GAAQxC,IACZ,IAAyB,IAArBwF,UAAUvD,OAAc,KAAM,IAAIH,OAAM,2BAC5C,IAAIokB,GAAO,SAAU9mB,EAAMyE,GACvB,KAAuB,gBAAVA,IAAyC,gBAAZA,GAAMsD,GAAqC,gBAAZtD,GAAMiiB,GAAqC,gBAAZjiB,GAAMqD,GAAqC,gBAAZrD,GAAMmiB,GAAsC,gBAAZniB,GAAMgiB,GAAkBhiB,EAAMgiB,YAAajjB,QAAS,KAAM,IAAId,OAAM,0BAA4BqkB,KAAKC,UAAUviB,GACtRzE,GAAKymB,EAAEljB,KAAKkB,GACZA,EAAMmiB,EAAI5mB,EASd,OAPkB,QAAdoG,WACA5C,MAAMxC,UAAUmD,MAAMlD,KAAKmF,UAAW,GAAG3C,QAAQ,SAAUwjB,GACpC,gBAARA,IAAoBA,YAAezjB,OAAOyjB,EAAIxjB,QAAQ,SAAUgB,GACvEqiB,EAAK1jB,EAAOqB,KACI,OAARwiB,GAAcH,EAAK1jB,EAAO6jB,KAGvCrmB,MAEXqE,UAAU,EACVC,cAAc,GAElBkC,KAGIrC,MAAO,WACH,GAAI3B,GAAQxC,IACZ,IAAyB,IAArBwF,UAAUvD,OAAc,KAAM,IAAIH,OAAM,wBAa5C,OAZAc,OAAMxC,UAAUmD,MAAMlD,KAAKmF,UAAW,GAAG3C,QAAQ,SAAUwjB,GAEvD,IAAK,GADDhY,IAAQ,EACHiY,EAAI,EAAGA,EAAI9jB,EAAMqjB,EAAE5jB,OAAQqkB,IAChC,GAAI9jB,EAAMqjB,EAAES,KAAOD,EAAK,CACpB7jB,EAAMqjB,EAAE5V,OAAOqW,EAAG,GAClBD,EAAIL,EAAI,KACR3X,GAAQ,CACR,OAGR,IAAKA,EAAO,KAAM,IAAIvM,OAAM,0BAEzB9B,MAEXqE,UAAU,EACVC,cAAc,GAElB/E,QAGI4E,MAAO,WACH,MAAOnE,MAAK6lB,GAEhBxhB,UAAU,EACVC,cAAc,GAElBjF,QAGI8E,MAAO,WACH,MAAOnE,MAAKgmB,GAEhB3hB,UAAU,EACVC,cAAc,KAIfqhB,IAGX9kB,GAAOC,QAAU6kB,OAEXtjB,GAAG,SAASqjB,EAAQ7kB,GAC1B,YAEA,IAAI+C,GAAuB,SAAUC,EAAOC,EAAaC,GAAqBD,GAAa5D,OAAO8D,iBAAiBH,EAAOC,GAAkBC,GAAe7D,OAAO8D,iBAAiBH,EAAMzD,UAAW2D,IA0BhMwiB,EAAW,WACX,QAASA,MA8CT,MA5CA3iB,GAAqB2iB,EAAU,MAC3B/C,MAEIrf,MAAO,SAAcqiB,GACAzjB,SAAbyjB,IAAwBA,EAAWrhB,IACvC,IAAIshB,GAAM,EAgCV,OA/BAzmB,MAAK8K,KAAK,SAAU1L,EAAMgI,GACtB,KAAIA,EAAQof,GAAZ,CACA,IAAK,GAAI3kB,GAAI,EAAOuF,EAAJvF,EAAWA,IACvB4kB,GAAO,MACVA,IAAOrnB,EAAK+H,EAAI,GACjB,IAAIvB,GAAO1F,OAAO0F,KAAKxG,EAAK8H,EACxBtB,GAAK3D,OAAS,IACd,WACIwkB,GAAO,GACP,IAAI/e,IAAQ,CACZ9B,GAAK/C,QAAQ,SAAUkD,GACd2B,EAAwBA,GAAQ,EAAzB+e,GAAO,KACnBA,GAAO1gB,EAAM,IACb,IAAI5B,GAAQ/E,EAAK8H,EAAEnB,EACnB,cAAe5B,IACX,IAAK,SACDsiB,GAAO,IAAOtiB,EAAMyJ,QAAQ,KAAM,OAAOA,QAAQ,IAAK,OAAU,GAChE,MACJ,KAAK,SAC4B6Y,GAAzBtiB,YAAiB2e,QAAe,IAAM3e,EAAMmM,WAAW1C,QAAQ,MAAO,IAAIA,QAAQ,MAAO,IAAIA,QAAQ,MAAO,OAAS,IAAgBuY,KAAKC,UAAUjiB,EACxJ,MACJ,SACIsiB,GAAON,KAAKC,UAAUjiB,MAIlCsiB,GAAO,QAGfA,GAAO,IAAMrnB,EAAK0mB,EAAEA,EAAI,IAAM1mB,EAAK0mB,EAAED,EAAI,QAC1C,YACIY,GAEXpiB,UAAU,EACVC,cAAc,KAIfiiB,IAGX1lB,GAAOC,QAAUylB,OAEXvjB,GAAG,SAAS0iB,EAAQ7kB,GAC1B,YAEA,IAAI+C,GAAuB,SAAUC,EAAOC,EAAaC,GAAqBD,GAAa5D,OAAO8D,iBAAiBH,EAAOC,GAAkBC,GAAe7D,OAAO8D,iBAAiBH,EAAMzD,UAAW2D,IA0BhM2iB,EAAY,WACZ,QAASA,MA4BT,MA1BA9iB,GAAqB8iB,EAAW,MAC5BlE,OAEIre,MAAO,SAAe/E,EAAMunB,EAASC,GACjC,GAAIpkB,GAAQxC,IACZ,IAAoB,gBAATZ,GAAmB,KAAM,IAAI0C,OAAM,mCAG9C,IAFuB,mBAAZ6kB,KAAyBA,GAAU,GACvB,mBAAZC,KAAyBA,MAChCD,EAAS,CACT,GAAItf,GAAMjI,EAAKiI,KACfrH,MAAKqH,IAAIA,EAAIye,EAAGze,EAAIwe,EAAGxe,EAAI0e,GAS/B,MAPA3mB,GAAKO,QAAQkD,QAAQ,SAAUgkB,GAC3B,GAAIC,GAA4C,mBAAxBF,GAAQC,GAA8BD,EAAQC,GAAcA,CACjE,QAAfC,GAAqBtkB,EAAMmE,IAAImgB,EAAY1nB,EAAKU,IAAI+mB,MAE5DznB,EAAKG,SAASsD,QAAQ,SAAUgB,GAC5BrB,EAAM6f,IAAIxe,KAEP7D,MAEXqE,UAAU,EACVC,cAAc,KAIfoiB,IAGX7lB,GAAOC,QAAU4lB,OAEX/iB,GAAG,SAAS+hB,EAAQ7kB,GAC1B,YAEA,IAAI+C,GAAuB,SAAUC,EAAOC,EAAaC,GAAqBD,GAAa5D,OAAO8D,iBAAiBH,EAAOC,GAAkBC,GAAe7D,OAAO8D,iBAAiBH,EAAMzD,UAAW2D,IA0BhMgjB,EAAW,WACX,QAASA,MAsBT,MApBAnjB,GAAqBmjB,EAAU,MAC3Bjc,MAEI3G,MAAO,SAAcwB,EAAIqhB,GACD,mBAATA,KAAsBA,EAAO,WACxC,IAAIC,GAAQ,SAAU7nB,EAAMgI,EAAO/H,IAClB,aAAT2nB,GAAgC,SAATA,IAAiBrhB,EAAGtF,KAAK,KAAMjB,EAAMgI,EAAO/H,EAAQ,YAC/ED,EAAKymB,EAAEhjB,QAAQ,SAAUgB,GACrBojB,EAAMpjB,EAAOuD,EAAQ,EAAGhI,MAEf,WAAT4nB,GAA8B,SAATA,IAAiBrhB,EAAGtF,KAAK,KAAMjB,EAAMgI,EAAO/H,EAAQ,UAGjF,OADA4nB,GAAMjnB,KAAM,EAAG,MACRA,MAEXqE,UAAU,EACVC,cAAc,KAIfyiB,IAGXlmB,GAAOC,QAAUimB,OAEXriB,GAAG,SAASghB,EAAQ7kB,GAC1B,YAEA,IAAI+C,GAAuB,SAAUC,EAAOC,EAAaC,GAAqBD,GAAa5D,OAAO8D,iBAAiBH,EAAOC,GAAkBC,GAAe7D,OAAO8D,iBAAiBH,EAAMzD,UAAW2D,IA0BhM4hB,EAAWD,EAAQ,kBACnBgB,EAAYhB,EAAQ,mBACpBqB,EAAWrB,EAAQ,kBACnBa,EAAWb,EAAQ,kBAEnBwB,EAAU,WACV,QAASA,KACL,GAAI1kB,GAAQxC,IACZ,MAAMA,eAAgBknB,IAAU,MAAO,IAAIA,EAC3ClnB,MAAKmnB,SAAW,YAChB,IAAIC,KAAWzB,EAAU,OAAQ,OAAQ,MAAO,MAAO,MAAO,QAAS,MAAO,MAAO,SAAU,WAAYe,EAAW,UAAWK,EAAU,SAAUR,EAAU,QAO/J,OANAa,GAAOvkB,QAAQ,SAAUwkB,GACrB,GAAIC,GAAQD,EAAM,GAAGjnB,SACrBinB,GAAM9jB,MAAM,GAAGV,QAAQ,SAAU0kB,GAC7B/kB,EAAM2kB,SAAS/mB,UAAUmnB,GAAUD,EAAMC,OAG1CvnB,KA6BX,MA1BA4D,GAAqBsjB,EAAS,MAC1B1mB,QACI2D,MAAO,SAAgBkjB,GACnB,IAAK,GAAIE,KAAUF,GACXA,EAAM3kB,eAAe6kB,KAASvnB,KAAKmnB,SAAS/mB,UAAUmnB,GAAUF,EAAME,GAC7E,OAAOvnB,OAEZqE,UAAU,EACVC,cAAc,GAElB+E,QACIlF,MAAO,SAAgB1E,GACnB,OAAO,GAAIO,MAAKmnB,UAAWvB,KAAKnmB,IAEpC4E,UAAU,EACVC,cAAc,GAElBkjB,KACIrjB,MAAO,SAAa/E,GAChB,MAAuB,gBAATA,IAAqBA,YAAgBY,MAAKmnB,UAAiC,iBAAd/nB,GAAKgD,MAAsBhD,EAAKgD,QAAS,GAExHiC,UAAU,EACVC,cAAc,KAIf4iB,IAGXrmB,GAAOC,QAAUomB,IAEdO,iBAAiB,EAAEC,iBAAiB,EAAEC,kBAAkB,EAAEC,iBAAiB,SAAS,EAAE,EAAE,EAAE,EAAE,IAAI;;;;8nBFtd/F9oB,KAAOC,QAAQ,QACfC,KAAOD,QAAQ,QAGfE,YAAW,mBAASA,kCAAAA,EAAW,MAC/BC,aAAiB,WAAe,OAAO,gCACvCC,qBAAiB,SAACC,GAAc,MAAOA,GAAKC,uCAC5CC,qBAAiB,SAACF,GAAc,MAAOA,GAAKG,uCAC5CC,mBAAiB,SAACJ,GAAc,MAAOA,GAAKK,qCAC5CC,wBAAiB,SAACN,GAAc,MAAOA,GAAKO,sCAC5CC,wBAAiB,SAACR,EAAMS,GAAQ,MAAOT,GAAKU,IAAID,mCAN5BZ,KAUpBc,SAAQ,SAA0BjB,GACtB,QADKiB,KAGb,KAAMC,eAAgBD,IAClB,MAAO,IAAIA,EAGfE,MAAAC,OAAAC,eAPaJ,EAAQK,WAAA,cAAAJ,MAAAK,KAAAL,KAUrB,IAAIM,GAAO,GAAItB,KASf,OARAsB,GAAKC,QAAQ,GAAItB,cAGjBe,KAAKQ,QACDC,MAAM,SAACC,EAAUC,EAAQC,GACrB,MAAON,GAAKG,MAAMT,KAAMU,EAAUC,EAAQC,MAG3CZ,sBAnBMD,EAAiBjB,GAAjBiB,GAAiBjB,KAwBtC+B,QAAOC,QAAUf","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/*\n**  ASTy-ASTq -- Abstract Syntax Tree With Integrated Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/*  require both ASTy and ASTq  */\nlet ASTY = require(\"asty\")\nlet ASTQ = require(\"astq\")\n\n/*  define an ASTq adapter for ASTy  */\nlet ASTQAdapter = class ASTQAdapter {\n    taste            (/* node */) { return true           }\n    getParentNode    (node)       { return node.parent()  }\n    getChildNodes    (node)       { return node.childs()  }\n    getNodeType      (node)       { return node.type()    }\n    getNodeAttrNames (node)       { return node.attrs()   }\n    getNodeAttrValue (node, attr) { return node.get(attr) }\n}\n\n/*  define an ASTy super class hooking up ASTq to ASTy  */\nlet ASTYASTQ = class ASTYASTQ extends ASTY {\n    constructor () {\n        /*  allow us to be called without \"new\"  */\n        if (!(this instanceof ASTYASTQ))\n            return new ASTYASTQ()\n\n        /*  give ASTy super class a chance to initialize  */\n        super()\n\n        /*  create an ASTq instance, able to operate on ASTy  */\n        let astq = new ASTQ()\n        astq.adapter(new ASTQAdapter())\n\n        /*  extend this ASTy instance with an ASTq query method  */\n        this.extend({\n            query (selector, params, trace) {\n                return astq.query(this, selector, params, trace)\n            }\n        })\n        return this\n    }\n}\n\n/*  export us as an ASTy super class  */\nmodule.exports = ASTYASTQ\n\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n!function(e){if(\"object\"==typeof exports&&\"undefined\"!=typeof module)module.exports=e();else if(\"function\"==typeof define&&define.amd)define([],e);else{var f;\"undefined\"!=typeof window?f=window:\"undefined\"!=typeof global?f=global:\"undefined\"!=typeof self&&(f=self),f.ASTQ=e()}}(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n\"use strict\";\n\n/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nvar ASTQAdapterASTY = {\n    taste: function taste(node) {\n        return typeof node === \"object\" && typeof node.ASTy === \"boolean\";\n    },\n    getParentNode: function getParentNode(node) {\n        return node.parent();\n    },\n    getChildNodes: function getChildNodes(node) {\n        return node.childs();\n    },\n    getNodeType: function getNodeType(node) {\n        return node.type();\n    },\n    getNodeAttrNames: function getNodeAttrNames(node) {\n        return node.attrs();\n    },\n    getNodeAttrValue: function getNodeAttrValue(node, attr) {\n        return node.get(attr);\n    }\n};\n\nmodule.exports = ASTQAdapterASTY;\n\n},{}],2:[function(require,module,exports){\n\"use strict\";\n\n/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/*  See also: https://developer.mozilla.org/en-US/docs/Mozilla/Projects/SpiderMonkey/Parser_API  */\n\nvar ASTQAdapterMozAST = {\n    taste: function taste(node) {\n        return typeof node === \"object\" && typeof node.type === \"string\" && typeof node.loc === \"object\";\n    },\n    getParentNode: function getParentNode() {\n        throw new Error(\"Mozilla SpiderMonkey AST does not support parent node traversal\");\n    },\n    getChildNodes: function getChildNodes(node) {\n        var _this = this;\n        var childs = [];\n        for (var field in node) {\n            if (node.hasOwnProperty(field) && this.taste(node[field])) childs.push(node);else if (node.hasOwnProperty(field) && typeof node[field] === \"object\" && node[field] instanceof Array) {\n                node[field].forEach(function (node) {\n                    if (_this.taste(node)) childs.push(node);\n                });\n            }\n        }\n        return childs;\n    },\n    getNodeType: function getNodeType(node) {\n        return node.type;\n    },\n    getNodeAttrNames: function getNodeAttrNames(node) {\n        var names = [];\n        for (var field in node) {\n            if (node.hasOwnProperty(field) && typeof node[field] !== \"object\" && field !== \"type\" && field !== \"loc\") names.push(field);\n        }return names;\n    },\n    getNodeAttrValue: function getNodeAttrValue(node, attr) {\n        if (node.hasOwnProperty(attr) && typeof node[attr] !== \"object\" && attr !== \"type\" && attr !== \"loc\") return node[attr];else return undefined;\n    }\n};\n\nmodule.exports = ASTQAdapterMozAST;\n/* node */\n\n},{}],3:[function(require,module,exports){\n\"use strict\";\n\n/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nvar ASTQAdapterXMLDOM = {\n    taste: function taste(node) {\n        /* global Node: true */\n        return typeof Node === \"object\" && node instanceof Node && typeof node === \"object\" && typeof node.nodeType === \"number\" && typeof node.nodeName === \"string\";\n    },\n    getParentNode: function getParentNode(node) {\n        return node.parentNode;\n    },\n    getChildNodes: function getChildNodes(node) {\n        return node.childNodes;\n    },\n    getNodeType: function getNodeType(node) {\n        return node.nodeName;\n    },\n    getNodeAttrNames: function getNodeAttrNames(node) {\n        return Array.prototype.slice.call(node.attributes, 0).map(function (n) {\n            return n.nodeName;\n        });\n    },\n    getNodeAttrValue: function getNodeAttrValue(node, attr) {\n        return node.getAttribute(attr);\n    }\n};\n\nmodule.exports = ASTQAdapterXMLDOM;\n\n},{}],4:[function(require,module,exports){\n\"use strict\";\n\nvar _prototypeProperties = function (child, staticProps, instanceProps) { if (staticProps) Object.defineProperties(child, staticProps); if (instanceProps) Object.defineProperties(child.prototype, instanceProps); };\n\n/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nvar ASTQAdapter = (function () {\n    function ASTQAdapter() {\n        this._adapters = [];\n        return this;\n    }\n\n    _prototypeProperties(ASTQAdapter, null, {\n        register: {\n            value: function register(adapter) {\n                this._adapters.unshift(adapter);\n                return this;\n            },\n            writable: true,\n            configurable: true\n        },\n        unregister: {\n            value: function unregister(adapter) {\n                if (adapter === undefined) this._adapters = [];else {\n                    var adapters = [];\n                    for (var i = 0; i < this._adapters.length; i++) {\n                        if (this._adapters[i] !== adapter) adapters.push(this._adapters[i]);\n                    }this._adapters = adapters;\n                }\n                return this;\n            },\n            writable: true,\n            configurable: true\n        },\n        select: {\n            value: function select(node) {\n                for (var i = 0; i < this._adapters.length; i++) {\n                    if (this._adapters[i].taste(node)) return this._adapters[i];\n                }return undefined;\n            },\n            writable: true,\n            configurable: true\n        }\n    });\n\n    return ASTQAdapter;\n})();\n\nmodule.exports = ASTQAdapter;\n\n},{}],5:[function(require,module,exports){\n\"use strict\";\n\nvar _prototypeProperties = function (child, staticProps, instanceProps) { if (staticProps) Object.defineProperties(child, staticProps); if (instanceProps) Object.defineProperties(child.prototype, instanceProps); };\n\n/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nvar ASTQCache = (function () {\n    /*  create LRU cache instance  */\n    function ASTQCache() {\n        this._index = {};\n        this._oldHead = { newer: null };\n        this._newHead = { older: null };\n        this._oldHead.newer = this._newHead;\n        this._newHead.older = this._oldHead;\n        this._cur = 0;\n        this._max = Infinity;\n        this._dispose = function () {};\n        return this;\n    }\n\n    _prototypeProperties(ASTQCache, null, {\n        limit: {\n\n            /*  get or set the cache limit  */\n            value: function limit(max) {\n                var maxOld = this._max;\n                if (arguments.length > 0) {\n                    this._max = max;\n                    this._purge();\n                }\n                return maxOld;\n            },\n            writable: true,\n            configurable: true\n        },\n        dispose: {\n\n            /*  configure function to be called before item is disposed  */\n            value: function dispose(cb) {\n                this._dispose = cb;\n                return this;\n            },\n            writable: true,\n            configurable: true\n        },\n        length: {\n\n            /*  get number of items  */\n            value: function length() {\n                return this._cur;\n            },\n            writable: true,\n            configurable: true\n        },\n        keys: {\n\n            /*  get keys of all items in order  */\n            value: function keys() {\n                return this.each(function (val, key) {\n                    this.push(key);\n                }, []);\n            },\n            writable: true,\n            configurable: true\n        },\n        values: {\n\n            /*  get values of all items in order */\n            value: function values() {\n                return this.each(function (val /*, key */) {\n                    this.push(val);\n                }, []);\n            },\n            writable: true,\n            configurable: true\n        },\n        each: {\n\n            /*  iterate over all items in order  */\n            value: function each(cb, ctx) {\n                if (arguments < 2) ctx = this;\n                var i = 0;\n                var bucket = this._newHead.older;\n                while (bucket !== this._oldHead) {\n                    cb.call(ctx, bucket.val, bucket.key, i++);\n                    bucket = bucket.older;\n                }\n                return ctx;\n            },\n            writable: true,\n            configurable: true\n        },\n        has: {\n\n            /*  check whether item exists under key  */\n            value: function has(key) {\n                var bucket = this._index[key];\n                return bucket !== undefined;\n            },\n            writable: true,\n            configurable: true\n        },\n        peek: {\n\n            /*  get value under key without promoting item  */\n            value: function peek(key) {\n                var bucket = this._index[key];\n                if (bucket === undefined) return undefined;\n                if (bucket.expires < Date.now()) {\n                    this.del(bucket.key);\n                    return undefined;\n                }\n                return bucket.val;\n            },\n            writable: true,\n            configurable: true\n        },\n        touch: {\n\n            /*  explicity promote item under key  */\n            value: function touch(key) {\n                var bucket = this._index[key];\n                if (bucket !== undefined) this._promote(bucket);\n                return this;\n            },\n            writable: true,\n            configurable: true\n        },\n        get: {\n\n            /*  get value under key  */\n            value: function get(key) {\n                var val = this.peek(key);\n                this.touch(key);\n                return val;\n            },\n            writable: true,\n            configurable: true\n        },\n        set: {\n\n            /*  set value under key  */\n            value: function set(key, val, expires) {\n                if (arguments.length < 3) expires = Infinity;\n                expires += Date.now();\n                var bucket = this._index[key];\n                if (bucket === undefined) {\n                    /*  insert new bucket  */\n                    bucket = {\n                        older: null,\n                        newer: null,\n                        key: key,\n                        val: val,\n                        expires: expires\n                    };\n                    this._index[key] = bucket;\n                    this._attach(bucket);\n                    this._cur++;\n                    this._purge();\n                } else {\n                    /*  replace existing bucket  */\n                    var valOld = bucket.val;\n                    bucket.val = val;\n                    this._promote(bucket);\n                    this._dispose(undefined, bucket.key, valOld, \"set\");\n                }\n                return this;\n            },\n            writable: true,\n            configurable: true\n        },\n        del: {\n\n            /*  delete item under key  */\n            value: function del(key) {\n                var bucket = this._index[key];\n                if (bucket === undefined) throw new Error(\"ASTQ::Cache#del: no such item\");\n                delete this._index[key];\n                this._detach(bucket);\n                this._cur--;\n                this._dispose(undefined, key, bucket.val, \"del\");\n                return this;\n            },\n            writable: true,\n            configurable: true\n        },\n        clear: {\n\n            /*  delete all items  */\n            value: function clear() {\n                while (this._cur > 0) this.del(this._oldHead.newer.key);\n                return this;\n            },\n            writable: true,\n            configurable: true\n        },\n        _purge: {\n\n            /*  INTERNAL: purge all LRU items above limit  */\n            value: function _purge() {\n                while (this._cur > this._max) this.del(this._oldHead.newer.key);\n            },\n            writable: true,\n            configurable: true\n        },\n        _promote: {\n\n            /*  INTERNAL: promote item  */\n            value: function _promote(bucket) {\n                /*  promote bucket to be MRU bucket  */\n                this._detach(bucket);\n                this._attach(bucket);\n            },\n            writable: true,\n            configurable: true\n        },\n        _detach: {\n\n            /*  INTERNAL: detach bucket from list  */\n            value: function _detach(bucket) {\n                bucket.older.newer = bucket.newer;\n                bucket.newer.older = bucket.older;\n                bucket.older = null;\n                bucket.newer = null;\n            },\n            writable: true,\n            configurable: true\n        },\n        _attach: {\n\n            /*  INTERNAL: attach bucket to list as MRU bucket  */\n            value: function _attach(bucket) {\n                bucket.older = this._newHead.older;\n                bucket.newer = this._newHead;\n                bucket.newer.older = bucket;\n                bucket.older.newer = bucket;\n            },\n            writable: true,\n            configurable: true\n        }\n    });\n\n    return ASTQCache;\n})();\n\nmodule.exports = ASTQCache;\n/* key, val, op */\n\n},{}],6:[function(require,module,exports){\n\"use strict\";\n\n/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nvar stdfuncs = {\n    /*  type name of node  */\n    type: function (A, T) {\n        return A.getNodeType(T);\n    },\n\n    /*  depth of node in tree  */\n    depth: function (A, T) {\n        var depth = 1;\n        var node = T;\n        while ((node = A.getParentNode(node)) !== null) depth++;\n        return depth;\n    },\n\n    /*  return position of node between siblings  */\n    pos: function (A, T) {\n        var parent = A.getParentNode(T);\n        if (parent === null) return 1;\n        var pchilds = A.getChildNodes(parent);\n        for (var i = 0; i < pchilds.length; i++) {\n            if (pchilds[i] === T) return i + 1;\n        }throw new Error(\"cannot find myself\");\n    },\n\n    /*  check position of node between siblings  */\n    nth: function (A, T, num) {\n        num = parseInt(num, 10);\n        var parent = A.getParentNode(T);\n        if (parent !== null) {\n            var pchilds = A.getChildNodes(parent);\n            if (num < 0) num = pchilds - (num + 1);\n            for (var i = 0; i < pchilds.length; i++) {\n                if (pchilds[i] === T) return i + 1 === num;\n            }return false;\n        } else if (num === 1) return true;else return false;\n    },\n\n    /*  check position of node to be first of siblings  */\n    first: function (A, T) {\n        return stdfuncs.nth(A, T, 1);\n    },\n\n    /*  check position of node to be last of siblings  */\n    last: function (A, T) {\n        return stdfuncs.nth(A, T, -1);\n    },\n\n    /*  count number of keys/elements/characters/etc  */\n    count: function (A, T, val) {\n        if (typeof val === \"object\" && val instanceof Array) return val.length;else if (typeof val === \"object\") return Object.keys(val).length;else if (typeof val === \"string\") return val.length;else return String(val).length;\n    },\n\n    /*  retrieve a sub-string  */\n    substr: function (A, T, str, pos, len) {\n        return String(str).substr(pos, len);\n    },\n\n    /*  convert string to lower-case  */\n    lc: function (A, T, str) {\n        return String(str).toLowerCase();\n    },\n\n    /*  convert string to upper-case  */\n    uc: function (A, T, str) {\n        return String(str).toUpperCase();\n    }\n};\n\nmodule.exports = stdfuncs;\n\n},{}],7:[function(require,module,exports){\n\"use strict\";\n\nvar _prototypeProperties = function (child, staticProps, instanceProps) { if (staticProps) Object.defineProperties(child, staticProps); if (instanceProps) Object.defineProperties(child.prototype, instanceProps); };\n\n/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nvar ASTQFuncs = (function () {\n    function ASTQFuncs() {\n        this._funcs = {};\n        return this;\n    }\n\n    _prototypeProperties(ASTQFuncs, null, {\n        register: {\n            value: function register(name, func) {\n                this._funcs[name] = func;\n            },\n            writable: true,\n            configurable: true\n        },\n        run: {\n            value: function run(name, args) {\n                var func = this._funcs[name];\n                if (typeof func !== \"function\") throw new Error(\"invalid function \\\"\" + name + \"\\\"\");\n                return func.apply(null, args);\n            },\n            writable: true,\n            configurable: true\n        }\n    });\n\n    return ASTQFuncs;\n})();\n\nmodule.exports = ASTQFuncs;\n\n},{}],8:[function(require,module,exports){\n\"use strict\";\n\nvar _interopRequire = function (obj) { return obj && obj.__esModule ? obj[\"default\"] : obj; };\n\nvar _prototypeProperties = function (child, staticProps, instanceProps) { if (staticProps) Object.defineProperties(child, staticProps); if (instanceProps) Object.defineProperties(child.prototype, instanceProps); };\n\nvar _inherits = function (subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) subClass.__proto__ = superClass; };\n\n/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nvar util = _interopRequire(require(\"./astq-util.js\"));\n\nvar ASTQQueryTrace = _interopRequire(require(\"./astq-query-trace.js\"));\n\nvar ASTQQueryExec = (function (ASTQQueryTrace) {\n    function ASTQQueryExec(adapter, params, funcs, trace) {\n        this.adapter = adapter;\n        this.params = params;\n        this.funcs = funcs;\n        this.trace = trace;\n    }\n\n    _inherits(ASTQQueryExec, ASTQQueryTrace);\n\n    _prototypeProperties(ASTQQueryExec, null, {\n        execQuery: {\n            value: function execQuery(Q, T) {\n                var _this = this;\n                this.traceBegin(Q, T);\n                var output = [];\n                Q.childs().forEach(function (Q) {\n                    output = output.concat(_this.execPath(Q, T));\n                });\n                this.traceEnd(Q, T, output);\n                return output;\n            },\n            writable: true,\n            configurable: true\n        },\n        execPath: {\n            value: function execPath(Q, T) {\n                var _this = this;\n                this.traceBegin(Q, T);\n                var nodes = [T];\n                Q.childs().forEach(function (Q) {\n                    var output = [];\n                    nodes.forEach(function (T) {\n                        output = output.concat(_this.execStep(Q, T));\n                    });\n                    nodes = output;\n                });\n                this.traceEnd(Q, T, nodes);\n                return nodes;\n            },\n            writable: true,\n            configurable: true\n        },\n        execStep: {\n            value: function execStep(Q, T) {\n                var _this = this;\n                this.traceBegin(Q, T);\n\n                /*  determine (optional) axis, (mandatory) match and (optional) filter  */\n                var childs = Q.childs();\n                var axis = null;\n                var match = null;\n                var filter = null;\n                var i = 0;\n                if (i < childs.length && childs[i].type() === \"Axis\") axis = childs[i++];\n                if (i < childs.length && childs[i].type() === \"Match\") match = childs[i++];\n                if (i < childs.length && childs[i].type() === \"Filter\") filter = childs[i++];\n                if (match === null) throw new Error(\"no matching part in query step\");\n\n                var nodes = [];\n\n                /*  helper function for matching and taking node  */\n                var id = match.get(\"id\");\n                var matchAndTake = function (T) {\n                    var type = _this.adapter.getNodeType(T);\n                    if (id === \"*\" || id === type) {\n                        var take = true;\n                        if (filter !== null) if (!_this.execFilter(filter, T)) take = false;\n                        if (take) nodes.push(T);\n                    }\n                };\n\n                /*  determine nodes along axis which potentially might match  */\n                if (axis !== null) {\n                    var op = axis.get(\"op\");\n                    if (op === \"/\") {\n                        /*  direct child nodes  */\n                        this.adapter.getChildNodes(T).forEach(function (T) {\n                            return matchAndTake(T);\n                        });\n                    } else if (op === \"//\") {\n                        (function () {\n                            /*  transitive child nodes  */\n                            var walk = function (T) {\n                                matchAndTake(T);\n                                _this.adapter.getChildNodes(T).forEach(function (T) {\n                                    return walk(T);\n                                });\n                            };\n                            _this.adapter.getChildNodes(T).forEach(function (T) {\n                                return walk(T);\n                            });\n                        })();\n                    } else if (op === \"-/\") {\n                        /*  direct left sibling  */\n                        var _parent = this.adapter.getParentNode(T);\n                        if (_parent !== null) {\n                            var pchilds = this.adapter.getChildNodes(_parent);\n                            var leftSibling = null;\n                            for (var _i = 0; _i < pchilds.length; _i++) {\n                                if (pchilds[_i] === T) break;\n                                leftSibling = pchilds[_i];\n                            }\n                            matchAndTake(leftSibling);\n                        }\n                    } else if (op === \"-//\") {\n                        /*  transitive left siblings  */\n                        var _parent2 = this.adapter.getParentNode(T);\n                        if (_parent2 !== null) {\n                            var pchilds = this.adapter.getChildNodes(_parent2);\n                            for (var _i2 = 0; _i2 < pchilds.length; _i2++) {\n                                if (pchilds[_i2] === T) break;\n                                matchAndTake(pchilds[_i2]);\n                            }\n                        }\n                    } else if (op === \"+/\") {\n                        /*  direct right sibling  */\n                        var _parent3 = this.adapter.getParentNode(T);\n                        if (_parent3 !== null) {\n                            var pchilds = this.adapter.getChildNodes(_parent3);\n                            var _i3 = undefined;\n                            for (_i3 = 0; _i3 < pchilds.length; _i3++) if (pchilds[_i3] === T) break;\n                            if (_i3 < pchilds.length) {\n                                _i3++;\n                                matchAndTake(pchilds[_i3]);\n                            }\n                        }\n                    } else if (op === \"+//\") {\n                        /*  transitive right siblings  */\n                        var _parent4 = this.adapter.getParentNode(T);\n                        if (_parent4 !== null) {\n                            var pchilds = this.adapter.getChildNodes(_parent4);\n                            var _i4 = undefined;\n                            for (_i4 = 0; _i4 < pchilds.length; _i4++) if (pchilds[_i4] === T) break;\n                            if (_i4 < pchilds.length) {\n                                _i4++;\n                                while (_i4 < pchilds.length) matchAndTake(pchilds[_i4++]);\n                            }\n                        }\n                    } else if (op === \"../\") {\n                        /*  direct parent  */\n                        var _parent5 = this.adapter.getParentNode(T);\n                        if (_parent5 !== null) matchAndTake(_parent5);\n                    } else if (op === \"..//\") {\n                        /*  transitive parents  */\n                        var node = T;\n                        while (true) {\n                            var _parent6 = this.adapter.getParentNode(node);\n                            if (parent === null) break;\n                            matchAndTake(parent);\n                            node = parent;\n                        }\n                    }\n                } else\n                    /*  current node  */\n                    matchAndTake(T);\n\n                this.traceEnd(Q, T, nodes);\n                return nodes;\n            },\n            writable: true,\n            configurable: true\n        },\n        execFilter: {\n            value: function execFilter(Q, T) {\n                this.traceBegin(Q, T);\n                var expr = Q.childs()[0];\n                var result = this.execExpr(expr, T);\n                result = util.truthy(result);\n                this.traceEnd(Q, T, result);\n                return result;\n            },\n            writable: true,\n            configurable: true\n        },\n        execExpr: {\n            value: function execExpr(Q, T) {\n                switch (Q.type()) {\n                    case \"ConditionalBinary\":\n                        return this.execExprConditionalBinary(Q, T);\n                    case \"ConditionalTernary\":\n                        return this.execExprConditionalTernary(Q, T);\n                    case \"Logical\":\n                        return this.execExprLogical(Q, T);\n                    case \"Bitwise\":\n                        return this.execExprBitwise(Q, T);\n                    case \"Relational\":\n                        return this.execExprRelational(Q, T);\n                    case \"Arithmetical\":\n                        return this.execExprArithmetical(Q, T);\n                    case \"Unary\":\n                        return this.execExprUnary(Q, T);\n                    case \"FuncCall\":\n                        return this.execExprFuncCall(Q, T);\n                    case \"Attribute\":\n                        return this.execExprAttribute(Q, T);\n                    case \"Param\":\n                        return this.execExprParam(Q, T);\n                    case \"LiteralString\":\n                        return this.execExprLiteralString(Q, T);\n                    case \"LiteralRegExp\":\n                        return this.execExprLiteralRegExp(Q, T);\n                    case \"LiteralNumber\":\n                        return this.execExprLiteralNumber(Q, T);\n                    case \"LiteralValue\":\n                        return this.execExprLiteralValue(Q, T);\n                    case \"Path\":\n                        return this.execExprPath(Q, T);\n                }\n            },\n            writable: true,\n            configurable: true\n        },\n        execExprConditionalBinary: {\n            value: function execExprConditionalBinary(Q, T) {\n                this.traceBegin(Q, T);\n                var result = this.execExpr(Q.childs()[0], T);\n                if (!util.truthy(result)) result = this.execExpr(Q.childs()[1], T);\n                this.traceEnd(Q, T, result);\n                return result;\n            },\n            writable: true,\n            configurable: true\n        },\n        execExprConditionalTernary: {\n            value: function execExprConditionalTernary(Q, T) {\n                this.traceBegin(Q, T);\n                var result = this.execExpr(Q.childs()[0], T);\n                if (util.truthy(result)) result = this.execExpr(Q.childs()[1], T);else result = this.execExpr(Q.childs()[2], T);\n                this.traceEnd(Q, T, result);\n                return result;\n            },\n            writable: true,\n            configurable: true\n        },\n        execExprLogical: {\n            value: function execExprLogical(Q, T) {\n                this.traceBegin(Q, T);\n                var result = false;\n                switch (Q.get(\"op\")) {\n                    case \"&&\":\n                        result = util.truthy(this.execExpr(Q.childs()[0], T));\n                        if (result) result = result && util.truthy(this.execExpr(Q.childs()[1], T));\n                        break;\n                    case \"||\":\n                        result = util.truthy(this.execExpr(Q.childs()[0], T));\n                        if (!result) result = result || util.truthy(this.execExpr(Q.childs()[1], T));\n                        break;\n                }\n                this.traceEnd(Q, T, result);\n                return result;\n            },\n            writable: true,\n            configurable: true\n        },\n        execExprBitwise: {\n            value: function execExprBitwise(Q, T) {\n                this.traceBegin(Q, T);\n                var v1 = util.coerce(this.execExpr(Q.childs()[0], T), \"number\");\n                var v2 = util.coerce(this.execExpr(Q.childs()[1], T), \"number\");\n                var result = undefined;\n                switch (Q.get(\"op\")) {\n                    case \"&\":\n                        result = v1 & v2;break;\n                    case \"|\":\n                        result = v1 | v2;break;\n                    case \"<<\":\n                        result = v1 << v2;break;\n                    case \">>\":\n                        result = v1 >> v2;break;\n                }\n                this.traceEnd(Q, T, result);\n                return result;\n            },\n            writable: true,\n            configurable: true\n        },\n        execExprRelational: {\n            value: function execExprRelational(Q, T) {\n                this.traceBegin(Q, T);\n                var v1 = this.execExpr(Q.childs()[0], T);\n                var v2 = this.execExpr(Q.childs()[1], T);\n                var result = undefined;\n                switch (Q.get(\"op\")) {\n                    case \"==\":\n                        result = v1 === v2;break;\n                    case \"!=\":\n                        result = v1 !== v2;break;\n                    case \"<=\":\n                        result = util.coerce(v1, \"number\") <= util.coerce(v2, \"number\");break;\n                    case \">=\":\n                        result = util.coerce(v1, \"number\") >= util.coerce(v2, \"number\");break;\n                    case \"<\":\n                        result = util.coerce(v1, \"number\") < util.coerce(v2, \"number\");break;\n                    case \">\":\n                        result = util.coerce(v1, \"number\") > util.coerce(v2, \"number\");break;\n                    case \"=~\":\n                        result = util.coerce(v1, \"string\").match(util.coerce(v2, \"regexp\")) !== null;break;\n                    case \"!~\":\n                        result = util.coerce(v1, \"string\").match(util.coerce(v2, \"regexp\")) === null;break;\n                }\n                this.traceEnd(Q, T, result);\n                return result;\n            },\n            writable: true,\n            configurable: true\n        },\n        execExprArithmetical: {\n            value: function execExprArithmetical(Q, T) {\n                this.traceBegin(Q, T);\n                var v1 = this.execExpr(Q.childs()[0], T);\n                var v2 = this.execExpr(Q.childs()[1], T);\n                var result = undefined;\n                switch (Q.get(\"op\")) {\n                    case \"+\":\n                        if (typeof v1 === \"string\") result = v1 + util.coerce(v2, \"string\");else result = util.coerce(v1, \"number\") + util.coerce(v2, \"number\");\n                        break;\n                    case \"-\":\n                        result = util.coerce(v1, \"number\") + util.coerce(v2, \"number\");break;\n                    case \"*\":\n                        result = util.coerce(v1, \"number\") * util.coerce(v2, \"number\");break;\n                    case \"/\":\n                        result = util.coerce(v1, \"number\") / util.coerce(v2, \"number\");break;\n                    case \"%\":\n                        result = util.coerce(v1, \"number\") % util.coerce(v2, \"number\");break;\n                    case \"**\":\n                        result = Math.pow(util.coerce(v1, \"number\"), util.coerce(v2, \"number\"));break;\n                }\n                this.traceEnd(Q, T, result);\n                return result;\n            },\n            writable: true,\n            configurable: true\n        },\n        execExprUnary: {\n            value: function execExprUnary(Q, T) {\n                this.traceBegin(Q, T);\n                var v = this.execExpr(Q.childs()[0], T);\n                var result = undefined;\n                switch (Q.get(\"op\")) {\n                    case \"!\":\n                        result = !util.coerce(v, \"boolean\");break;\n                    case \"~\":\n                        result = ~util.coerce(v, \"number\");break;\n                }\n                this.traceEnd(Q, T, result);\n                return result;\n            },\n            writable: true,\n            configurable: true\n        },\n        execExprFuncCall: {\n            value: function execExprFuncCall(Q, T) {\n                var _this = this;\n                this.traceBegin(Q, T);\n                var id = Q.get(\"id\");\n                var args = [this.adapter, T];\n                Q.childs().forEach(function (Q) {\n                    args.push(_this.execExpr(Q, T));\n                });\n                var result = this.funcs.run(id, args);\n                this.traceEnd(Q, T, result);\n                return result;\n            },\n            writable: true,\n            configurable: true\n        },\n        execExprAttribute: {\n            value: function execExprAttribute(Q, T) {\n                this.traceBegin(Q, T);\n                var id = Q.get(\"id\");\n                var result = this.adapter.getNodeAttrValue(T, id);\n                this.traceEnd(Q, T, result);\n                return result;\n            },\n            writable: true,\n            configurable: true\n        },\n        execExprParam: {\n            value: function execExprParam(Q, T) {\n                this.traceBegin(Q, T);\n                var id = Q.get(\"id\");\n                if (typeof this.params[id] === \"undefined\") throw new Error(\"invalid parameter \\\"\" + id + \"\\\"\");\n                var result = this.params[id];\n                this.traceEnd(Q, T, result);\n                return result;\n            },\n            writable: true,\n            configurable: true\n        },\n        execExprLiteralString: {\n            value: function execExprLiteralString(Q, T) {\n                this.traceBegin(Q, T);\n                var result = Q.get(\"value\");\n                this.traceEnd(Q, T, result);\n                return result;\n            },\n            writable: true,\n            configurable: true\n        },\n        execExprLiteralRegExp: {\n            value: function execExprLiteralRegExp(Q, T) {\n                this.traceBegin(Q, T);\n                var result = Q.get(\"value\");\n                this.traceEnd(Q, T, result);\n                return result;\n            },\n            writable: true,\n            configurable: true\n        },\n        execExprLiteralNumber: {\n            value: function execExprLiteralNumber(Q, T) {\n                this.traceBegin(Q, T);\n                var result = Q.get(\"value\");\n                this.traceEnd(Q, T, result);\n                return result;\n            },\n            writable: true,\n            configurable: true\n        },\n        execExprLiteralValue: {\n            value: function execExprLiteralValue(Q, T) {\n                this.traceBegin(Q, T);\n                var result = Q.get(\"value\");\n                this.traceEnd(Q, T, result);\n                return result;\n            },\n            writable: true,\n            configurable: true\n        },\n        execExprPath: {\n            value: function execExprPath(Q, T) {\n                this.traceBegin(Q, T);\n                var result = this.execPath(Q, T);\n                this.traceEnd(Q, T, result);\n                return result;\n            },\n            writable: true,\n            configurable: true\n        }\n    });\n\n    return ASTQQueryExec;\n})(ASTQQueryTrace);\n\nmodule.exports = ASTQQueryExec;\n/* RECURSION */\n\n},{\"./astq-query-trace.js\":9,\"./astq-util.js\":11}],9:[function(require,module,exports){\n\"use strict\";\n\nvar _interopRequire = function (obj) { return obj && obj.__esModule ? obj[\"default\"] : obj; };\n\nvar _prototypeProperties = function (child, staticProps, instanceProps) { if (staticProps) Object.defineProperties(child, staticProps); if (instanceProps) Object.defineProperties(child.prototype, instanceProps); };\n\n/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nvar util = _interopRequire(require(\"./astq-util.js\"));\n\nvar ASTQQueryTrace = (function () {\n    function ASTQQueryTrace() {}\n\n    _prototypeProperties(ASTQQueryTrace, null, {\n        prefixOf: {\n            /*  determine output prefix based on tree depth  */\n            value: function prefixOf(Q, T) {\n                var depth = 0;\n                var node = Q;\n                while ((node = node.parent()) !== null) depth++;\n                var prefix1 = util.pad(\"\", 4 * depth);\n                depth = 0;\n                node = T;\n                while ((node = this.adapter.getParentNode(node)) !== null) depth++;\n                var prefix2 = util.pad(\"\", 4 * depth);\n                return { prefix1: prefix1, prefix2: prefix2 };\n            },\n            writable: true,\n            configurable: true\n        },\n        traceBegin: {\n\n            /*  begin tracing step  */\n            value: function traceBegin(Q, T) {\n                if (!this.trace) return;\n                var _prefixOf = this.prefixOf(Q, T);\n\n                var prefix1 = _prefixOf.prefix1;\n                var prefix2 = _prefixOf.prefix2;\n                console.log(\"ASTQ: execute: | \" + util.pad(prefix1 + Q.type() + \" (\", -60) + \" | \" + prefix2 + this.adapter.getNodeType(T));\n            },\n            writable: true,\n            configurable: true\n        },\n        traceEnd: {\n\n            /*  end tracing step  */\n            value: function traceEnd(Q, T, val) {\n                var _this = this;\n                if (!this.trace) return;\n                var _prefixOf = this.prefixOf(Q, T);\n\n                var prefix1 = _prefixOf.prefix1;\n                var prefix2 = _prefixOf.prefix2;\n                var result = undefined;\n                if (val === undefined) result = \"undefined\";else if (typeof val === \"object\" && val instanceof Array) {\n                    result = \"[\";\n                    val.forEach(function (node) {\n                        result += \"node(\" + _this.adapter.getNodeType(node) + \"),\";\n                    });\n                    result = result.replace(/,$/, \"\") + \"]\";\n                } else result = typeof val + \"(\" + val + \")\";\n                if (result.length > 60) result = result.substr(0, 60) + \"...\";\n                console.log(\"ASTQ: execute: | \" + util.pad(prefix1 + \"): \" + result, -60) + \" | \" + prefix2 + this.adapter.getNodeType(T));\n            },\n            writable: true,\n            configurable: true\n        }\n    });\n\n    return ASTQQueryTrace;\n})();\n\nmodule.exports = ASTQQueryTrace;\n\n},{\"./astq-util.js\":11}],10:[function(require,module,exports){\n\"use strict\";\n\nvar _interopRequire = function (obj) { return obj && obj.__esModule ? obj[\"default\"] : obj; };\n\nvar _prototypeProperties = function (child, staticProps, instanceProps) { if (staticProps) Object.defineProperties(child, staticProps); if (instanceProps) Object.defineProperties(child.prototype, instanceProps); };\n\n/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/* global __dirname: true */\n/* global console: true */\n\n/*  load external dependencies  */\nvar ASTY = require(\"asty\");\n\nvar PEGUtil = require(\"pegjs-util\");\n\n/*  get query parser (by loading and on-the-fly compiling PEG.js grammar)  */\nvar ASTQQueryParse = ((function() {\n  /*\n   * Generated by PEG.js 0.8.0.\n   *\n   * http://pegjs.majda.cz/\n   */\n\n  function peg$subclass(child, parent) {\n    function ctor() { this.constructor = child; }\n    ctor.prototype = parent.prototype;\n    child.prototype = new ctor();\n  }\n\n  function SyntaxError(message, expected, found, offset, line, column) {\n    this.message  = message;\n    this.expected = expected;\n    this.found    = found;\n    this.offset   = offset;\n    this.line     = line;\n    this.column   = column;\n\n    this.name     = \"SyntaxError\";\n  }\n\n  peg$subclass(SyntaxError, Error);\n\n  function parse(input) {\n    var options = arguments.length > 1 ? arguments[1] : {},\n\n        peg$FAILED = {},\n\n        peg$startRuleFunctions = { query: peg$parsequery },\n        peg$startRuleFunction  = peg$parsequery,\n\n        peg$c0 = peg$FAILED,\n        peg$c1 = function(qs) {\r\n                    return qs\r\n                },\n        peg$c2 = [],\n        peg$c3 = \",\",\n        peg$c4 = { type: \"literal\", value: \",\", description: \"\\\",\\\"\" },\n        peg$c5 = function(f, l) {\r\n                    return ast(\"Query\").add(unroll(f, l, 3))\r\n                },\n        peg$c6 = function(f, l) {\r\n                    return ast(\"Path\").add(unroll(f, l, 1))\r\n                },\n        peg$c7 = null,\n        peg$c8 = function(a, m, f) {\r\n                    return ast(\"Step\").add(a, m, f)\r\n                },\n        peg$c9 = { type: \"other\", description: \"axis\" },\n        peg$c10 = \"//\",\n        peg$c11 = { type: \"literal\", value: \"//\", description: \"\\\"//\\\"\" },\n        peg$c12 = \"/\",\n        peg$c13 = { type: \"literal\", value: \"/\", description: \"\\\"/\\\"\" },\n        peg$c14 = \"+//\",\n        peg$c15 = { type: \"literal\", value: \"+//\", description: \"\\\"+//\\\"\" },\n        peg$c16 = \"+/\",\n        peg$c17 = { type: \"literal\", value: \"+/\", description: \"\\\"+/\\\"\" },\n        peg$c18 = \"-//\",\n        peg$c19 = { type: \"literal\", value: \"-//\", description: \"\\\"-//\\\"\" },\n        peg$c20 = \"-/\",\n        peg$c21 = { type: \"literal\", value: \"-/\", description: \"\\\"-/\\\"\" },\n        peg$c22 = \"..//\",\n        peg$c23 = { type: \"literal\", value: \"..//\", description: \"\\\"..//\\\"\" },\n        peg$c24 = \"../\",\n        peg$c25 = { type: \"literal\", value: \"../\", description: \"\\\"../\\\"\" },\n        peg$c26 = function(op) {\r\n                    return ast(\"Axis\").set({ op: op })\r\n                },\n        peg$c27 = function(id) {\r\n                    return ast(\"Match\").merge(id)\r\n                },\n        peg$c28 = \"*\",\n        peg$c29 = { type: \"literal\", value: \"*\", description: \"\\\"*\\\"\" },\n        peg$c30 = function() {\r\n                    return ast(\"Match\").set({ id: \"*\" })\r\n                },\n        peg$c31 = \"[\",\n        peg$c32 = { type: \"literal\", value: \"[\", description: \"\\\"[\\\"\" },\n        peg$c33 = \"]\",\n        peg$c34 = { type: \"literal\", value: \"]\", description: \"\\\"]\\\"\" },\n        peg$c35 = function(e) {\r\n                    return ast(\"Filter\").add(e)\r\n                },\n        peg$c36 = \"?:\",\n        peg$c37 = { type: \"literal\", value: \"?:\", description: \"\\\"?:\\\"\" },\n        peg$c38 = function(e1, e2) {\r\n                    return ast(\"ConditionalBinary\").add(e1, e2)\r\n                },\n        peg$c39 = \"?\",\n        peg$c40 = { type: \"literal\", value: \"?\", description: \"\\\"?\\\"\" },\n        peg$c41 = \":\",\n        peg$c42 = { type: \"literal\", value: \":\", description: \"\\\":\\\"\" },\n        peg$c43 = function(e1, e2, e3) {\r\n                    return ast(\"ConditionalTernary\").add(e1, e2, e3)\r\n                },\n        peg$c44 = \"||\",\n        peg$c45 = { type: \"literal\", value: \"||\", description: \"\\\"||\\\"\" },\n        peg$c46 = function(e1, op, e2) {\r\n                    return ast(\"Logical\").set({ op: op }).add(e1, e2)\r\n                },\n        peg$c47 = \"&&\",\n        peg$c48 = { type: \"literal\", value: \"&&\", description: \"\\\"&&\\\"\" },\n        peg$c49 = \"|\",\n        peg$c50 = { type: \"literal\", value: \"|\", description: \"\\\"|\\\"\" },\n        peg$c51 = function(e1, op, e2) {\r\n                    return ast(\"Bitwise\").set({ op: op }).add(e1, e2)\r\n                },\n        peg$c52 = \"^\",\n        peg$c53 = { type: \"literal\", value: \"^\", description: \"\\\"^\\\"\" },\n        peg$c54 = \"&\",\n        peg$c55 = { type: \"literal\", value: \"&\", description: \"\\\"&\\\"\" },\n        peg$c56 = \"==\",\n        peg$c57 = { type: \"literal\", value: \"==\", description: \"\\\"==\\\"\" },\n        peg$c58 = \"!=\",\n        peg$c59 = { type: \"literal\", value: \"!=\", description: \"\\\"!=\\\"\" },\n        peg$c60 = \"<=\",\n        peg$c61 = { type: \"literal\", value: \"<=\", description: \"\\\"<=\\\"\" },\n        peg$c62 = \">=\",\n        peg$c63 = { type: \"literal\", value: \">=\", description: \"\\\">=\\\"\" },\n        peg$c64 = \"<\",\n        peg$c65 = { type: \"literal\", value: \"<\", description: \"\\\"<\\\"\" },\n        peg$c66 = \">\",\n        peg$c67 = { type: \"literal\", value: \">\", description: \"\\\">\\\"\" },\n        peg$c68 = \"=~\",\n        peg$c69 = { type: \"literal\", value: \"=~\", description: \"\\\"=~\\\"\" },\n        peg$c70 = \"!~\",\n        peg$c71 = { type: \"literal\", value: \"!~\", description: \"\\\"!~\\\"\" },\n        peg$c72 = function(e1, op, e2) {\r\n                    return ast(\"Relational\").set({ op: op }).add(e1, e2)\r\n                },\n        peg$c73 = \"<<\",\n        peg$c74 = { type: \"literal\", value: \"<<\", description: \"\\\"<<\\\"\" },\n        peg$c75 = \">>\",\n        peg$c76 = { type: \"literal\", value: \">>\", description: \"\\\">>\\\"\" },\n        peg$c77 = \"+\",\n        peg$c78 = { type: \"literal\", value: \"+\", description: \"\\\"+\\\"\" },\n        peg$c79 = \"-\",\n        peg$c80 = { type: \"literal\", value: \"-\", description: \"\\\"-\\\"\" },\n        peg$c81 = function(e1, op, e2) {\r\n                    return ast(\"Arithmetical\").set({ op: op }).add(e1, e2)\r\n                },\n        peg$c82 = \"**\",\n        peg$c83 = { type: \"literal\", value: \"**\", description: \"\\\"**\\\"\" },\n        peg$c84 = \"%\",\n        peg$c85 = { type: \"literal\", value: \"%\", description: \"\\\"%\\\"\" },\n        peg$c86 = \"!\",\n        peg$c87 = { type: \"literal\", value: \"!\", description: \"\\\"!\\\"\" },\n        peg$c88 = \"~\",\n        peg$c89 = { type: \"literal\", value: \"~\", description: \"\\\"~\\\"\" },\n        peg$c90 = function(op, e) {\r\n                    return ast(\"Unary\").set({ op: op }).add(e)\r\n                },\n        peg$c91 = \"(\",\n        peg$c92 = { type: \"literal\", value: \"(\", description: \"\\\"(\\\"\" },\n        peg$c93 = \")\",\n        peg$c94 = { type: \"literal\", value: \")\", description: \"\\\")\\\"\" },\n        peg$c95 = function(id, p) {\r\n                    return ast(\"FuncCall\").merge(id).add(p)\r\n                },\n        peg$c96 = function(f, l) { /* RECURSION */\r\n                    return unroll(f, l, 3)\r\n                },\n        peg$c97 = { type: \"other\", description: \"node attribute\" },\n        peg$c98 = \"@\",\n        peg$c99 = { type: \"literal\", value: \"@\", description: \"\\\"@\\\"\" },\n        peg$c100 = function(id) {\r\n                    return ast(\"Attribute\").merge(id)\r\n                },\n        peg$c101 = { type: \"other\", description: \"query parameter reference\" },\n        peg$c102 = \"{\",\n        peg$c103 = { type: \"literal\", value: \"{\", description: \"\\\"{\\\"\" },\n        peg$c104 = \"}\",\n        peg$c105 = { type: \"literal\", value: \"}\", description: \"\\\"}\\\"\" },\n        peg$c106 = function(name) {\r\n                    return ast(\"Param\").merge(name)\r\n                },\n        peg$c107 = function(e) {  /* RECURSION */\r\n                     return e\r\n                },\n        peg$c108 = { type: \"other\", description: \"identifier\" },\n        peg$c109 = void 0,\n        peg$c110 = /^[a-zA-Z_]/,\n        peg$c111 = { type: \"class\", value: \"[a-zA-Z_]\", description: \"[a-zA-Z_]\" },\n        peg$c112 = /^[a-zA-Z0-9_\\-]/,\n        peg$c113 = { type: \"class\", value: \"[a-zA-Z0-9_\\\\-]\", description: \"[a-zA-Z0-9_\\\\-]\" },\n        peg$c114 = function(id) {\r\n                    return ast(\"Identifier\").set({ id: id })\r\n                },\n        peg$c115 = { type: \"other\", description: \"quoted string literal\" },\n        peg$c116 = \"\\\"\",\n        peg$c117 = { type: \"literal\", value: \"\\\"\", description: \"\\\"\\\\\\\"\\\"\" },\n        peg$c118 = /^[^\"]/,\n        peg$c119 = { type: \"class\", value: \"[^\\\"]\", description: \"[^\\\"]\" },\n        peg$c120 = function(s) {\r\n                    return ast(\"LiteralString\").set({ value: s.join(\"\") })\r\n                },\n        peg$c121 = \"'\",\n        peg$c122 = { type: \"literal\", value: \"'\", description: \"\\\"'\\\"\" },\n        peg$c123 = \"\\\\'\",\n        peg$c124 = { type: \"literal\", value: \"\\\\'\", description: \"\\\"\\\\\\\\'\\\"\" },\n        peg$c125 = /^[^']/,\n        peg$c126 = { type: \"class\", value: \"[^']\", description: \"[^']\" },\n        peg$c127 = function(t) {\r\n                    return ast(\"LiteralString\").set({ value: t.replace(/\\\\'/g, \"'\") })\r\n                },\n        peg$c128 = { type: \"other\", description: \"escaped string character\" },\n        peg$c129 = \"\\\\\\\\\",\n        peg$c130 = { type: \"literal\", value: \"\\\\\\\\\", description: \"\\\"\\\\\\\\\\\\\\\\\\\"\" },\n        peg$c131 = function() { return \"\\\\\"   },\n        peg$c132 = \"\\\\\\\"\",\n        peg$c133 = { type: \"literal\", value: \"\\\\\\\"\", description: \"\\\"\\\\\\\\\\\\\\\"\\\"\" },\n        peg$c134 = function() { return \"\\\"\"   },\n        peg$c135 = function() { return \"'\"    },\n        peg$c136 = \"\\\\b\",\n        peg$c137 = { type: \"literal\", value: \"\\\\b\", description: \"\\\"\\\\\\\\b\\\"\" },\n        peg$c138 = function() { return \"\\b\"   },\n        peg$c139 = \"\\\\v\",\n        peg$c140 = { type: \"literal\", value: \"\\\\v\", description: \"\\\"\\\\\\\\v\\\"\" },\n        peg$c141 = function() { return \"\\x0B\" },\n        peg$c142 = \"\\\\f\",\n        peg$c143 = { type: \"literal\", value: \"\\\\f\", description: \"\\\"\\\\\\\\f\\\"\" },\n        peg$c144 = function() { return \"\\f\"   },\n        peg$c145 = \"\\\\t\",\n        peg$c146 = { type: \"literal\", value: \"\\\\t\", description: \"\\\"\\\\\\\\t\\\"\" },\n        peg$c147 = function() { return \"\\t\"   },\n        peg$c148 = \"\\\\r\",\n        peg$c149 = { type: \"literal\", value: \"\\\\r\", description: \"\\\"\\\\\\\\r\\\"\" },\n        peg$c150 = function() { return \"\\r\"   },\n        peg$c151 = \"\\\\n\",\n        peg$c152 = { type: \"literal\", value: \"\\\\n\", description: \"\\\"\\\\\\\\n\\\"\" },\n        peg$c153 = function() { return \"\\n\"   },\n        peg$c154 = \"\\\\e\",\n        peg$c155 = { type: \"literal\", value: \"\\\\e\", description: \"\\\"\\\\\\\\e\\\"\" },\n        peg$c156 = function() { return \"\\x1B\" },\n        peg$c157 = \"\\\\x\",\n        peg$c158 = { type: \"literal\", value: \"\\\\x\", description: \"\\\"\\\\\\\\x\\\"\" },\n        peg$c159 = /^[0-9a-fA-F]/,\n        peg$c160 = { type: \"class\", value: \"[0-9a-fA-F]\", description: \"[0-9a-fA-F]\" },\n        peg$c161 = function(n) {\r\n                    return String.fromCharCode(parseInt(n, 16))\r\n                },\n        peg$c162 = \"\\\\u\",\n        peg$c163 = { type: \"literal\", value: \"\\\\u\", description: \"\\\"\\\\\\\\u\\\"\" },\n        peg$c164 = { type: \"other\", description: \"regular expression literal\" },\n        peg$c165 = \"\\\\/\",\n        peg$c166 = { type: \"literal\", value: \"\\\\/\", description: \"\\\"\\\\\\\\/\\\"\" },\n        peg$c167 = /^[^\\/]/,\n        peg$c168 = { type: \"class\", value: \"[^\\\\/]\", description: \"[^\\\\/]\" },\n        peg$c169 = function(re) {\r\n                    var v\r\n                    try { v = new RegExp(re.replace(/\\\\\\//g, \"/\")) }\r\n                    catch (e) { error(e.message) }\r\n                    return ast(\"LiteralRegExp\").set({ value: v })\r\n                },\n        peg$c170 = { type: \"other\", description: \"numeric literal\" },\n        peg$c171 = /^[+\\-]/,\n        peg$c172 = { type: \"class\", value: \"[+\\\\-]\", description: \"[+\\\\-]\" },\n        peg$c173 = \"0b\",\n        peg$c174 = { type: \"literal\", value: \"0b\", description: \"\\\"0b\\\"\" },\n        peg$c175 = /^[01]/,\n        peg$c176 = { type: \"class\", value: \"[01]\", description: \"[01]\" },\n        peg$c177 = function(s, n) {\r\n                    return ast(\"LiteralNumber\").set({ value: parseInt(s + n, 2) })\r\n                },\n        peg$c178 = \"0o\",\n        peg$c179 = { type: \"literal\", value: \"0o\", description: \"\\\"0o\\\"\" },\n        peg$c180 = /^[0-7]/,\n        peg$c181 = { type: \"class\", value: \"[0-7]\", description: \"[0-7]\" },\n        peg$c182 = function(s, n) {\r\n                    return ast(\"LiteralNumber\").set({ value: parseInt(s + n, 8) })\r\n                },\n        peg$c183 = \"0x\",\n        peg$c184 = { type: \"literal\", value: \"0x\", description: \"\\\"0x\\\"\" },\n        peg$c185 = function(s, n) {\r\n                    return ast(\"LiteralNumber\").set({ value: parseInt(s + n, 16) })\r\n                },\n        peg$c186 = /^[0-9]/,\n        peg$c187 = { type: \"class\", value: \"[0-9]\", description: \"[0-9]\" },\n        peg$c188 = \".\",\n        peg$c189 = { type: \"literal\", value: \".\", description: \"\\\".\\\"\" },\n        peg$c190 = /^[eE]/,\n        peg$c191 = { type: \"class\", value: \"[eE]\", description: \"[eE]\" },\n        peg$c192 = function(n) {\r\n                    return ast(\"LiteralNumber\").set({ value: parseFloat(n) })\r\n                },\n        peg$c193 = function(n) {\r\n                    return ast(\"LiteralNumber\").set({ value: parseInt(n, 10) })\r\n                },\n        peg$c194 = { type: \"other\", description: \"global value\" },\n        peg$c195 = \"true\",\n        peg$c196 = { type: \"literal\", value: \"true\", description: \"\\\"true\\\"\" },\n        peg$c197 = function() { return ast(\"LiteralValue\").set({ value: true      }) },\n        peg$c198 = \"false\",\n        peg$c199 = { type: \"literal\", value: \"false\", description: \"\\\"false\\\"\" },\n        peg$c200 = function() { return ast(\"LiteralValue\").set({ value: false     }) },\n        peg$c201 = \"null\",\n        peg$c202 = { type: \"literal\", value: \"null\", description: \"\\\"null\\\"\" },\n        peg$c203 = function() { return ast(\"LiteralValue\").set({ value: null      }) },\n        peg$c204 = \"NaN\",\n        peg$c205 = { type: \"literal\", value: \"NaN\", description: \"\\\"NaN\\\"\" },\n        peg$c206 = function() { return ast(\"LiteralValue\").set({ value: NaN       }) },\n        peg$c207 = \"undefined\",\n        peg$c208 = { type: \"literal\", value: \"undefined\", description: \"\\\"undefined\\\"\" },\n        peg$c209 = function() { return ast(\"LiteralValue\").set({ value: undefined }) },\n        peg$c210 = { type: \"other\", description: \"optional blank\" },\n        peg$c211 = { type: \"other\", description: \"multi-line comment\" },\n        peg$c212 = \"/*\",\n        peg$c213 = { type: \"literal\", value: \"/*\", description: \"\\\"/*\\\"\" },\n        peg$c214 = \"*/\",\n        peg$c215 = { type: \"literal\", value: \"*/\", description: \"\\\"*/\\\"\" },\n        peg$c216 = { type: \"any\", description: \"any character\" },\n        peg$c217 = { type: \"other\", description: \"any whitespaces\" },\n        peg$c218 = /^[ \\t\\r\\n]/,\n        peg$c219 = { type: \"class\", value: \"[ \\\\t\\\\r\\\\n]\", description: \"[ \\\\t\\\\r\\\\n]\" },\n        peg$c220 = { type: \"other\", description: \"end of file\" },\n\n        peg$currPos          = 0,\n        peg$reportedPos      = 0,\n        peg$cachedPos        = 0,\n        peg$cachedPosDetails = { line: 1, column: 1, seenCR: false },\n        peg$maxFailPos       = 0,\n        peg$maxFailExpected  = [],\n        peg$silentFails      = 0,\n\n        peg$cache = {},\n        peg$result;\n\n    if (\"startRule\" in options) {\n      if (!(options.startRule in peg$startRuleFunctions)) {\n        throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n      }\n\n      peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n    }\n\n    function text() {\n      return input.substring(peg$reportedPos, peg$currPos);\n    }\n\n    function offset() {\n      return peg$reportedPos;\n    }\n\n    function line() {\n      return peg$computePosDetails(peg$reportedPos).line;\n    }\n\n    function column() {\n      return peg$computePosDetails(peg$reportedPos).column;\n    }\n\n    function expected(description) {\n      throw peg$buildException(\n        null,\n        [{ type: \"other\", description: description }],\n        peg$reportedPos\n      );\n    }\n\n    function error(message) {\n      throw peg$buildException(message, null, peg$reportedPos);\n    }\n\n    function peg$computePosDetails(pos) {\n      function advance(details, startPos, endPos) {\n        var p, ch;\n\n        for (p = startPos; p < endPos; p++) {\n          ch = input.charAt(p);\n          if (ch === \"\\n\") {\n            if (!details.seenCR) { details.line++; }\n            details.column = 1;\n            details.seenCR = false;\n          } else if (ch === \"\\r\" || ch === \"\\u2028\" || ch === \"\\u2029\") {\n            details.line++;\n            details.column = 1;\n            details.seenCR = true;\n          } else {\n            details.column++;\n            details.seenCR = false;\n          }\n        }\n      }\n\n      if (peg$cachedPos !== pos) {\n        if (peg$cachedPos > pos) {\n          peg$cachedPos = 0;\n          peg$cachedPosDetails = { line: 1, column: 1, seenCR: false };\n        }\n        advance(peg$cachedPosDetails, peg$cachedPos, pos);\n        peg$cachedPos = pos;\n      }\n\n      return peg$cachedPosDetails;\n    }\n\n    function peg$fail(expected) {\n      if (peg$currPos < peg$maxFailPos) { return; }\n\n      if (peg$currPos > peg$maxFailPos) {\n        peg$maxFailPos = peg$currPos;\n        peg$maxFailExpected = [];\n      }\n\n      peg$maxFailExpected.push(expected);\n    }\n\n    function peg$buildException(message, expected, pos) {\n      function cleanupExpected(expected) {\n        var i = 1;\n\n        expected.sort(function(a, b) {\n          if (a.description < b.description) {\n            return -1;\n          } else if (a.description > b.description) {\n            return 1;\n          } else {\n            return 0;\n          }\n        });\n\n        while (i < expected.length) {\n          if (expected[i - 1] === expected[i]) {\n            expected.splice(i, 1);\n          } else {\n            i++;\n          }\n        }\n      }\n\n      function buildMessage(expected, found) {\n        function stringEscape(s) {\n          function hex(ch) { return ch.charCodeAt(0).toString(16).toUpperCase(); }\n\n          return s\n            .replace(/\\\\/g,   '\\\\\\\\')\n            .replace(/\"/g,    '\\\\\"')\n            .replace(/\\x08/g, '\\\\b')\n            .replace(/\\t/g,   '\\\\t')\n            .replace(/\\n/g,   '\\\\n')\n            .replace(/\\f/g,   '\\\\f')\n            .replace(/\\r/g,   '\\\\r')\n            .replace(/[\\x00-\\x07\\x0B\\x0E\\x0F]/g, function(ch) { return '\\\\x0' + hex(ch); })\n            .replace(/[\\x10-\\x1F\\x80-\\xFF]/g,    function(ch) { return '\\\\x'  + hex(ch); })\n            .replace(/[\\u0180-\\u0FFF]/g,         function(ch) { return '\\\\u0' + hex(ch); })\n            .replace(/[\\u1080-\\uFFFF]/g,         function(ch) { return '\\\\u'  + hex(ch); });\n        }\n\n        var expectedDescs = new Array(expected.length),\n            expectedDesc, foundDesc, i;\n\n        for (i = 0; i < expected.length; i++) {\n          expectedDescs[i] = expected[i].description;\n        }\n\n        expectedDesc = expected.length > 1\n          ? expectedDescs.slice(0, -1).join(\", \")\n              + \" or \"\n              + expectedDescs[expected.length - 1]\n          : expectedDescs[0];\n\n        foundDesc = found ? \"\\\"\" + stringEscape(found) + \"\\\"\" : \"end of input\";\n\n        return \"Expected \" + expectedDesc + \" but \" + foundDesc + \" found.\";\n      }\n\n      var posDetails = peg$computePosDetails(pos),\n          found      = pos < input.length ? input.charAt(pos) : null;\n\n      if (expected !== null) {\n        cleanupExpected(expected);\n      }\n\n      return new SyntaxError(\n        message !== null ? message : buildMessage(expected, found),\n        expected,\n        found,\n        pos,\n        posDetails.line,\n        posDetails.column\n      );\n    }\n\n    function peg$parsequery() {\n      var s0, s1, s2, s3, s4;\n\n      var key    = peg$currPos * 36 + 0,\n          cached = peg$cache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      s1 = peg$parse_();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsequerySet();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parse_();\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parseeof();\n            if (s4 !== peg$FAILED) {\n              peg$reportedPos = s0;\n              s1 = peg$c1(s2);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parsequerySet() {\n      var s0, s1, s2, s3, s4, s5, s6, s7;\n\n      var key    = peg$currPos * 36 + 1,\n          cached = peg$cache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      s1 = peg$parsequeryPath();\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$currPos;\n        s4 = peg$parse_();\n        if (s4 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 44) {\n            s5 = peg$c3;\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c4); }\n          }\n          if (s5 !== peg$FAILED) {\n            s6 = peg$parse_();\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parsequeryPath();\n              if (s7 !== peg$FAILED) {\n                s4 = [s4, s5, s6, s7];\n                s3 = s4;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$c0;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$c0;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$c0;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$c0;\n        }\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$currPos;\n          s4 = peg$parse_();\n          if (s4 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 44) {\n              s5 = peg$c3;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c4); }\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parse_();\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parsequeryPath();\n                if (s7 !== peg$FAILED) {\n                  s4 = [s4, s5, s6, s7];\n                  s3 = s4;\n                } else {\n                  peg$currPos = s3;\n                  s3 = peg$c0;\n                }\n              } else {\n                peg$currPos = s3;\n                s3 = peg$c0;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$c0;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$c0;\n          }\n        }\n        if (s2 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c5(s1, s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parsequeryPath() {\n      var s0, s1, s2, s3, s4, s5;\n\n      var key    = peg$currPos * 36 + 2,\n          cached = peg$cache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      s1 = peg$parsequeryStep();\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$currPos;\n        s4 = peg$parse_();\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parsequeryStepSubsequent();\n          if (s5 !== peg$FAILED) {\n            s4 = [s4, s5];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$c0;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$c0;\n        }\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$currPos;\n          s4 = peg$parse_();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parsequeryStepSubsequent();\n            if (s5 !== peg$FAILED) {\n              s4 = [s4, s5];\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$c0;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$c0;\n          }\n        }\n        if (s2 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c6(s1, s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parsequeryStep() {\n      var s0, s1, s2, s3, s4, s5;\n\n      var key    = peg$currPos * 36 + 3,\n          cached = peg$cache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      s1 = peg$parsequeryAxis();\n      if (s1 === peg$FAILED) {\n        s1 = peg$c7;\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse_();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parsequeryMatch();\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parse_();\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parsequeryFilter();\n              if (s5 === peg$FAILED) {\n                s5 = peg$c7;\n              }\n              if (s5 !== peg$FAILED) {\n                peg$reportedPos = s0;\n                s1 = peg$c8(s1, s3, s5);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$c0;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parsequeryStepSubsequent() {\n      var s0, s1, s2, s3, s4, s5;\n\n      var key    = peg$currPos * 36 + 4,\n          cached = peg$cache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      s1 = peg$parsequeryAxis();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse_();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parsequeryMatch();\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parse_();\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parsequeryFilter();\n              if (s5 === peg$FAILED) {\n                s5 = peg$c7;\n              }\n              if (s5 !== peg$FAILED) {\n                peg$reportedPos = s0;\n                s1 = peg$c8(s1, s3, s5);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$c0;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parsequeryAxis() {\n      var s0, s1, s2;\n\n      var key    = peg$currPos * 36 + 5,\n          cached = peg$cache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n        return cached.result;\n      }\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = peg$currPos;\n      if (input.substr(peg$currPos, 2) === peg$c10) {\n        s2 = peg$c10;\n        peg$currPos += 2;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c11); }\n      }\n      if (s2 === peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 47) {\n          s2 = peg$c12;\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c13); }\n        }\n        if (s2 === peg$FAILED) {\n          if (input.substr(peg$currPos, 3) === peg$c14) {\n            s2 = peg$c14;\n            peg$currPos += 3;\n          } else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c15); }\n          }\n          if (s2 === peg$FAILED) {\n            if (input.substr(peg$currPos, 2) === peg$c16) {\n              s2 = peg$c16;\n              peg$currPos += 2;\n            } else {\n              s2 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c17); }\n            }\n            if (s2 === peg$FAILED) {\n              if (input.substr(peg$currPos, 3) === peg$c18) {\n                s2 = peg$c18;\n                peg$currPos += 3;\n              } else {\n                s2 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c19); }\n              }\n              if (s2 === peg$FAILED) {\n                if (input.substr(peg$currPos, 2) === peg$c20) {\n                  s2 = peg$c20;\n                  peg$currPos += 2;\n                } else {\n                  s2 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c21); }\n                }\n                if (s2 === peg$FAILED) {\n                  if (input.substr(peg$currPos, 4) === peg$c22) {\n                    s2 = peg$c22;\n                    peg$currPos += 4;\n                  } else {\n                    s2 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c23); }\n                  }\n                  if (s2 === peg$FAILED) {\n                    if (input.substr(peg$currPos, 3) === peg$c24) {\n                      s2 = peg$c24;\n                      peg$currPos += 3;\n                    } else {\n                      s2 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c25); }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        s2 = input.substring(s1, peg$currPos);\n      }\n      s1 = s2;\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c26(s1);\n      }\n      s0 = s1;\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c9); }\n      }\n\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parsequeryMatch() {\n      var s0, s1;\n\n      var key    = peg$currPos * 36 + 6,\n          cached = peg$cache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      s1 = peg$parseid();\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c27(s1);\n      }\n      s0 = s1;\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 42) {\n          s1 = peg$c28;\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c29); }\n        }\n        if (s1 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c30();\n        }\n        s0 = s1;\n      }\n\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parsequeryFilter() {\n      var s0, s1, s2, s3, s4, s5;\n\n      var key    = peg$currPos * 36 + 7,\n          cached = peg$cache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 91) {\n        s1 = peg$c31;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c32); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse_();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseexprConditional();\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parse_();\n            if (s4 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 93) {\n                s5 = peg$c33;\n                peg$currPos++;\n              } else {\n                s5 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c34); }\n              }\n              if (s5 !== peg$FAILED) {\n                peg$reportedPos = s0;\n                s1 = peg$c35(s3);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$c0;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parseexprConditional() {\n      var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9;\n\n      var key    = peg$currPos * 36 + 8,\n          cached = peg$cache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      s1 = peg$parseexprLogicalOr();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse_();\n        if (s2 !== peg$FAILED) {\n          if (input.substr(peg$currPos, 2) === peg$c36) {\n            s3 = peg$c36;\n            peg$currPos += 2;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c37); }\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parse_();\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parseexprLogicalOr();\n              if (s5 !== peg$FAILED) {\n                peg$reportedPos = s0;\n                s1 = peg$c38(s1, s5);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$c0;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$parseexprLogicalOr();\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parse_();\n          if (s2 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 63) {\n              s3 = peg$c39;\n              peg$currPos++;\n            } else {\n              s3 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c40); }\n            }\n            if (s3 !== peg$FAILED) {\n              s4 = peg$parse_();\n              if (s4 !== peg$FAILED) {\n                s5 = peg$parseexprLogicalOr();\n                if (s5 !== peg$FAILED) {\n                  s6 = peg$parse_();\n                  if (s6 !== peg$FAILED) {\n                    if (input.charCodeAt(peg$currPos) === 58) {\n                      s7 = peg$c41;\n                      peg$currPos++;\n                    } else {\n                      s7 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c42); }\n                    }\n                    if (s7 !== peg$FAILED) {\n                      s8 = peg$parse_();\n                      if (s8 !== peg$FAILED) {\n                        s9 = peg$parseexprLogicalOr();\n                        if (s9 !== peg$FAILED) {\n                          peg$reportedPos = s0;\n                          s1 = peg$c43(s1, s5, s9);\n                          s0 = s1;\n                        } else {\n                          peg$currPos = s0;\n                          s0 = peg$c0;\n                        }\n                      } else {\n                        peg$currPos = s0;\n                        s0 = peg$c0;\n                      }\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$c0;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$c0;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$c0;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$c0;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n        if (s0 === peg$FAILED) {\n          s0 = peg$parseexprLogicalOr();\n        }\n      }\n\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parseexprLogicalOr() {\n      var s0, s1, s2, s3, s4, s5;\n\n      var key    = peg$currPos * 36 + 9,\n          cached = peg$cache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      s1 = peg$parseexprLogicalAnd();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse_();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$currPos;\n          if (input.substr(peg$currPos, 2) === peg$c44) {\n            s4 = peg$c44;\n            peg$currPos += 2;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c45); }\n          }\n          if (s4 !== peg$FAILED) {\n            s4 = input.substring(s3, peg$currPos);\n          }\n          s3 = s4;\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parse_();\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parseexprLogicalOr();\n              if (s5 !== peg$FAILED) {\n                peg$reportedPos = s0;\n                s1 = peg$c46(s1, s3, s5);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$c0;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseexprLogicalAnd();\n      }\n\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parseexprLogicalAnd() {\n      var s0, s1, s2, s3, s4, s5;\n\n      var key    = peg$currPos * 36 + 10,\n          cached = peg$cache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      s1 = peg$parseexprBitwiseOr();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse_();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$currPos;\n          if (input.substr(peg$currPos, 2) === peg$c47) {\n            s4 = peg$c47;\n            peg$currPos += 2;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c48); }\n          }\n          if (s4 !== peg$FAILED) {\n            s4 = input.substring(s3, peg$currPos);\n          }\n          s3 = s4;\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parse_();\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parseexprLogicalAnd();\n              if (s5 !== peg$FAILED) {\n                peg$reportedPos = s0;\n                s1 = peg$c46(s1, s3, s5);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$c0;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseexprBitwiseOr();\n      }\n\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parseexprBitwiseOr() {\n      var s0, s1, s2, s3, s4, s5;\n\n      var key    = peg$currPos * 36 + 11,\n          cached = peg$cache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      s1 = peg$parseexprBitwiseXOr();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse_();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$currPos;\n          if (input.charCodeAt(peg$currPos) === 124) {\n            s4 = peg$c49;\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c50); }\n          }\n          if (s4 !== peg$FAILED) {\n            s4 = input.substring(s3, peg$currPos);\n          }\n          s3 = s4;\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parse_();\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parseexprBitwiseOr();\n              if (s5 !== peg$FAILED) {\n                peg$reportedPos = s0;\n                s1 = peg$c51(s1, s3, s5);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$c0;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseexprBitwiseXOr();\n      }\n\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parseexprBitwiseXOr() {\n      var s0, s1, s2, s3, s4, s5;\n\n      var key    = peg$currPos * 36 + 12,\n          cached = peg$cache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      s1 = peg$parseexprBitwiseAnd();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse_();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$currPos;\n          if (input.charCodeAt(peg$currPos) === 94) {\n            s4 = peg$c52;\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c53); }\n          }\n          if (s4 !== peg$FAILED) {\n            s4 = input.substring(s3, peg$currPos);\n          }\n          s3 = s4;\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parse_();\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parseexprBitwiseXOr();\n              if (s5 !== peg$FAILED) {\n                peg$reportedPos = s0;\n                s1 = peg$c51(s1, s3, s5);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$c0;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseexprBitwiseAnd();\n      }\n\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parseexprBitwiseAnd() {\n      var s0, s1, s2, s3, s4, s5;\n\n      var key    = peg$currPos * 36 + 13,\n          cached = peg$cache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      s1 = peg$parseexprRelational();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse_();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$currPos;\n          if (input.charCodeAt(peg$currPos) === 38) {\n            s4 = peg$c54;\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c55); }\n          }\n          if (s4 !== peg$FAILED) {\n            s4 = input.substring(s3, peg$currPos);\n          }\n          s3 = s4;\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parse_();\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parseexprBitwiseAnd();\n              if (s5 !== peg$FAILED) {\n                peg$reportedPos = s0;\n                s1 = peg$c51(s1, s3, s5);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$c0;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseexprRelational();\n      }\n\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parseexprRelational() {\n      var s0, s1, s2, s3, s4, s5;\n\n      var key    = peg$currPos * 36 + 14,\n          cached = peg$cache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      s1 = peg$parseexprBitwiseShift();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse_();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$currPos;\n          if (input.substr(peg$currPos, 2) === peg$c56) {\n            s4 = peg$c56;\n            peg$currPos += 2;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c57); }\n          }\n          if (s4 === peg$FAILED) {\n            if (input.substr(peg$currPos, 2) === peg$c58) {\n              s4 = peg$c58;\n              peg$currPos += 2;\n            } else {\n              s4 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c59); }\n            }\n            if (s4 === peg$FAILED) {\n              if (input.substr(peg$currPos, 2) === peg$c60) {\n                s4 = peg$c60;\n                peg$currPos += 2;\n              } else {\n                s4 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c61); }\n              }\n              if (s4 === peg$FAILED) {\n                if (input.substr(peg$currPos, 2) === peg$c62) {\n                  s4 = peg$c62;\n                  peg$currPos += 2;\n                } else {\n                  s4 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c63); }\n                }\n                if (s4 === peg$FAILED) {\n                  if (input.charCodeAt(peg$currPos) === 60) {\n                    s4 = peg$c64;\n                    peg$currPos++;\n                  } else {\n                    s4 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c65); }\n                  }\n                  if (s4 === peg$FAILED) {\n                    if (input.charCodeAt(peg$currPos) === 62) {\n                      s4 = peg$c66;\n                      peg$currPos++;\n                    } else {\n                      s4 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c67); }\n                    }\n                    if (s4 === peg$FAILED) {\n                      if (input.substr(peg$currPos, 2) === peg$c68) {\n                        s4 = peg$c68;\n                        peg$currPos += 2;\n                      } else {\n                        s4 = peg$FAILED;\n                        if (peg$silentFails === 0) { peg$fail(peg$c69); }\n                      }\n                      if (s4 === peg$FAILED) {\n                        if (input.substr(peg$currPos, 2) === peg$c70) {\n                          s4 = peg$c70;\n                          peg$currPos += 2;\n                        } else {\n                          s4 = peg$FAILED;\n                          if (peg$silentFails === 0) { peg$fail(peg$c71); }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n          if (s4 !== peg$FAILED) {\n            s4 = input.substring(s3, peg$currPos);\n          }\n          s3 = s4;\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parse_();\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parseexprRelational();\n              if (s5 !== peg$FAILED) {\n                peg$reportedPos = s0;\n                s1 = peg$c72(s1, s3, s5);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$c0;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseexprBitwiseShift();\n      }\n\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parseexprBitwiseShift() {\n      var s0, s1, s2, s3, s4, s5;\n\n      var key    = peg$currPos * 36 + 15,\n          cached = peg$cache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      s1 = peg$parseexprAdditive();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse_();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$currPos;\n          if (input.substr(peg$currPos, 2) === peg$c73) {\n            s4 = peg$c73;\n            peg$currPos += 2;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c74); }\n          }\n          if (s4 === peg$FAILED) {\n            if (input.substr(peg$currPos, 2) === peg$c75) {\n              s4 = peg$c75;\n              peg$currPos += 2;\n            } else {\n              s4 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c76); }\n            }\n          }\n          if (s4 !== peg$FAILED) {\n            s4 = input.substring(s3, peg$currPos);\n          }\n          s3 = s4;\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parse_();\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parseexprBitwiseShift();\n              if (s5 !== peg$FAILED) {\n                peg$reportedPos = s0;\n                s1 = peg$c51(s1, s3, s5);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$c0;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseexprAdditive();\n      }\n\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parseexprAdditive() {\n      var s0, s1, s2, s3, s4, s5;\n\n      var key    = peg$currPos * 36 + 16,\n          cached = peg$cache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      s1 = peg$parseexprMultiplicative();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse_();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$currPos;\n          if (input.charCodeAt(peg$currPos) === 43) {\n            s4 = peg$c77;\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c78); }\n          }\n          if (s4 === peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 45) {\n              s4 = peg$c79;\n              peg$currPos++;\n            } else {\n              s4 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c80); }\n            }\n          }\n          if (s4 !== peg$FAILED) {\n            s4 = input.substring(s3, peg$currPos);\n          }\n          s3 = s4;\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parse_();\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parseexprAdditive();\n              if (s5 !== peg$FAILED) {\n                peg$reportedPos = s0;\n                s1 = peg$c81(s1, s3, s5);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$c0;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseexprMultiplicative();\n      }\n\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parseexprMultiplicative() {\n      var s0, s1, s2, s3, s4, s5;\n\n      var key    = peg$currPos * 36 + 17,\n          cached = peg$cache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      s1 = peg$parseexprUnary();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse_();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$currPos;\n          if (input.substr(peg$currPos, 2) === peg$c82) {\n            s4 = peg$c82;\n            peg$currPos += 2;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c83); }\n          }\n          if (s4 === peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 42) {\n              s4 = peg$c28;\n              peg$currPos++;\n            } else {\n              s4 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c29); }\n            }\n            if (s4 === peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 47) {\n                s4 = peg$c12;\n                peg$currPos++;\n              } else {\n                s4 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c13); }\n              }\n              if (s4 === peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 37) {\n                  s4 = peg$c84;\n                  peg$currPos++;\n                } else {\n                  s4 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c85); }\n                }\n              }\n            }\n          }\n          if (s4 !== peg$FAILED) {\n            s4 = input.substring(s3, peg$currPos);\n          }\n          s3 = s4;\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parse_();\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parseexprMultiplicative();\n              if (s5 !== peg$FAILED) {\n                peg$reportedPos = s0;\n                s1 = peg$c81(s1, s3, s5);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$c0;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseexprUnary();\n      }\n\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parseexprUnary() {\n      var s0, s1, s2;\n\n      var key    = peg$currPos * 36 + 18,\n          cached = peg$cache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      s1 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 33) {\n        s2 = peg$c86;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c87); }\n      }\n      if (s2 === peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 126) {\n          s2 = peg$c88;\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c89); }\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        s2 = input.substring(s1, peg$currPos);\n      }\n      s1 = s2;\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseexprOther();\n        if (s2 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c90(s1, s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseexprOther();\n      }\n\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parseexprOther() {\n      var s0;\n\n      var key    = peg$currPos * 36 + 19,\n          cached = peg$cache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n        return cached.result;\n      }\n\n      s0 = peg$parseexprFunctionCall();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseexprAttribute();\n        if (s0 === peg$FAILED) {\n          s0 = peg$parseexprParam();\n          if (s0 === peg$FAILED) {\n            s0 = peg$parseexprLiteral();\n            if (s0 === peg$FAILED) {\n              s0 = peg$parseexprParenthesis();\n              if (s0 === peg$FAILED) {\n                s0 = peg$parsequeryPath();\n              }\n            }\n          }\n        }\n      }\n\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parseexprFunctionCall() {\n      var s0, s1, s2, s3, s4, s5, s6, s7;\n\n      var key    = peg$currPos * 36 + 20,\n          cached = peg$cache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      s1 = peg$parseid();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse_();\n        if (s2 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 40) {\n            s3 = peg$c91;\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c92); }\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parse_();\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parseexprFunctionCallParams();\n              if (s5 === peg$FAILED) {\n                s5 = peg$c7;\n              }\n              if (s5 !== peg$FAILED) {\n                s6 = peg$parse_();\n                if (s6 !== peg$FAILED) {\n                  if (input.charCodeAt(peg$currPos) === 41) {\n                    s7 = peg$c93;\n                    peg$currPos++;\n                  } else {\n                    s7 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c94); }\n                  }\n                  if (s7 !== peg$FAILED) {\n                    peg$reportedPos = s0;\n                    s1 = peg$c95(s1, s5);\n                    s0 = s1;\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$c0;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$c0;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$c0;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parseexprFunctionCallParams() {\n      var s0, s1, s2, s3, s4, s5, s6, s7;\n\n      var key    = peg$currPos * 36 + 21,\n          cached = peg$cache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      s1 = peg$parseexprConditional();\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$currPos;\n        s4 = peg$parse_();\n        if (s4 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 44) {\n            s5 = peg$c3;\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c4); }\n          }\n          if (s5 !== peg$FAILED) {\n            s6 = peg$parse_();\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parseexprConditional();\n              if (s7 !== peg$FAILED) {\n                s4 = [s4, s5, s6, s7];\n                s3 = s4;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$c0;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$c0;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$c0;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$c0;\n        }\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$currPos;\n          s4 = peg$parse_();\n          if (s4 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 44) {\n              s5 = peg$c3;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c4); }\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parse_();\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parseexprConditional();\n                if (s7 !== peg$FAILED) {\n                  s4 = [s4, s5, s6, s7];\n                  s3 = s4;\n                } else {\n                  peg$currPos = s3;\n                  s3 = peg$c0;\n                }\n              } else {\n                peg$currPos = s3;\n                s3 = peg$c0;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$c0;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$c0;\n          }\n        }\n        if (s2 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c96(s1, s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parseexprAttribute() {\n      var s0, s1, s2;\n\n      var key    = peg$currPos * 36 + 22,\n          cached = peg$cache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n        return cached.result;\n      }\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 64) {\n        s1 = peg$c98;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c99); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseid();\n        if (s2 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c100(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c97); }\n      }\n\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parseexprParam() {\n      var s0, s1, s2, s3, s4, s5;\n\n      var key    = peg$currPos * 36 + 23,\n          cached = peg$cache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n        return cached.result;\n      }\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 123) {\n        s1 = peg$c102;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c103); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse_();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseid();\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parse_();\n            if (s4 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 125) {\n                s5 = peg$c104;\n                peg$currPos++;\n              } else {\n                s5 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c105); }\n              }\n              if (s5 !== peg$FAILED) {\n                peg$reportedPos = s0;\n                s1 = peg$c106(s3);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$c0;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c101); }\n      }\n\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parseexprLiteral() {\n      var s0;\n\n      var key    = peg$currPos * 36 + 24,\n          cached = peg$cache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n        return cached.result;\n      }\n\n      s0 = peg$parsestring();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseregexp();\n        if (s0 === peg$FAILED) {\n          s0 = peg$parsenumber();\n          if (s0 === peg$FAILED) {\n            s0 = peg$parsevalue();\n          }\n        }\n      }\n\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parseexprParenthesis() {\n      var s0, s1, s2, s3, s4, s5;\n\n      var key    = peg$currPos * 36 + 25,\n          cached = peg$cache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 40) {\n        s1 = peg$c91;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c92); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse_();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseexprConditional();\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parse_();\n            if (s4 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 41) {\n                s5 = peg$c93;\n                peg$currPos++;\n              } else {\n                s5 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c94); }\n              }\n              if (s5 !== peg$FAILED) {\n                peg$reportedPos = s0;\n                s1 = peg$c107(s3);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$c0;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parseid() {\n      var s0, s1, s2, s3, s4, s5, s6;\n\n      var key    = peg$currPos * 36 + 26,\n          cached = peg$cache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n        return cached.result;\n      }\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = peg$currPos;\n      s2 = peg$currPos;\n      s3 = peg$currPos;\n      peg$silentFails++;\n      s4 = peg$parsevalue();\n      peg$silentFails--;\n      if (s4 === peg$FAILED) {\n        s3 = peg$c109;\n      } else {\n        peg$currPos = s3;\n        s3 = peg$c0;\n      }\n      if (s3 !== peg$FAILED) {\n        if (peg$c110.test(input.charAt(peg$currPos))) {\n          s4 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s4 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c111); }\n        }\n        if (s4 !== peg$FAILED) {\n          s5 = [];\n          if (peg$c112.test(input.charAt(peg$currPos))) {\n            s6 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s6 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c113); }\n          }\n          while (s6 !== peg$FAILED) {\n            s5.push(s6);\n            if (peg$c112.test(input.charAt(peg$currPos))) {\n              s6 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s6 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c113); }\n            }\n          }\n          if (s5 !== peg$FAILED) {\n            s3 = [s3, s4, s5];\n            s2 = s3;\n          } else {\n            peg$currPos = s2;\n            s2 = peg$c0;\n          }\n        } else {\n          peg$currPos = s2;\n          s2 = peg$c0;\n        }\n      } else {\n        peg$currPos = s2;\n        s2 = peg$c0;\n      }\n      if (s2 !== peg$FAILED) {\n        s2 = input.substring(s1, peg$currPos);\n      }\n      s1 = s2;\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c114(s1);\n      }\n      s0 = s1;\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c108); }\n      }\n\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parsestring() {\n      var s0, s1, s2, s3, s4;\n\n      var key    = peg$currPos * 36 + 27,\n          cached = peg$cache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n        return cached.result;\n      }\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 34) {\n        s1 = peg$c116;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c117); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$parsestringEscapedChar();\n        if (s3 === peg$FAILED) {\n          if (peg$c118.test(input.charAt(peg$currPos))) {\n            s3 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c119); }\n          }\n        }\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$parsestringEscapedChar();\n          if (s3 === peg$FAILED) {\n            if (peg$c118.test(input.charAt(peg$currPos))) {\n              s3 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s3 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c119); }\n            }\n          }\n        }\n        if (s2 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 34) {\n            s3 = peg$c116;\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c117); }\n          }\n          if (s3 !== peg$FAILED) {\n            peg$reportedPos = s0;\n            s1 = peg$c120(s2);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 39) {\n          s1 = peg$c121;\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c122); }\n        }\n        if (s1 !== peg$FAILED) {\n          s2 = peg$currPos;\n          s3 = [];\n          if (input.substr(peg$currPos, 2) === peg$c123) {\n            s4 = peg$c123;\n            peg$currPos += 2;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c124); }\n          }\n          if (s4 === peg$FAILED) {\n            if (peg$c125.test(input.charAt(peg$currPos))) {\n              s4 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s4 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c126); }\n            }\n          }\n          while (s4 !== peg$FAILED) {\n            s3.push(s4);\n            if (input.substr(peg$currPos, 2) === peg$c123) {\n              s4 = peg$c123;\n              peg$currPos += 2;\n            } else {\n              s4 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c124); }\n            }\n            if (s4 === peg$FAILED) {\n              if (peg$c125.test(input.charAt(peg$currPos))) {\n                s4 = input.charAt(peg$currPos);\n                peg$currPos++;\n              } else {\n                s4 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c126); }\n              }\n            }\n          }\n          if (s3 !== peg$FAILED) {\n            s3 = input.substring(s2, peg$currPos);\n          }\n          s2 = s3;\n          if (s2 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 39) {\n              s3 = peg$c121;\n              peg$currPos++;\n            } else {\n              s3 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c122); }\n            }\n            if (s3 !== peg$FAILED) {\n              peg$reportedPos = s0;\n              s1 = peg$c127(s2);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c115); }\n      }\n\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parsestringEscapedChar() {\n      var s0, s1, s2, s3, s4, s5, s6, s7;\n\n      var key    = peg$currPos * 36 + 28,\n          cached = peg$cache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n        return cached.result;\n      }\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 2) === peg$c129) {\n        s1 = peg$c129;\n        peg$currPos += 2;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c130); }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c131();\n      }\n      s0 = s1;\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        if (input.substr(peg$currPos, 2) === peg$c132) {\n          s1 = peg$c132;\n          peg$currPos += 2;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c133); }\n        }\n        if (s1 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c134();\n        }\n        s0 = s1;\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          if (input.charCodeAt(peg$currPos) === 39) {\n            s1 = peg$c121;\n            peg$currPos++;\n          } else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c122); }\n          }\n          if (s1 !== peg$FAILED) {\n            peg$reportedPos = s0;\n            s1 = peg$c135();\n          }\n          s0 = s1;\n          if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            if (input.substr(peg$currPos, 2) === peg$c136) {\n              s1 = peg$c136;\n              peg$currPos += 2;\n            } else {\n              s1 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c137); }\n            }\n            if (s1 !== peg$FAILED) {\n              peg$reportedPos = s0;\n              s1 = peg$c138();\n            }\n            s0 = s1;\n            if (s0 === peg$FAILED) {\n              s0 = peg$currPos;\n              if (input.substr(peg$currPos, 2) === peg$c139) {\n                s1 = peg$c139;\n                peg$currPos += 2;\n              } else {\n                s1 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c140); }\n              }\n              if (s1 !== peg$FAILED) {\n                peg$reportedPos = s0;\n                s1 = peg$c141();\n              }\n              s0 = s1;\n              if (s0 === peg$FAILED) {\n                s0 = peg$currPos;\n                if (input.substr(peg$currPos, 2) === peg$c142) {\n                  s1 = peg$c142;\n                  peg$currPos += 2;\n                } else {\n                  s1 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c143); }\n                }\n                if (s1 !== peg$FAILED) {\n                  peg$reportedPos = s0;\n                  s1 = peg$c144();\n                }\n                s0 = s1;\n                if (s0 === peg$FAILED) {\n                  s0 = peg$currPos;\n                  if (input.substr(peg$currPos, 2) === peg$c145) {\n                    s1 = peg$c145;\n                    peg$currPos += 2;\n                  } else {\n                    s1 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c146); }\n                  }\n                  if (s1 !== peg$FAILED) {\n                    peg$reportedPos = s0;\n                    s1 = peg$c147();\n                  }\n                  s0 = s1;\n                  if (s0 === peg$FAILED) {\n                    s0 = peg$currPos;\n                    if (input.substr(peg$currPos, 2) === peg$c148) {\n                      s1 = peg$c148;\n                      peg$currPos += 2;\n                    } else {\n                      s1 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c149); }\n                    }\n                    if (s1 !== peg$FAILED) {\n                      peg$reportedPos = s0;\n                      s1 = peg$c150();\n                    }\n                    s0 = s1;\n                    if (s0 === peg$FAILED) {\n                      s0 = peg$currPos;\n                      if (input.substr(peg$currPos, 2) === peg$c151) {\n                        s1 = peg$c151;\n                        peg$currPos += 2;\n                      } else {\n                        s1 = peg$FAILED;\n                        if (peg$silentFails === 0) { peg$fail(peg$c152); }\n                      }\n                      if (s1 !== peg$FAILED) {\n                        peg$reportedPos = s0;\n                        s1 = peg$c153();\n                      }\n                      s0 = s1;\n                      if (s0 === peg$FAILED) {\n                        s0 = peg$currPos;\n                        if (input.substr(peg$currPos, 2) === peg$c154) {\n                          s1 = peg$c154;\n                          peg$currPos += 2;\n                        } else {\n                          s1 = peg$FAILED;\n                          if (peg$silentFails === 0) { peg$fail(peg$c155); }\n                        }\n                        if (s1 !== peg$FAILED) {\n                          peg$reportedPos = s0;\n                          s1 = peg$c156();\n                        }\n                        s0 = s1;\n                        if (s0 === peg$FAILED) {\n                          s0 = peg$currPos;\n                          if (input.substr(peg$currPos, 2) === peg$c157) {\n                            s1 = peg$c157;\n                            peg$currPos += 2;\n                          } else {\n                            s1 = peg$FAILED;\n                            if (peg$silentFails === 0) { peg$fail(peg$c158); }\n                          }\n                          if (s1 !== peg$FAILED) {\n                            s2 = peg$currPos;\n                            s3 = peg$currPos;\n                            if (peg$c159.test(input.charAt(peg$currPos))) {\n                              s4 = input.charAt(peg$currPos);\n                              peg$currPos++;\n                            } else {\n                              s4 = peg$FAILED;\n                              if (peg$silentFails === 0) { peg$fail(peg$c160); }\n                            }\n                            if (s4 !== peg$FAILED) {\n                              if (peg$c159.test(input.charAt(peg$currPos))) {\n                                s5 = input.charAt(peg$currPos);\n                                peg$currPos++;\n                              } else {\n                                s5 = peg$FAILED;\n                                if (peg$silentFails === 0) { peg$fail(peg$c160); }\n                              }\n                              if (s5 !== peg$FAILED) {\n                                s4 = [s4, s5];\n                                s3 = s4;\n                              } else {\n                                peg$currPos = s3;\n                                s3 = peg$c0;\n                              }\n                            } else {\n                              peg$currPos = s3;\n                              s3 = peg$c0;\n                            }\n                            if (s3 !== peg$FAILED) {\n                              s3 = input.substring(s2, peg$currPos);\n                            }\n                            s2 = s3;\n                            if (s2 !== peg$FAILED) {\n                              peg$reportedPos = s0;\n                              s1 = peg$c161(s2);\n                              s0 = s1;\n                            } else {\n                              peg$currPos = s0;\n                              s0 = peg$c0;\n                            }\n                          } else {\n                            peg$currPos = s0;\n                            s0 = peg$c0;\n                          }\n                          if (s0 === peg$FAILED) {\n                            s0 = peg$currPos;\n                            if (input.substr(peg$currPos, 2) === peg$c162) {\n                              s1 = peg$c162;\n                              peg$currPos += 2;\n                            } else {\n                              s1 = peg$FAILED;\n                              if (peg$silentFails === 0) { peg$fail(peg$c163); }\n                            }\n                            if (s1 !== peg$FAILED) {\n                              s2 = peg$currPos;\n                              s3 = peg$currPos;\n                              if (peg$c159.test(input.charAt(peg$currPos))) {\n                                s4 = input.charAt(peg$currPos);\n                                peg$currPos++;\n                              } else {\n                                s4 = peg$FAILED;\n                                if (peg$silentFails === 0) { peg$fail(peg$c160); }\n                              }\n                              if (s4 !== peg$FAILED) {\n                                if (peg$c159.test(input.charAt(peg$currPos))) {\n                                  s5 = input.charAt(peg$currPos);\n                                  peg$currPos++;\n                                } else {\n                                  s5 = peg$FAILED;\n                                  if (peg$silentFails === 0) { peg$fail(peg$c160); }\n                                }\n                                if (s5 !== peg$FAILED) {\n                                  if (peg$c159.test(input.charAt(peg$currPos))) {\n                                    s6 = input.charAt(peg$currPos);\n                                    peg$currPos++;\n                                  } else {\n                                    s6 = peg$FAILED;\n                                    if (peg$silentFails === 0) { peg$fail(peg$c160); }\n                                  }\n                                  if (s6 !== peg$FAILED) {\n                                    if (peg$c159.test(input.charAt(peg$currPos))) {\n                                      s7 = input.charAt(peg$currPos);\n                                      peg$currPos++;\n                                    } else {\n                                      s7 = peg$FAILED;\n                                      if (peg$silentFails === 0) { peg$fail(peg$c160); }\n                                    }\n                                    if (s7 !== peg$FAILED) {\n                                      s4 = [s4, s5, s6, s7];\n                                      s3 = s4;\n                                    } else {\n                                      peg$currPos = s3;\n                                      s3 = peg$c0;\n                                    }\n                                  } else {\n                                    peg$currPos = s3;\n                                    s3 = peg$c0;\n                                  }\n                                } else {\n                                  peg$currPos = s3;\n                                  s3 = peg$c0;\n                                }\n                              } else {\n                                peg$currPos = s3;\n                                s3 = peg$c0;\n                              }\n                              if (s3 !== peg$FAILED) {\n                                s3 = input.substring(s2, peg$currPos);\n                              }\n                              s2 = s3;\n                              if (s2 !== peg$FAILED) {\n                                peg$reportedPos = s0;\n                                s1 = peg$c161(s2);\n                                s0 = s1;\n                              } else {\n                                peg$currPos = s0;\n                                s0 = peg$c0;\n                              }\n                            } else {\n                              peg$currPos = s0;\n                              s0 = peg$c0;\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c128); }\n      }\n\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parseregexp() {\n      var s0, s1, s2, s3, s4;\n\n      var key    = peg$currPos * 36 + 29,\n          cached = peg$cache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n        return cached.result;\n      }\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 47) {\n        s1 = peg$c12;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c13); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$currPos;\n        s3 = [];\n        if (input.substr(peg$currPos, 2) === peg$c165) {\n          s4 = peg$c165;\n          peg$currPos += 2;\n        } else {\n          s4 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c166); }\n        }\n        if (s4 === peg$FAILED) {\n          if (peg$c167.test(input.charAt(peg$currPos))) {\n            s4 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c168); }\n          }\n        }\n        while (s4 !== peg$FAILED) {\n          s3.push(s4);\n          if (input.substr(peg$currPos, 2) === peg$c165) {\n            s4 = peg$c165;\n            peg$currPos += 2;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c166); }\n          }\n          if (s4 === peg$FAILED) {\n            if (peg$c167.test(input.charAt(peg$currPos))) {\n              s4 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s4 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c168); }\n            }\n          }\n        }\n        if (s3 !== peg$FAILED) {\n          s3 = input.substring(s2, peg$currPos);\n        }\n        s2 = s3;\n        if (s2 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 47) {\n            s3 = peg$c12;\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c13); }\n          }\n          if (s3 !== peg$FAILED) {\n            peg$reportedPos = s0;\n            s1 = peg$c169(s2);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c164); }\n      }\n\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parsenumber() {\n      var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11;\n\n      var key    = peg$currPos * 36 + 30,\n          cached = peg$cache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n        return cached.result;\n      }\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = peg$currPos;\n      if (peg$c171.test(input.charAt(peg$currPos))) {\n        s2 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c172); }\n      }\n      if (s2 === peg$FAILED) {\n        s2 = peg$c7;\n      }\n      if (s2 !== peg$FAILED) {\n        s2 = input.substring(s1, peg$currPos);\n      }\n      s1 = s2;\n      if (s1 !== peg$FAILED) {\n        if (input.substr(peg$currPos, 2) === peg$c173) {\n          s2 = peg$c173;\n          peg$currPos += 2;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c174); }\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$currPos;\n          s4 = [];\n          if (peg$c175.test(input.charAt(peg$currPos))) {\n            s5 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c176); }\n          }\n          if (s5 !== peg$FAILED) {\n            while (s5 !== peg$FAILED) {\n              s4.push(s5);\n              if (peg$c175.test(input.charAt(peg$currPos))) {\n                s5 = input.charAt(peg$currPos);\n                peg$currPos++;\n              } else {\n                s5 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c176); }\n              }\n            }\n          } else {\n            s4 = peg$c0;\n          }\n          if (s4 !== peg$FAILED) {\n            s4 = input.substring(s3, peg$currPos);\n          }\n          s3 = s4;\n          if (s3 !== peg$FAILED) {\n            peg$reportedPos = s0;\n            s1 = peg$c177(s1, s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$currPos;\n        if (peg$c171.test(input.charAt(peg$currPos))) {\n          s2 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c172); }\n        }\n        if (s2 === peg$FAILED) {\n          s2 = peg$c7;\n        }\n        if (s2 !== peg$FAILED) {\n          s2 = input.substring(s1, peg$currPos);\n        }\n        s1 = s2;\n        if (s1 !== peg$FAILED) {\n          if (input.substr(peg$currPos, 2) === peg$c178) {\n            s2 = peg$c178;\n            peg$currPos += 2;\n          } else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c179); }\n          }\n          if (s2 !== peg$FAILED) {\n            s3 = peg$currPos;\n            s4 = [];\n            if (peg$c180.test(input.charAt(peg$currPos))) {\n              s5 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c181); }\n            }\n            if (s5 !== peg$FAILED) {\n              while (s5 !== peg$FAILED) {\n                s4.push(s5);\n                if (peg$c180.test(input.charAt(peg$currPos))) {\n                  s5 = input.charAt(peg$currPos);\n                  peg$currPos++;\n                } else {\n                  s5 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c181); }\n                }\n              }\n            } else {\n              s4 = peg$c0;\n            }\n            if (s4 !== peg$FAILED) {\n              s4 = input.substring(s3, peg$currPos);\n            }\n            s3 = s4;\n            if (s3 !== peg$FAILED) {\n              peg$reportedPos = s0;\n              s1 = peg$c182(s1, s3);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          s1 = peg$currPos;\n          if (peg$c171.test(input.charAt(peg$currPos))) {\n            s2 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c172); }\n          }\n          if (s2 === peg$FAILED) {\n            s2 = peg$c7;\n          }\n          if (s2 !== peg$FAILED) {\n            s2 = input.substring(s1, peg$currPos);\n          }\n          s1 = s2;\n          if (s1 !== peg$FAILED) {\n            if (input.substr(peg$currPos, 2) === peg$c183) {\n              s2 = peg$c183;\n              peg$currPos += 2;\n            } else {\n              s2 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c184); }\n            }\n            if (s2 !== peg$FAILED) {\n              s3 = peg$currPos;\n              s4 = [];\n              if (peg$c159.test(input.charAt(peg$currPos))) {\n                s5 = input.charAt(peg$currPos);\n                peg$currPos++;\n              } else {\n                s5 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c160); }\n              }\n              if (s5 !== peg$FAILED) {\n                while (s5 !== peg$FAILED) {\n                  s4.push(s5);\n                  if (peg$c159.test(input.charAt(peg$currPos))) {\n                    s5 = input.charAt(peg$currPos);\n                    peg$currPos++;\n                  } else {\n                    s5 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c160); }\n                  }\n                }\n              } else {\n                s4 = peg$c0;\n              }\n              if (s4 !== peg$FAILED) {\n                s4 = input.substring(s3, peg$currPos);\n              }\n              s3 = s4;\n              if (s3 !== peg$FAILED) {\n                peg$reportedPos = s0;\n                s1 = peg$c185(s1, s3);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$c0;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n          if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            s1 = peg$currPos;\n            s2 = peg$currPos;\n            if (peg$c171.test(input.charAt(peg$currPos))) {\n              s3 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s3 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c172); }\n            }\n            if (s3 === peg$FAILED) {\n              s3 = peg$c7;\n            }\n            if (s3 !== peg$FAILED) {\n              s4 = [];\n              if (peg$c186.test(input.charAt(peg$currPos))) {\n                s5 = input.charAt(peg$currPos);\n                peg$currPos++;\n              } else {\n                s5 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c187); }\n              }\n              while (s5 !== peg$FAILED) {\n                s4.push(s5);\n                if (peg$c186.test(input.charAt(peg$currPos))) {\n                  s5 = input.charAt(peg$currPos);\n                  peg$currPos++;\n                } else {\n                  s5 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c187); }\n                }\n              }\n              if (s4 !== peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 46) {\n                  s5 = peg$c188;\n                  peg$currPos++;\n                } else {\n                  s5 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c189); }\n                }\n                if (s5 !== peg$FAILED) {\n                  s6 = [];\n                  if (peg$c186.test(input.charAt(peg$currPos))) {\n                    s7 = input.charAt(peg$currPos);\n                    peg$currPos++;\n                  } else {\n                    s7 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c187); }\n                  }\n                  if (s7 !== peg$FAILED) {\n                    while (s7 !== peg$FAILED) {\n                      s6.push(s7);\n                      if (peg$c186.test(input.charAt(peg$currPos))) {\n                        s7 = input.charAt(peg$currPos);\n                        peg$currPos++;\n                      } else {\n                        s7 = peg$FAILED;\n                        if (peg$silentFails === 0) { peg$fail(peg$c187); }\n                      }\n                    }\n                  } else {\n                    s6 = peg$c0;\n                  }\n                  if (s6 !== peg$FAILED) {\n                    s7 = peg$currPos;\n                    if (peg$c190.test(input.charAt(peg$currPos))) {\n                      s8 = input.charAt(peg$currPos);\n                      peg$currPos++;\n                    } else {\n                      s8 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c191); }\n                    }\n                    if (s8 !== peg$FAILED) {\n                      if (peg$c171.test(input.charAt(peg$currPos))) {\n                        s9 = input.charAt(peg$currPos);\n                        peg$currPos++;\n                      } else {\n                        s9 = peg$FAILED;\n                        if (peg$silentFails === 0) { peg$fail(peg$c172); }\n                      }\n                      if (s9 === peg$FAILED) {\n                        s9 = peg$c7;\n                      }\n                      if (s9 !== peg$FAILED) {\n                        s10 = [];\n                        if (peg$c186.test(input.charAt(peg$currPos))) {\n                          s11 = input.charAt(peg$currPos);\n                          peg$currPos++;\n                        } else {\n                          s11 = peg$FAILED;\n                          if (peg$silentFails === 0) { peg$fail(peg$c187); }\n                        }\n                        if (s11 !== peg$FAILED) {\n                          while (s11 !== peg$FAILED) {\n                            s10.push(s11);\n                            if (peg$c186.test(input.charAt(peg$currPos))) {\n                              s11 = input.charAt(peg$currPos);\n                              peg$currPos++;\n                            } else {\n                              s11 = peg$FAILED;\n                              if (peg$silentFails === 0) { peg$fail(peg$c187); }\n                            }\n                          }\n                        } else {\n                          s10 = peg$c0;\n                        }\n                        if (s10 !== peg$FAILED) {\n                          s8 = [s8, s9, s10];\n                          s7 = s8;\n                        } else {\n                          peg$currPos = s7;\n                          s7 = peg$c0;\n                        }\n                      } else {\n                        peg$currPos = s7;\n                        s7 = peg$c0;\n                      }\n                    } else {\n                      peg$currPos = s7;\n                      s7 = peg$c0;\n                    }\n                    if (s7 === peg$FAILED) {\n                      s7 = peg$c7;\n                    }\n                    if (s7 !== peg$FAILED) {\n                      s3 = [s3, s4, s5, s6, s7];\n                      s2 = s3;\n                    } else {\n                      peg$currPos = s2;\n                      s2 = peg$c0;\n                    }\n                  } else {\n                    peg$currPos = s2;\n                    s2 = peg$c0;\n                  }\n                } else {\n                  peg$currPos = s2;\n                  s2 = peg$c0;\n                }\n              } else {\n                peg$currPos = s2;\n                s2 = peg$c0;\n              }\n            } else {\n              peg$currPos = s2;\n              s2 = peg$c0;\n            }\n            if (s2 !== peg$FAILED) {\n              s2 = input.substring(s1, peg$currPos);\n            }\n            s1 = s2;\n            if (s1 !== peg$FAILED) {\n              peg$reportedPos = s0;\n              s1 = peg$c192(s1);\n            }\n            s0 = s1;\n            if (s0 === peg$FAILED) {\n              s0 = peg$currPos;\n              s1 = peg$currPos;\n              s2 = peg$currPos;\n              if (peg$c171.test(input.charAt(peg$currPos))) {\n                s3 = input.charAt(peg$currPos);\n                peg$currPos++;\n              } else {\n                s3 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c172); }\n              }\n              if (s3 === peg$FAILED) {\n                s3 = peg$c7;\n              }\n              if (s3 !== peg$FAILED) {\n                s4 = [];\n                if (peg$c186.test(input.charAt(peg$currPos))) {\n                  s5 = input.charAt(peg$currPos);\n                  peg$currPos++;\n                } else {\n                  s5 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c187); }\n                }\n                if (s5 !== peg$FAILED) {\n                  while (s5 !== peg$FAILED) {\n                    s4.push(s5);\n                    if (peg$c186.test(input.charAt(peg$currPos))) {\n                      s5 = input.charAt(peg$currPos);\n                      peg$currPos++;\n                    } else {\n                      s5 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c187); }\n                    }\n                  }\n                } else {\n                  s4 = peg$c0;\n                }\n                if (s4 !== peg$FAILED) {\n                  s3 = [s3, s4];\n                  s2 = s3;\n                } else {\n                  peg$currPos = s2;\n                  s2 = peg$c0;\n                }\n              } else {\n                peg$currPos = s2;\n                s2 = peg$c0;\n              }\n              if (s2 !== peg$FAILED) {\n                s2 = input.substring(s1, peg$currPos);\n              }\n              s1 = s2;\n              if (s1 !== peg$FAILED) {\n                peg$reportedPos = s0;\n                s1 = peg$c193(s1);\n              }\n              s0 = s1;\n            }\n          }\n        }\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c170); }\n      }\n\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parsevalue() {\n      var s0, s1;\n\n      var key    = peg$currPos * 36 + 31,\n          cached = peg$cache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n        return cached.result;\n      }\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 4) === peg$c195) {\n        s1 = peg$c195;\n        peg$currPos += 4;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c196); }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c197();\n      }\n      s0 = s1;\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        if (input.substr(peg$currPos, 5) === peg$c198) {\n          s1 = peg$c198;\n          peg$currPos += 5;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c199); }\n        }\n        if (s1 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c200();\n        }\n        s0 = s1;\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          if (input.substr(peg$currPos, 4) === peg$c201) {\n            s1 = peg$c201;\n            peg$currPos += 4;\n          } else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c202); }\n          }\n          if (s1 !== peg$FAILED) {\n            peg$reportedPos = s0;\n            s1 = peg$c203();\n          }\n          s0 = s1;\n          if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            if (input.substr(peg$currPos, 3) === peg$c204) {\n              s1 = peg$c204;\n              peg$currPos += 3;\n            } else {\n              s1 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c205); }\n            }\n            if (s1 !== peg$FAILED) {\n              peg$reportedPos = s0;\n              s1 = peg$c206();\n            }\n            s0 = s1;\n            if (s0 === peg$FAILED) {\n              s0 = peg$currPos;\n              if (input.substr(peg$currPos, 9) === peg$c207) {\n                s1 = peg$c207;\n                peg$currPos += 9;\n              } else {\n                s1 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c208); }\n              }\n              if (s1 !== peg$FAILED) {\n                peg$reportedPos = s0;\n                s1 = peg$c209();\n              }\n              s0 = s1;\n            }\n          }\n        }\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c194); }\n      }\n\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parse_() {\n      var s0, s1;\n\n      var key    = peg$currPos * 36 + 32,\n          cached = peg$cache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n        return cached.result;\n      }\n\n      peg$silentFails++;\n      s0 = [];\n      s1 = peg$parseco();\n      if (s1 === peg$FAILED) {\n        s1 = peg$parsews();\n      }\n      while (s1 !== peg$FAILED) {\n        s0.push(s1);\n        s1 = peg$parseco();\n        if (s1 === peg$FAILED) {\n          s1 = peg$parsews();\n        }\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c210); }\n      }\n\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parseco() {\n      var s0, s1, s2, s3, s4, s5;\n\n      var key    = peg$currPos * 36 + 33,\n          cached = peg$cache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n        return cached.result;\n      }\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 2) === peg$c212) {\n        s1 = peg$c212;\n        peg$currPos += 2;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c213); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$currPos;\n        s4 = peg$currPos;\n        peg$silentFails++;\n        if (input.substr(peg$currPos, 2) === peg$c214) {\n          s5 = peg$c214;\n          peg$currPos += 2;\n        } else {\n          s5 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c215); }\n        }\n        peg$silentFails--;\n        if (s5 === peg$FAILED) {\n          s4 = peg$c109;\n        } else {\n          peg$currPos = s4;\n          s4 = peg$c0;\n        }\n        if (s4 !== peg$FAILED) {\n          if (input.length > peg$currPos) {\n            s5 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c216); }\n          }\n          if (s5 !== peg$FAILED) {\n            s4 = [s4, s5];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$c0;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$c0;\n        }\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$currPos;\n          s4 = peg$currPos;\n          peg$silentFails++;\n          if (input.substr(peg$currPos, 2) === peg$c214) {\n            s5 = peg$c214;\n            peg$currPos += 2;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c215); }\n          }\n          peg$silentFails--;\n          if (s5 === peg$FAILED) {\n            s4 = peg$c109;\n          } else {\n            peg$currPos = s4;\n            s4 = peg$c0;\n          }\n          if (s4 !== peg$FAILED) {\n            if (input.length > peg$currPos) {\n              s5 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c216); }\n            }\n            if (s5 !== peg$FAILED) {\n              s4 = [s4, s5];\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$c0;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$c0;\n          }\n        }\n        if (s2 !== peg$FAILED) {\n          if (input.substr(peg$currPos, 2) === peg$c214) {\n            s3 = peg$c214;\n            peg$currPos += 2;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c215); }\n          }\n          if (s3 !== peg$FAILED) {\n            s1 = [s1, s2, s3];\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c211); }\n      }\n\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parsews() {\n      var s0, s1;\n\n      var key    = peg$currPos * 36 + 34,\n          cached = peg$cache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n        return cached.result;\n      }\n\n      peg$silentFails++;\n      s0 = [];\n      if (peg$c218.test(input.charAt(peg$currPos))) {\n        s1 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c219); }\n      }\n      if (s1 !== peg$FAILED) {\n        while (s1 !== peg$FAILED) {\n          s0.push(s1);\n          if (peg$c218.test(input.charAt(peg$currPos))) {\n            s1 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c219); }\n          }\n        }\n      } else {\n        s0 = peg$c0;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c217); }\n      }\n\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parseeof() {\n      var s0, s1;\n\n      var key    = peg$currPos * 36 + 35,\n          cached = peg$cache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n        return cached.result;\n      }\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      peg$silentFails++;\n      if (input.length > peg$currPos) {\n        s1 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c216); }\n      }\n      peg$silentFails--;\n      if (s1 === peg$FAILED) {\n        s0 = peg$c109;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c220); }\n      }\n\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n\r\n        /*  standard PEGUtil integration code  */\r\n        var unroll = options.util.makeUnroll(line, column, offset, SyntaxError)\r\n        var ast    = options.util.makeAST   (line, column, offset, options)\r\n\n\n    peg$result = peg$startRuleFunction();\n\n    if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n      return peg$result;\n    } else {\n      if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n        peg$fail({ type: \"end\", description: \"end of input\" });\n      }\n\n      throw peg$buildException(null, peg$maxFailExpected, peg$maxFailPos);\n    }\n  }\n\n  return {\n    SyntaxError: SyntaxError,\n    parse:       parse\n  };\n})());\n\n/*  get query executor  */\nvar ASTQQueryExec = _interopRequire(require(\"./astq-query-exec.js\"));\n\nvar ASTQQuery = (function () {\n    /*  create a new instance of the query instance  */\n    function ASTQQuery(selector) {\n        this.asty = new ASTY();\n        this.ast = null;\n        if (selector) this.compile(selector);\n    }\n\n    _prototypeProperties(ASTQQuery, null, {\n        compile: {\n\n            /*  compile query selector into AST  */\n            value: function compile(selector, trace) {\n                var _this = this;\n                if (trace) console.log(\"ASTQ: compile: +-------------------------------------------------------------------------------------------------------\\n\" + \"ASTQ: compile: | \" + selector);\n                var result = PEGUtil.parse(ASTQQueryParse, selector, {\n                    startRule: \"query\",\n                    makeAST: function (line, column, offset, args) {\n                        return _this.asty.create.apply(_this.asty, args).pos(line, column, offset);\n                    }\n                });\n                if (result.error !== null) throw new Error(\"ASTQ: compile: query parsing failed:\\n\" + PEGUtil.errorMessage(result.error, true).replace(/^/mg, \"ERROR: \"));\n                this.ast = result.ast;\n                if (trace) console.log(\"ASTQ: compile: +-------------------------------------------------------------------------------------------------------\\n\" + this.dump().replace(/\\n$/, \"\").replace(/^/mg, \"ASTQ: compile: | \"));\n                return this;\n            },\n            writable: true,\n            configurable: true\n        },\n        dump: {\n\n            /*  dump the query AST  */\n            value: function dump() {\n                return this.ast.dump();\n            },\n            writable: true,\n            configurable: true\n        },\n        execute: {\n\n            /*  execute the query AST onto node  */\n            value: function execute(node, adapter, params, funcs, trace) {\n                if (trace) console.log(\"ASTQ: execute: +--------------------------------------------------------------+----------------------------------------\");\n                var qe = new ASTQQueryExec(adapter, params, funcs, trace);\n                return qe.execQuery(this.ast, node);\n            },\n            writable: true,\n            configurable: true\n        }\n    });\n\n    return ASTQQuery;\n})();\n\nmodule.exports = ASTQQuery;\n\n},{\"./astq-query-exec.js\":8,\"asty\":\"asty\",\"pegjs-util\":\"pegjs-util\"}],11:[function(require,module,exports){\n\"use strict\";\n\n/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nvar ASTQUtil = {\n    /*  pad a string with spaces to the left/right  */\n    pad: function pad(str, num) {\n        var n = num < 0 ? -num : num;\n        if (str.length > n) str = str.substr(0, n);else {\n            var pad = Array(n + 1 - str.length).join(\" \");\n            str = num < 0 ? str + pad : pad + str;\n        }\n        return str;\n    },\n\n    /*  check whether value is \"true\" (or can be considered to be true)  */\n    truthy: function truthy(value) {\n        var result = undefined;\n        switch (typeof value) {\n            case \"boolean\":\n                result = value;\n                break;\n            case \"number\":\n                result = value !== 0 && !isNaN(value);\n                break;\n            case \"string\":\n                result = value !== \"\";\n                break;\n            case \"object\":\n                result = false;\n                if (value !== null) {\n                    result = true;\n                    if (value instanceof Array) result = value.length > 0;\n                }\n                break;\n            default:\n                result = false;\n        }\n        return result;\n    },\n\n    /*  coerce value to particular type  */\n    coerce: function coerce(value, type) {\n        if (typeof value !== type) {\n            try {\n                switch (type) {\n                    case \"boolean\":\n                        value = Boolean(value);\n                        break;\n                    case \"number\":\n                        value = Number(value);\n                        break;\n                    case \"string\":\n                        value = String(value);\n                        break;\n                    case \"regexp\":\n                        value = new RegExp(value);\n                        break;\n                }\n            } catch (e) {\n                throw new Error(\"cannot coerce value into type \" + type);\n            }\n        }\n        return value;\n    }\n};\n\nmodule.exports = ASTQUtil;\n\n},{}],12:[function(require,module,exports){\n\"use strict\";\n\n/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/* global 1: false */\n/* global 1: false */\n/* global 0: false */\n/* global 20150201:  false */\n\nvar version = {\n    major: 1,\n    minor: 1,\n    micro: 0,\n    date: 20150201\n};\n\nmodule.exports = version;\n\n},{}],13:[function(require,module,exports){\n\"use strict\";\n\nvar _interopRequire = function (obj) { return obj && obj.__esModule ? obj[\"default\"] : obj; };\n\nvar _prototypeProperties = function (child, staticProps, instanceProps) { if (staticProps) Object.defineProperties(child, staticProps); if (instanceProps) Object.defineProperties(child.prototype, instanceProps); };\n\n/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/*  load internal dependencies  */\nvar ASTQAdapter = _interopRequire(require(\"./astq-adapter.js\"));\n\nvar ASTQAdapterASTY = _interopRequire(require(\"./astq-adapter-asty.js\"));\n\nvar ASTQAdapterMOZAST = _interopRequire(require(\"./astq-adapter-mozast.js\"));\n\nvar ASTQAdapterXMLDOM = _interopRequire(require(\"./astq-adapter-xmldom.js\"));\n\nvar ASTQFuncs = _interopRequire(require(\"./astq-funcs.js\"));\n\nvar ASTQFuncsSTD = _interopRequire(require(\"./astq-funcs-std.js\"));\n\nvar ASTQCache = _interopRequire(require(\"./astq-cache.js\"));\n\nvar ASTQQuery = _interopRequire(require(\"./astq-query.js\"));\n\nvar ASTQVersion = _interopRequire(require(\"./astq-version.js\"));\n\n/*  define the API class  */\nvar ASTQ = (function () {\n    /*  create a new ASTq instance  */\n    function ASTQ() {\n        /*  create adapter registry and pre-register standard adapters  */\n        this._adapter = new ASTQAdapter();\n        this._adapter.register(ASTQAdapterMOZAST);\n        this._adapter.register(ASTQAdapterXMLDOM);\n        this._adapter.register(ASTQAdapterASTY);\n\n        /*  create function registry and pre-register standard functions  */\n        this._funcs = new ASTQFuncs();\n        for (var _name in ASTQFuncsSTD) {\n            this.func(_name, ASTQFuncsSTD[_name]);\n        } /*  create LRU cache  */\n        this._cache = new ASTQCache();\n    }\n\n    _prototypeProperties(ASTQ, null, {\n        version: {\n\n            /*  return the version information  */\n            value: function version() {\n                return ASTQVersion;\n            },\n            writable: true,\n            configurable: true\n        },\n        adapter: {\n\n            /*  switch to a custom adapter  */\n            value: function adapter(adapter) {\n                if (arguments.length !== 1) throw new Error(\"ASTQ#adapter: invalid number of arguments\");\n                this._adapter.unregister();\n                this._adapter.register(adapter);\n                return this;\n            },\n            writable: true,\n            configurable: true\n        },\n        func: {\n\n            /*  register an additional function  */\n            value: function func(name, func) {\n                if (arguments.length !== 2) throw new Error(\"ASTQ#func: invalid number of arguments\");\n                this._funcs.register(name, func);\n                return this;\n            },\n            writable: true,\n            configurable: true\n        },\n        cache: {\n\n            /*  configure the LRU cache limit  */\n            value: function cache(entries) {\n                if (arguments.length !== 1) throw new Error(\"ASTQ#cache: invalid number of arguments\");\n                this._cache.limit(entries);\n                return this;\n            },\n            writable: true,\n            configurable: true\n        },\n        compile: {\n\n            /*  individual step 1: compile selector DSL into a query AST  */\n            value: function compile(selector, trace) {\n                if (arguments.length < 1) throw new Error(\"ASTQ#compile: too less arguments\");\n                if (arguments.length > 2) throw new Error(\"ASTQ#compile: too many arguments\");\n                if (trace === undefined) trace = false;\n                var query = this._cache.get(selector);\n                if (query === undefined) {\n                    query = new ASTQQuery();\n                    query.compile(selector, trace);\n                    this._cache.set(selector, query);\n                }\n                return query;\n            },\n            writable: true,\n            configurable: true\n        },\n        execute: {\n\n            /*  individual step 2: execute query AST onto node  */\n            value: function execute(node, query, params, trace) {\n                if (arguments.length < 2) throw new Error(\"ASTQ#execute: too less arguments\");\n                if (arguments.length > 4) throw new Error(\"ASTQ#execute: too many arguments\");\n                if (params === undefined) params = {};\n                if (trace === undefined) trace = false;\n                var adapter = this._adapter.select(node);\n                if (adapter === undefined) throw new Error(\"ASTQ#execute: no suitable adapter found for node\");\n                return query.execute(node, adapter, params, this._funcs, trace);\n            },\n            writable: true,\n            configurable: true\n        },\n        query: {\n\n            /*  all-in-one step: execute selector DSL onto node  */\n            value: function query(node, selector, params, trace) {\n                if (arguments.length < 2) throw new Error(\"ASTQ#query: too less arguments\");\n                if (arguments.length > 4) throw new Error(\"ASTQ#query: too many arguments\");\n                if (params === undefined) params = {};\n                if (trace === undefined) trace = false;\n                return this.execute(node, this.compile(selector, trace), params, trace);\n            },\n            writable: true,\n            configurable: true\n        }\n    });\n\n    return ASTQ;\n})();\n\nmodule.exports = ASTQ;\n\n},{\"./astq-adapter-asty.js\":1,\"./astq-adapter-mozast.js\":2,\"./astq-adapter-xmldom.js\":3,\"./astq-adapter.js\":4,\"./astq-cache.js\":5,\"./astq-funcs-std.js\":6,\"./astq-funcs.js\":7,\"./astq-query.js\":10,\"./astq-version.js\":12}]},{},[1,2,3,4,5,6,7,8,9,10,11,12,13])(13)\n});","/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n!function(e){if(\"object\"==typeof exports&&\"undefined\"!=typeof module)module.exports=e();else if(\"function\"==typeof define&&define.amd)define([],e);else{var f;\"undefined\"!=typeof window?f=window:\"undefined\"!=typeof global?f=global:\"undefined\"!=typeof self&&(f=self),f.ASTY=e()}}(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\n\"use strict\";\n\nvar _prototypeProperties = function (child, staticProps, instanceProps) { if (staticProps) Object.defineProperties(child, staticProps); if (instanceProps) Object.defineProperties(child.prototype, instanceProps); };\n\n/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nvar ASTYBase = (function () {\n    function ASTYBase() {}\n\n    _prototypeProperties(ASTYBase, null, {\n        init: {\n            /*  AST node initialization  */\n            value: function init(T, A, C) {\n                if (typeof T === \"undefined\") throw new Error(\"init: invalid argument\");\n                this.ASTy = true;\n                this.T = T;\n                this.L = { L: 0, C: 0, O: 0 };\n                this.A = {};\n                this.C = [];\n                this.P = null;\n                if (typeof A === \"object\") {\n                    for (var _name in A) {\n                        if (A.hasOwnProperty(_name)) this.set(_name, A[_name]);\n                    }\n                }\n                if (typeof C === \"object\" && C instanceof Array) this.add(C);\n                return this;\n            },\n            writable: true,\n            configurable: true\n        },\n        type: {\n\n            /*  check the type of an AST node  */\n            value: function type(T) {\n                if (arguments.length === 0) return this.T;else if (arguments.length === 1) {\n                    this.T = T;\n                    return this;\n                } else throw new Error(\"type: invalid number of arguments\");\n            },\n            writable: true,\n            configurable: true\n        },\n        pos: {\n\n            /*  set the parsing position   */\n            value: function pos(L, C, O) {\n                if (arguments.length === 0) return this.L;else if (arguments.length <= 3) {\n                    this.L.L = L || 0;\n                    this.L.C = C || 0;\n                    this.L.O = O || 0;\n                    return this;\n                } else throw new Error(\"pos: invalid number of arguments\");\n            },\n            writable: true,\n            configurable: true\n        },\n        set: {\n\n            /*  set AST node attributes  */\n            value: function set() {\n                var _this = this;\n                var _arguments = arguments;\n                if (arguments.length === 1 && typeof arguments[0] === \"object\") {\n                    (function () {\n                        var args = _arguments;\n                        Object.keys(args[0]).forEach(function (key) {\n                            _this.A[key] = args[0][key];\n                        });\n                    })();\n                } else if (arguments.length === 2) this.A[arguments[0]] = arguments[1];else throw new Error(\"set: invalid arguments\");\n                return this;\n            },\n            writable: true,\n            configurable: true\n        },\n        get: {\n\n            /*  get AST node attributes  */\n            value: function get(key) {\n                if (arguments.length !== 1) throw new Error(\"get: invalid number of arguments\");\n                if (typeof key !== \"string\") throw new Error(\"get: invalid argument\");\n                return this.A[key];\n            },\n            writable: true,\n            configurable: true\n        },\n        attrs: {\n\n            /*  get names of all AST node attributes  */\n            value: function attrs() {\n                return Object.keys(this.A);\n            },\n            writable: true,\n            configurable: true\n        },\n        add: {\n\n            /*  add child AST node(s)  */\n            value: function add() {\n                var _this = this;\n                if (arguments.length === 0) throw new Error(\"add: missing argument(s)\");\n                var _add = function (node, child) {\n                    if (!(typeof child === \"object\" && typeof child.T === \"string\" && typeof child.L === \"object\" && typeof child.A === \"object\" && typeof child.P === \"object\" && (typeof child.C === \"object\" && child.C instanceof Array))) throw new Error(\"add: invalid AST node: \" + JSON.stringify(child));\n                    node.C.push(child);\n                    child.P = node;\n                };\n                if (arguments !== null) {\n                    Array.prototype.slice.call(arguments, 0).forEach(function (arg) {\n                        if (typeof arg === \"object\" && arg instanceof Array) arg.forEach(function (child) {\n                            _add(_this, child);\n                        });else if (arg !== null) _add(_this, arg);\n                    });\n                }\n                return this;\n            },\n            writable: true,\n            configurable: true\n        },\n        del: {\n\n            /*  delete child AST node(s)  */\n            value: function del() {\n                var _this = this;\n                if (arguments.length === 0) throw new Error(\"del: invalid argument\");\n                Array.prototype.slice.call(arguments, 0).forEach(function (arg) {\n                    var found = false;\n                    for (var j = 0; j < _this.C.length; j++) {\n                        if (_this.C[j] === arg) {\n                            _this.C.splice(j, 1);\n                            arg.P = null;\n                            found = true;\n                            break;\n                        }\n                    }\n                    if (!found) throw new Error(\"del: child not found\");\n                });\n                return this;\n            },\n            writable: true,\n            configurable: true\n        },\n        childs: {\n\n            /*  get child AST nodes  */\n            value: function childs() {\n                return this.C;\n            },\n            writable: true,\n            configurable: true\n        },\n        parent: {\n\n            /*  get parent AST node  */\n            value: function parent() {\n                return this.P;\n            },\n            writable: true,\n            configurable: true\n        }\n    });\n\n    return ASTYBase;\n})();\n\nmodule.exports = ASTYBase;\n\n},{}],2:[function(_dereq_,module,exports){\n\"use strict\";\n\nvar _prototypeProperties = function (child, staticProps, instanceProps) { if (staticProps) Object.defineProperties(child, staticProps); if (instanceProps) Object.defineProperties(child.prototype, instanceProps); };\n\n/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nvar ASTYDump = (function () {\n    function ASTYDump() {}\n\n    _prototypeProperties(ASTYDump, null, {\n        dump: {\n            /*  dump the AST recursively  */\n            value: function dump(maxDepth) {\n                if (maxDepth === undefined) maxDepth = Infinity;\n                var out = \"\";\n                this.walk(function (node, depth /*, parent, when */) {\n                    if (depth > maxDepth) return;\n                    for (var i = 0; i < depth; i++) {\n                        out += \"    \";\n                    }out += node.T + \" \";\n                    var keys = Object.keys(node.A);\n                    if (keys.length > 0) {\n                        (function () {\n                            out += \"(\";\n                            var first = true;\n                            keys.forEach(function (key) {\n                                if (!first) out += \", \";else first = false;\n                                out += key + \": \";\n                                var value = node.A[key];\n                                switch (typeof value) {\n                                    case \"string\":\n                                        out += \"\\\"\" + value.replace(/\\n/, \"\\\\n\").replace(/\"/, \"\\\\\\\"\") + \"\\\"\";\n                                        break;\n                                    case \"object\":\n                                        if (value instanceof RegExp) out += \"/\" + value.toString().replace(/^\\//, \"\").replace(/\\/$/, \"\").replace(/\\//g, \"\\\\/\") + \"/\";else out += JSON.stringify(value);\n                                        break;\n                                    default:\n                                        out += JSON.stringify(value);\n                                        break;\n                                }\n                            });\n                            out += \") \";\n                        })();\n                    }\n                    out += \"[\" + node.L.L + \"/\" + node.L.C + \"]\\n\";\n                }, \"downward\");\n                return out;\n            },\n            writable: true,\n            configurable: true\n        }\n    });\n\n    return ASTYDump;\n})();\n\nmodule.exports = ASTYDump;\n\n},{}],3:[function(_dereq_,module,exports){\n\"use strict\";\n\nvar _prototypeProperties = function (child, staticProps, instanceProps) { if (staticProps) Object.defineProperties(child, staticProps); if (instanceProps) Object.defineProperties(child.prototype, instanceProps); };\n\n/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nvar ASTYMerge = (function () {\n    function ASTYMerge() {}\n\n    _prototypeProperties(ASTYMerge, null, {\n        merge: {\n            /*  merge attributes and childs of an AST node  */\n            value: function merge(node, takePos, attrMap) {\n                var _this = this;\n                if (typeof node !== \"object\") throw new Error(\"merge: invalid AST node argument\");\n                if (typeof takePos === \"undefined\") takePos = false;\n                if (typeof attrMap === \"undefined\") attrMap = {};\n                if (takePos) {\n                    var pos = node.pos();\n                    this.pos(pos.L, pos.C, pos.O);\n                }\n                node.attrs().forEach(function (attrSource) {\n                    var attrTarget = typeof attrMap[attrSource] !== \"undefined\" ? attrMap[attrSource] : attrSource;\n                    if (attrTarget !== null) _this.set(attrTarget, node.get(attrSource));\n                });\n                node.childs().forEach(function (child) {\n                    _this.add(child);\n                });\n                return this;\n            },\n            writable: true,\n            configurable: true\n        }\n    });\n\n    return ASTYMerge;\n})();\n\nmodule.exports = ASTYMerge;\n\n},{}],4:[function(_dereq_,module,exports){\n\"use strict\";\n\nvar _prototypeProperties = function (child, staticProps, instanceProps) { if (staticProps) Object.defineProperties(child, staticProps); if (instanceProps) Object.defineProperties(child.prototype, instanceProps); };\n\n/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nvar ASTYWalk = (function () {\n    function ASTYWalk() {}\n\n    _prototypeProperties(ASTYWalk, null, {\n        walk: {\n            /*  walk the AST recursively  */\n            value: function walk(cb, when) {\n                if (typeof when === \"undefined\") when = \"downward\";\n                var _walk = function (node, depth, parent) {\n                    if (when === \"downward\" || when === \"both\") cb.call(null, node, depth, parent, \"downward\");\n                    node.C.forEach(function (child) {\n                        _walk(child, depth + 1, node);\n                    });\n                    if (when === \"upward\" || when === \"both\") cb.call(null, node, depth, parent, \"upward\");\n                };\n                _walk(this, 0, null);\n                return this;\n            },\n            writable: true,\n            configurable: true\n        }\n    });\n\n    return ASTYWalk;\n})();\n\nmodule.exports = ASTYWalk;\n\n},{}],5:[function(_dereq_,module,exports){\n\"use strict\";\n\nvar _prototypeProperties = function (child, staticProps, instanceProps) { if (staticProps) Object.defineProperties(child, staticProps); if (instanceProps) Object.defineProperties(child.prototype, instanceProps); };\n\n/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nvar ASTYBase = _dereq_(\"./asty-base.js\");\nvar ASTYMerge = _dereq_(\"./asty-merge.js\");\nvar ASTYWalk = _dereq_(\"./asty-walk.js\");\nvar ASTYDump = _dereq_(\"./asty-dump.js\");\n\nvar ASTYCtx = (function () {\n    function ASTYCtx() {\n        var _this = this;\n        if (!(this instanceof ASTYCtx)) return new ASTYCtx();\n        this.ASTYNode = function () {};\n        var mixins = [[ASTYBase, \"init\", \"type\", \"pos\", \"set\", \"get\", \"attrs\", \"add\", \"del\", \"childs\", \"parent\"], [ASTYMerge, \"merge\"], [ASTYWalk, \"walk\"], [ASTYDump, \"dump\"]];\n        mixins.forEach(function (mixin) {\n            var proto = mixin[0].prototype;\n            mixin.slice(1).forEach(function (method) {\n                _this.ASTYNode.prototype[method] = proto[method];\n            });\n        });\n        return this;\n    }\n\n    _prototypeProperties(ASTYCtx, null, {\n        extend: {\n            value: function extend(mixin) {\n                for (var method in mixin) {\n                    if (mixin.hasOwnProperty(method)) this.ASTYNode.prototype[method] = mixin[method];\n                }return this;\n            },\n            writable: true,\n            configurable: true\n        },\n        create: {\n            value: function create(type) {\n                return new this.ASTYNode().init(type);\n            },\n            writable: true,\n            configurable: true\n        },\n        isA: {\n            value: function isA(node) {\n                return typeof node === \"object\" && node instanceof this.ASTYNode && typeof node.ASTy === \"boolean\" && node.ASTy === true;\n            },\n            writable: true,\n            configurable: true\n        }\n    });\n\n    return ASTYCtx;\n})();\n\nmodule.exports = ASTYCtx;\n\n},{\"./asty-base.js\":1,\"./asty-dump.js\":2,\"./asty-merge.js\":3,\"./asty-walk.js\":4}]},{},[1,2,3,4,5])(5)\n});"]}